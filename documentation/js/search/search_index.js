var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/Addon.html",[0,0.202,1,3.261]],["body/classes/Addon.html",[0,0.178,1,4.095,2,0.921,3,0.069,4,0.061,5,0.061,6,3.398,7,1.67,8,2.716,9,0.64,10,1.629,11,5.056,12,3.83,13,5.14,14,2.765,15,2.056,16,1.801,17,2.056,18,1.476,19,0.009,20,1.973,21,2.548,22,1.775,23,3.021,24,2.237,25,2.528,26,2.528,27,1.444,28,3.852,29,1.889,30,3.09,31,3.852,32,2.449,33,3.629,34,3.852,35,3.852,36,2.001,37,1.443,38,2.461,39,1.484,40,1.443,41,1.484,42,1.443,43,1.484,44,0.114,45,2.113,46,3.447,47,1.144,48,2.875,49,1.484,50,0.069,51,1.618,52,1.618,53,1.618,54,1.618,55,1.571,56,1.667,57,1.667,58,1.667,59,2.875,60,0.004,61,0.006,62,0.004]],["title/controllers/AddonsController.html",[63,0.927,64,3.261]],["body/controllers/AddonsController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,64,5.736,65,1.399,66,5.681,67,2.481,68,4.807,69,0.779,70,6.44]],["title/modules/AddonsModule.html",[71,0.927,72,3.059]],["body/modules/AddonsModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,64,5.668,65,1.498,69,0.654,71,1.611,72,5.916,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,80,4.766,81,4.766,82,5.916,83,2.515,84,1.97,85,1.97,86,5.403,87,5.403,88,5.403]],["title/injectables/AddonsService.html",[82,3.059,89,0.927]],["body/injectables/AddonsService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,82,5.412,89,1.64,90,2.372,91,5.739]],["title/classes/Address.html",[0,0.202,92,2.619]],["body/classes/Address.html",[0,0.123,2,0.636,3,0.048,4,0.042,5,0.042,7,1.267,8,2.366,9,0.442,10,1.236,14,2.217,15,1.559,16,1.366,17,1.559,18,1.518,19,0.009,20,2.038,22,1.226,23,2.291,24,1.697,25,1.917,26,1.917,27,1.492,29,2.154,30,3.293,32,1.857,36,1.517,37,0.997,38,1.973,39,1.025,40,0.997,41,1.025,42,0.997,43,1.025,44,0.104,45,1.603,46,2.615,47,0.791,49,1.025,50,0.048,51,1.118,52,1.118,53,1.118,54,1.118,55,1.085,56,1.152,57,1.152,58,1.152,60,0.003,61,0.004,62,0.003,92,2.495,93,2.348,94,2.714,95,4.121,96,4.121,97,4.121,98,4.121,99,4.121,100,4.121,101,3.823,102,4.121,103,2.7,104,4.121,105,4.664,106,2.662,107,2.348,108,3.606,109,2.662,110,2.662,111,1.747,112,1.863,113,2.662,114,3.347,115,2.662,116,2.662,117,2.662,118,2.662,119,2.662,120,2.348,121,2.662,122,2.662,123,2.662,124,3.606,125,2.662,126,2.662,127,3.731,128,3.472,129,1.025,130,1.359,131,2.662,132,0.945]],["title/classes/AddressRepository.html",[0,0.202,133,3.059]],["body/classes/AddressRepository.html",[0,0.188,2,0.97,3,0.073,4,0.064,5,0.064,7,1.734,9,0.675,14,2.464,18,0.745,19,0.009,27,0.745,44,0.128,47,1.206,50,0.073,60,0.004,61,0.006,62,0.004,92,4.273,94,3.016,95,4.58,96,4.58,97,4.58,98,4.58,99,4.58,100,4.58,101,4.25,102,4.58,103,2.974,104,4.58,130,2.073,133,3.986,134,3.582,135,3.773,136,2.256,137,2.761,138,5.29,139,3.266,140,5.285,141,4.061,142,1.705,143,1.705,144,1.705,145,1.609,146,2.464,147,2.434,148,3.266,149,1.757,150,3.266,151,4.061,152,3.136,153,1.934,154,4.061,155,4.061,156,4.061,157,4.061,158,4.061,159,4.061,160,4.061,161,4.061,162,4.061,163,4.061,164,3.582,165,4.061,166,1.705,167,4.061,168,1.609]],["title/controllers/AdressesController.html",[63,0.927,169,3.261]],["body/controllers/AdressesController.html",[0,0.216,3,0.084,4,0.073,5,0.073,9,0.776,18,1.15,19,0.009,20,1.171,27,0.857,44,0.141,50,0.084,60,0.005,61,0.006,62,0.005,63,0.991,65,1.015,67,1.799,69,0.565,92,3.758,129,1.799,136,2.483,137,2.971,138,5.691,139,3.757,140,5.371,142,1.961,143,1.961,144,1.961,145,1.851,146,2.713,148,3.757,149,2.021,150,3.757,166,1.961,168,1.851,169,4.678,170,4.12,171,4.12,172,3.486,173,4.671,174,4.671,175,3.597,176,4.146,177,3.089,178,3.089,179,4.678,180,3.089,181,4.68,182,4.12,183,4.671,184,4.671,185,2.935,186,3.089,187,4.671]],["title/modules/AdressesModule.html",[71,0.927,188,3.059]],["body/modules/AdressesModule.html",[0,0.223,3,0.086,4,0.076,5,0.076,19,0.009,44,0.147,50,0.086,60,0.005,61,0.006,62,0.005,65,1.389,69,0.582,71,1.523,73,1.664,74,1.664,75,1.755,76,1.755,77,1.664,78,2.619,79,2.619,83,2.332,84,1.755,85,1.755,133,3.368,169,5.36,181,5.826,182,4.244,188,5.85,189,4.244,190,4.244,191,4.244,192,4.812,193,2.885,194,2.217,195,3.387,196,3.183,197,4.244,198,4.812,199,2.885,200,4.812]],["title/injectables/AdressesService.html",[89,0.927,181,2.89]],["body/injectables/AdressesService.html",[0,0.202,3,0.078,4,0.069,5,0.069,9,0.726,18,1.099,19,0.009,27,1.099,44,0.142,50,0.078,60,0.004,61,0.006,62,0.004,69,0.528,89,1.27,90,1.592,92,2.618,103,2.492,133,5.572,136,2.373,137,2.87,138,4.817,139,4.817,140,5.097,142,2.515,143,2.515,144,2.515,145,1.73,146,2.591,148,3.512,149,1.89,150,3.512,152,2.405,153,2.079,166,2.515,168,1.73,181,3.961,194,2.012,195,4.318,196,2.888,197,3.852,201,3.852,202,3.961,203,4.367,204,4.367,205,4.367,206,3.512,207,2.888,208,4.367,209,3.961,210,3.512,211,4.367,212,3.512,213,4.367,214,3.852,215,4.367]],["title/controllers/AppController.html",[63,0.927,216,3.515]],["body/controllers/AppController.html",[0,0.261,3,0.101,4,0.089,5,0.089,9,0.938,19,0.009,20,1.414,27,1.035,29,1.82,44,0.127,50,0.101,60,0.006,61,0.007,62,0.006,63,1.503,65,1.226,69,0.683,136,2.808,145,2.235,168,2.235,185,3.545,216,5.701,217,4.977,218,7.17,219,5.642,220,5.783,221,5.642,222,5.642,223,5.642]],["title/modules/AppModule.html",[71,0.927,224,3.261]],["body/modules/AppModule.html",[0,0.118,3,0.046,4,0.04,5,0.04,19,0.009,44,0.153,50,0.046,60,0.003,61,0.004,62,0.003,69,0.309,71,1.057,72,4.58,73,0.882,74,0.882,75,0.93,76,0.93,77,0.882,78,0.93,79,0.93,83,1.467,84,0.93,85,0.93,188,4.58,193,1.529,194,1.175,199,2.412,224,6.711,225,2.249,226,2.249,227,4.58,228,4.58,229,4.58,230,4.58,231,4.58,232,4.58,233,4.58,234,4.58,235,4.58,236,4.58,237,4.58,238,4.58,239,4.58,240,4.58,241,4.58,242,4.58,243,4.58,244,4.58,245,4.58,246,2.55,247,2.55,248,2.55,249,2.55,250,2.55,251,2.55,252,2.55,253,2.051,254,2.55,255,2.55,256,2.55,257,2.55,258,2.55,259,2.55,260,2.55,261,2.55,262,2.55,263,2.55,264,2.55,265,2.55,266,2.55,267,2.55,268,2.55,269,2.55,270,2.55]],["title/injectables/AppService.html",[89,0.927,220,3.261]],["body/injectables/AppService.html",[0,0.273,3,0.106,4,0.093,5,0.093,9,0.981,19,0.009,27,1.083,29,1.872,44,0.106,50,0.106,60,0.006,61,0.007,62,0.006,69,0.714,89,1.546,90,2.153,136,2.888,145,2.339,168,2.339,218,7.286,220,5.441,271,5.207,272,5.904,273,5.904,274,5.904,275,5.904]],["title/classes/Catalog.html",[0,0.202,11,2.746]],["body/classes/Catalog.html",[0,0.126,1,4.742,2,0.651,3,0.049,4,0.043,5,0.043,7,1.29,8,2.389,9,0.453,10,1.258,11,2.663,15,1.588,16,1.391,17,1.588,18,1.447,19,0.009,20,1.82,22,2.703,23,3.999,24,1.728,25,3.513,26,3.436,27,1.332,29,0.699,36,1.545,37,1.021,38,2.003,39,1.049,40,1.021,41,1.049,42,1.021,43,1.049,44,0.126,45,1.632,47,0.809,49,1.049,50,0.049,51,2.668,52,2.668,53,2.668,54,2.668,55,2.591,56,2.75,57,2.75,58,2.75,60,0.003,61,0.004,62,0.003,68,3.881,108,3.457,124,2.431,276,2.403,277,4.586,278,4.586,279,4.586,280,2.561,281,4.718,282,2.724,283,4.448,284,2.724,285,4.448,286,2.724,287,4.448,288,2.724,289,1.712,290,1.712,291,2.724,292,2.244,293,5.111,294,1.443,295,2.724,296,2.724,297,2.724,298,2.403,299,1.297,300,1.443,301,2.724,302,2.724,303,2.724,304,2.724]],["title/controllers/CatalogsController.html",[63,0.927,305,3.261]],["body/controllers/CatalogsController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,305,5.736,306,5.681,307,6.44,308,6.44]],["title/modules/CatalogsModule.html",[71,0.927,227,3.059]],["body/modules/CatalogsModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,227,5.916,305,5.668,309,4.766,310,4.766,311,5.916,312,5.403,313,5.403,314,5.403]],["title/injectables/CatalogsService.html",[89,0.927,311,3.059]],["body/injectables/CatalogsService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,311,5.412,315,5.739]],["title/controllers/CitiesController.html",[63,0.927,316,3.261]],["body/controllers/CitiesController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,316,5.736,317,5.681,318,6.44,319,6.44]],["title/modules/CitiesModule.html",[71,0.927,228,3.059]],["body/modules/CitiesModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,228,5.916,316,5.668,320,4.766,321,4.766,322,5.916,323,5.403,324,5.403,325,5.403]],["title/injectables/CitiesService.html",[89,0.927,322,3.059]],["body/injectables/CitiesService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,322,5.412,326,5.739]],["title/classes/City.html",[0,0.202,94,2.314]],["body/classes/City.html",[0,0.185,2,0.955,3,0.072,4,0.063,5,0.063,7,1.715,8,2.749,9,0.664,10,1.673,15,2.11,16,1.849,17,2.11,18,1.49,19,0.009,20,2.036,24,2.296,27,1.49,29,2.042,30,3.467,32,2.513,36,2.054,37,1.498,38,2.512,39,1.54,40,1.498,41,1.54,42,1.498,43,1.54,44,0.101,45,2.169,47,1.187,49,1.54,50,0.072,60,0.004,61,0.006,62,0.004,94,2.983,101,4.866,111,2.365,132,1.999,327,3.526,328,6.52,329,4.313,330,6.52,331,6.52,332,3.997,333,3.101,334,3.997,335,3.539,336,3.997,337,3.997,338,3.997]],["title/classes/CityRepository.html",[0,0.202,339,3.059]],["body/classes/CityRepository.html",[0,0.286,2,1.479,3,0.111,4,0.097,5,0.097,7,2.285,19,0.009,44,0.134,47,1.838,50,0.111,60,0.006,61,0.008,62,0.006,94,3.279,135,4.634,147,3.711,339,5.253,340,5.46,341,6.19,342,6.19]],["title/classes/Combo.html",[0,0.202,283,3.059]],["body/classes/Combo.html",[0,0.135,2,0.699,3,0.052,4,0.046,5,0.046,7,1.362,8,2.458,9,0.486,10,1.329,11,4.669,12,3.259,13,4.373,14,2.352,15,1.677,16,1.469,17,1.677,18,1.505,19,0.009,20,2.035,21,1.934,22,1.347,23,2.464,24,1.825,25,2.062,26,2.062,27,1.489,29,2.029,30,3.025,32,2.718,33,2.96,36,1.632,37,1.096,38,2.094,39,1.126,40,1.096,41,1.126,42,1.096,43,1.126,44,0.109,45,1.724,46,2.812,47,0.869,48,2.183,49,1.126,50,0.052,51,1.879,52,1.879,53,1.879,54,1.879,55,1.825,56,1.937,57,1.937,58,1.937,59,2.183,60,0.003,61,0.005,62,0.003,68,4.057,108,2.131,111,1.879,132,1.589,283,3.133,292,2.37,294,1.549,300,1.549,329,3.596,333,2.464,335,2.812,343,2.579,344,4.795,345,3.549,346,4.795,347,4.795,348,4.846,349,2.924,350,2.924,351,2.924,352,2.924,353,2.352,354,2.924,355,2.924,356,2.924,357,2.924,358,2.924,359,2.924,360,1.934]],["title/controllers/CombosController.html",[63,0.927,361,3.261]],["body/controllers/CombosController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,277,5.681,361,5.736,362,5.681,363,6.44]],["title/modules/CombosModule.html",[71,0.927,229,3.059]],["body/modules/CombosModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,229,5.916,361,5.668,364,4.766,365,4.766,366,5.916,367,5.403,368,5.403,369,5.403]],["title/injectables/CombosService.html",[89,0.927,366,3.059]],["body/injectables/CombosService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,366,5.412,370,5.739]],["title/classes/Complaint.html",[0,0.202,371,2.89]],["body/classes/Complaint.html",[0,0.181,2,0.935,3,0.07,4,0.061,5,0.061,7,1.688,8,2.729,9,0.65,10,1.647,15,2.078,16,1.821,17,2.078,18,1.482,19,0.009,20,2.025,24,2.261,27,1.482,29,2.11,30,3.108,36,2.022,37,1.466,38,2.482,39,1.507,40,1.466,41,1.507,42,1.466,43,1.507,44,0.115,45,2.136,47,1.162,49,1.507,50,0.07,60,0.004,61,0.006,62,0.004,105,3.882,111,2.329,112,2.738,120,3.45,127,3.647,128,3.325,129,1.507,132,1.389,371,3.668,372,3.45,373,4.262,374,5.183,375,4.809,376,4.809,377,5.183,378,3.911,379,3.911,380,3.911,381,3.911,382,3.911,383,3.911,384,3.911]],["title/classes/ComplaintRepository.html",[0,0.202,385,3.059]],["body/classes/ComplaintRepository.html",[0,0.214,2,1.104,3,0.083,4,0.073,5,0.073,7,1.894,9,0.768,18,0.848,19,0.009,27,0.848,44,0.126,47,1.372,50,0.083,60,0.005,61,0.006,62,0.005,135,4.037,136,2.465,137,2.954,142,1.94,143,1.94,144,1.94,145,1.83,146,2.693,147,2.77,149,1.999,152,3.427,153,2.2,166,1.94,168,1.83,371,4.979,373,4.116,374,5.005,375,4.644,376,4.644,377,5.005,385,4.356,386,4.075,387,5.66,388,3.716,389,5.471,390,4.62,391,3.716,392,3.716,393,4.62,394,4.62,395,4.62,396,4.62,397,4.62,398,4.62,399,4.62]],["title/controllers/ComplaintsController.html",[63,0.927,400,3.261]],["body/controllers/ComplaintsController.html",[0,0.216,3,0.084,4,0.073,5,0.073,9,0.776,18,1.15,19,0.009,20,1.171,27,0.857,44,0.141,50,0.084,60,0.005,61,0.006,62,0.005,63,0.991,65,1.015,67,1.799,69,0.565,129,1.799,136,2.483,137,2.971,142,1.961,143,1.961,144,1.961,145,1.851,146,2.713,149,2.021,166,1.961,168,1.851,172,3.486,175,3.597,176,4.146,177,3.089,178,3.089,179,4.678,180,3.089,185,2.935,186,3.089,371,4.146,387,5.691,388,3.757,389,5.371,391,3.757,392,3.757,400,4.678,401,4.12,402,4.671,403,4.671,404,4.671,405,4.68,406,4.12,407,4.671,408,4.671,409,4.671]],["title/modules/ComplaintsModule.html",[71,0.927,230,3.059]],["body/modules/ComplaintsModule.html",[0,0.238,3,0.092,4,0.081,5,0.081,19,0.009,44,0.146,50,0.092,60,0.005,61,0.007,62,0.005,65,1.451,69,0.622,71,1.573,73,1.778,74,1.778,75,1.875,76,1.875,77,1.778,78,2.705,79,1.875,83,2.435,84,1.875,85,1.875,193,3.082,194,2.369,199,3.082,230,5.839,385,3.599,400,5.536,405,5.517,406,4.535,410,4.535,411,4.535,412,5.142,413,4.535,414,5.142,415,5.142]],["title/injectables/ComplaintsService.html",[89,0.927,405,2.89]],["body/injectables/ComplaintsService.html",[0,0.219,3,0.085,4,0.074,5,0.074,9,0.788,18,1.162,19,0.009,27,1.162,44,0.142,50,0.085,60,0.005,61,0.006,62,0.005,69,0.574,89,1.343,90,1.729,136,2.508,137,2.993,142,2.658,143,2.658,144,2.658,145,1.878,146,2.739,149,2.051,166,1.99,168,1.878,194,2.184,202,4.187,207,3.135,209,3.135,371,3.135,385,5.708,387,5.733,388,3.813,389,5.394,391,3.813,392,3.813,405,4.187,413,4.181,416,4.181,417,4.74,418,4.74,419,4.74,420,4.74,421,4.74]],["title/classes/Coupon.html",[0,0.202,422,3.059]],["body/classes/Coupon.html",[0,0.138,2,0.712,3,0.053,4,0.047,5,0.047,7,1.382,8,2.476,9,0.495,10,1.348,12,3.296,14,2.379,15,1.701,16,1.49,17,1.701,18,1.495,19,0.009,20,2.043,24,1.851,25,2.833,26,2.091,27,1.495,29,1.966,30,3.458,32,2.744,33,3.002,36,2.242,37,1.116,38,2.118,39,1.148,40,1.116,41,1.148,42,1.116,43,1.148,44,0.11,45,1.748,47,0.885,49,1.148,50,0.053,51,1.906,52,1.906,53,1.906,54,1.906,55,1.851,56,1.964,57,1.964,58,1.964,60,0.003,61,0.005,62,0.003,103,2.644,111,1.906,130,1.521,132,1.058,280,2.644,289,2.852,290,2.852,292,2.912,294,1.578,299,1.418,300,2.404,333,1.641,422,3.177,423,2.628,424,5.499,425,4.85,426,5.499,427,5.499,428,5.499,429,5.499,430,2.979,431,2.979,432,2.979,433,2.979,434,2.979,435,2.979,436,2.979,437,2.979,438,2.979,439,2.979]],["title/controllers/CouponsController.html",[63,0.927,440,3.261]],["body/controllers/CouponsController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,440,5.736,441,5.681,442,6.44,443,6.44]],["title/modules/CouponsModule.html",[71,0.927,231,3.059]],["body/modules/CouponsModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,231,5.916,440,5.668,444,4.766,445,4.766,446,5.916,447,5.403,448,5.403,449,5.403]],["title/injectables/CouponsService.html",[89,0.927,446,3.059]],["body/injectables/CouponsService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,446,5.412,450,5.739]],["title/classes/CreateAddressDTO.html",[0,0.202,140,2.89]],["body/classes/CreateAddressDTO.html",[0,0.217,2,0.745,3,0.056,4,0.049,5,0.049,9,0.518,10,1.395,14,2.446,18,1.492,19,0.009,20,2.039,27,1.492,29,2.195,32,2.097,44,0.101,50,0.056,60,0.003,61,0.005,62,0.003,94,2.994,95,4.547,96,4.547,97,4.547,98,4.547,99,4.547,100,4.547,101,4.219,102,4.547,103,2.588,104,4.547,111,1.973,127,3.734,128,4.254,129,1.201,130,1.591,140,3.107,451,7.256,452,2.75,453,4.726,454,3.118,455,3.118,456,3.118,457,3.118,458,3.118,459,2.75,460,3.118,461,4.144,462,3.118,463,3.118,464,3.118,465,3.118,466,3.118,467,3.118,468,3.118,469,3.118,470,3.118,471,3.118,472,3.506,473,4.698,474,4.649,475,4.405,476,5.13,477,3.288,478,2.75,479,1.717,480,2.75]],["title/classes/CreateComplaintDTO.html",[0,0.202,389,2.89]],["body/classes/CreateComplaintDTO.html",[0,0.265,2,0.977,3,0.073,4,0.064,5,0.064,9,0.679,10,1.699,18,1.381,19,0.009,20,1.886,22,1.883,24,1.666,27,1.381,29,2.097,44,0.118,50,0.073,60,0.004,61,0.006,62,0.004,111,2.402,127,3.707,128,3.429,129,1.574,132,2.671,373,4.365,374,5.308,375,6.096,376,4.925,377,5.308,389,3.783,472,4.269,474,3.956,475,4.004,477,4.004,479,2.251,481,6.878,482,3.605,483,3.287,484,3.605,485,4.087,486,3.605,487,4.087,488,3.05,489,4.087,490,4.087,491,4.087,492,4.087,493,4.087,494,4.087,495,4.004,496,4.087,497,4.269,498,5.72]],["title/classes/CreateImageDTO.html",[0,0.202,499,3.059]],["body/classes/CreateImageDTO.html",[0,0.305,2,1.204,3,0.09,4,0.079,5,0.079,9,0.838,10,1.958,18,1.484,19,0.009,20,1.653,27,1.21,29,1.693,44,0.131,50,0.09,60,0.005,61,0.007,62,0.005,127,3.619,129,1.941,132,2.341,474,4.404,479,2.775,488,3.762,495,3.528,497,3.762,499,4.615,500,6.48,501,4.446,502,6.48,503,5.04,504,5.04,505,5.661,506,5.04,507,5.04,508,6.593,509,3.762,510,4.054,511,4.446]],["title/classes/CreateNotificationDTO.html",[0,0.202,512,2.89]],["body/classes/CreateNotificationDTO.html",[0,0.229,2,0.8,3,0.06,4,0.053,5,0.053,9,0.556,10,1.471,14,2.552,16,2.542,18,1.383,19,0.009,20,1.89,22,2.282,24,1.365,27,1.383,29,2.12,44,0.106,50,0.06,60,0.003,61,0.005,62,0.003,103,2.377,127,3.589,128,3.535,129,1.289,132,2.314,175,3.384,280,2.377,376,4.865,453,3.467,474,3.535,475,4.563,476,3.9,477,4.128,479,1.843,488,2.498,495,3.467,497,3.697,512,3.276,513,6.828,514,2.692,515,4.743,516,4.128,517,6.002,518,4.743,519,5.202,520,3.347,521,3.347,522,3.347,523,3.347,524,3.347,525,6.518,526,3.347,527,3.347,528,4.953,529,4.953,530,3.347,531,3.347,532,3.347,533,4.953,534,4.369,535,3.347,536,2.952,537,4.369,538,4.953,539,3.347,540,3.347]],["title/classes/CreateRatingDTO.html",[0,0.202,541,2.89]],["body/classes/CreateRatingDTO.html",[0,0.266,2,0.983,3,0.074,4,0.065,5,0.065,9,0.684,10,1.707,14,2.865,18,1.434,19,0.009,20,1.959,27,1.434,29,2.162,32,2.564,44,0.103,50,0.074,60,0.004,61,0.006,62,0.004,103,2.415,127,3.849,128,3.444,129,1.584,132,1.46,280,2.415,453,4.022,461,3.628,474,4.521,475,4.022,476,4.741,477,4.635,479,2.265,483,3.308,486,5.068,541,3.8,542,7.074,543,3.308,544,3.647,545,4.635,546,4.635,547,4.113,548,4.113,549,4.113,550,4.113,551,3.628,552,3.628,553,4.113,554,4.622,555,4.113]],["title/classes/CreateUserDTO.html",[0,0.202,556,2.89]],["body/classes/CreateUserDTO.html",[0,0.235,2,0.826,3,0.062,4,0.054,5,0.054,9,0.574,10,1.506,18,1.463,19,0.009,20,1.998,27,1.463,29,2.173,36,1.849,44,0.108,50,0.062,60,0.004,61,0.005,62,0.004,127,3.992,129,1.331,132,1.801,453,3.55,474,4.226,475,4.935,476,4.663,477,3.55,479,1.903,488,2.579,495,2.419,497,2.579,518,4.833,556,3.354,557,7.148,558,3.048,559,4.833,560,4.484,561,4.833,562,5.83,563,6.008,564,4.833,565,4.484,566,6.008,567,3.455,568,3.455,569,3.455,570,3.455,571,3.455,572,3.455,573,3.455,574,3.455,575,3.455,576,3.455,577,3.455,578,3.455,579,3.455,580,3.455,581,3.455,582,3.455,583,5.072,584,5.072,585,3.455,586,3.455,587,3.455,588,3.455,589,3.455]],["title/classes/DefaultEntity.html",[0,0.202,8,1.551]],["body/classes/DefaultEntity.html",[0,0.241,2,1.244,3,0.093,4,0.082,5,0.082,7,2.049,8,2.39,9,0.865,10,1.999,15,2.796,16,2.45,17,2.796,18,1.369,19,0.009,20,1.87,27,1.369,29,1.728,36,2.877,37,2.796,40,2.522,42,2.796,44,0.093,47,1.546,50,0.093,60,0.005,61,0.007,62,0.005,590,4.591,591,7.462,592,5.205,593,5.205,594,5.205,595,5.205]],["title/classes/Favorite.html",[0,0.202,596,3.515]],["body/classes/Favorite.html",[0,0.18,2,0.932,3,0.07,4,0.061,5,0.061,7,1.685,8,2.727,9,0.648,10,1.644,15,2.073,16,1.817,17,2.073,18,1.357,19,0.009,20,1.853,24,2.855,25,3.226,26,2.55,27,1.357,29,1.001,36,2.018,37,1.461,38,2.478,39,1.502,40,1.461,41,1.502,42,1.461,43,1.502,44,0.125,45,2.132,47,1.158,49,1.502,50,0.07,51,2.324,52,2.324,53,2.324,54,2.324,55,2.256,56,2.395,57,2.395,58,2.395,60,0.004,61,0.006,62,0.004,103,2.88,124,4.017,130,1.99,280,2.88,289,3.477,290,3.477,292,3.407,294,2.065,299,1.857,300,2.931,596,4.451,597,3.439,598,3.899,599,3.899]],["title/controllers/FavoritesController.html",[63,0.927,600,3.261]],["body/controllers/FavoritesController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,600,5.736,601,5.681,602,6.44,603,6.44]],["title/modules/FavoritesModule.html",[71,0.927,232,3.059]],["body/modules/FavoritesModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,232,5.916,600,5.668,604,4.766,605,4.766,606,5.916,607,5.403,608,5.403,609,5.403]],["title/injectables/FavoritesService.html",[89,0.927,606,3.059]],["body/injectables/FavoritesService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,606,5.412,610,5.739]],["title/classes/Image.html",[0,0.202,345,2.153]],["body/classes/Image.html",[0,0.132,2,0.68,3,0.051,4,0.045,5,0.045,7,1.334,8,2.431,9,0.473,10,1.302,15,1.642,16,1.439,17,1.642,18,1.536,19,0.009,20,2.045,22,1.311,24,1.787,27,1.497,29,2.016,30,3.297,32,3.056,36,1.598,37,1.066,38,2.059,39,1.096,40,1.066,41,1.096,42,1.066,43,1.096,44,0.107,45,1.688,47,0.845,49,1.096,50,0.051,60,0.003,61,0.004,62,0.003,105,3.068,108,3.885,111,2.521,112,3.741,114,5.215,124,4.094,127,3.926,129,1.096,132,1.898,345,2.159,505,3.741,509,2.124,510,2.289,611,2.51,612,4.299,613,4.299,614,3.989,615,3.989,616,3.989,617,4.299,618,4.299,619,4.299,620,4.299,621,3.989,622,2.51,623,2.846,624,2.846,625,2.846,626,2.846,627,2.846,628,2.846,629,2.846,630,2.846,631,2.846,632,2.846,633,2.846,634,2.289]],["title/classes/ImageDTO.html",[0,0.202,635,3.059]],["body/classes/ImageDTO.html",[0,0.227,2,0.789,3,0.059,4,0.052,5,0.052,9,0.549,10,1.457,18,1.541,19,0.009,20,2.039,24,1.347,27,1.492,29,2.058,32,3.236,44,0.105,50,0.059,60,0.003,61,0.005,62,0.003,108,1.573,111,2.719,127,4.057,129,1.272,132,1.742,453,4.096,472,4.367,474,4.806,476,4.284,479,1.819,483,3.946,484,2.914,495,2.312,505,4.096,509,2.465,511,2.914,534,5.162,554,5.21,612,4.707,613,4.707,614,4.367,615,4.367,616,4.367,617,4.707,618,4.707,619,4.707,620,4.707,621,4.367,635,3.434,636,2.914,637,5.852,638,3.303,639,3.303,640,3.303,641,3.303,642,3.303,643,3.303,644,3.303,645,4.906,646,3.303,647,3.303,648,3.303,649,3.303,650,3.303,651,3.303]],["title/classes/ImageRepository.html",[0,0.202,652,2.746]],["body/classes/ImageRepository.html",[0,0.199,2,1.026,3,0.077,4,0.067,5,0.067,7,1.802,9,0.714,18,1.243,19,0.009,27,0.788,44,0.121,47,1.275,50,0.077,60,0.004,61,0.006,62,0.004,135,3.887,136,2.345,137,2.845,142,1.803,143,1.803,144,1.803,145,1.701,146,2.561,147,2.574,152,3.26,153,2.044,166,1.803,168,1.701,345,3.597,612,4.761,613,4.761,614,4.418,615,4.418,616,4.418,617,4.761,618,4.761,619,4.761,620,4.761,621,4.418,635,5.543,652,3.719,653,3.787,654,4.761,655,5.919,656,4.293,657,3.787,658,3.453,659,4.293,660,4.293,661,3.787,662,4.293,663,4.293,664,4.293,665,4.293,666,3.787,667,3.787,668,4.293,669,4.293,670,3.787,671,4.293]],["title/controllers/ImagesController.html",[63,0.927,672,3.261]],["body/controllers/ImagesController.html",[0,0.218,3,0.085,4,0.074,5,0.074,9,0.785,18,1.159,19,0.009,20,1.184,27,0.867,44,0.142,50,0.085,60,0.005,61,0.006,62,0.005,63,1.002,65,1.026,67,1.819,69,0.572,129,1.819,136,2.502,137,2.987,142,1.983,143,1.983,144,1.983,145,1.871,149,2.044,166,1.983,168,1.871,172,3.525,175,2.71,176,4.177,177,3.124,178,3.124,179,4.713,180,3.124,185,2.968,186,3.124,345,3.111,499,5.702,654,5.08,658,3.799,672,4.713,673,4.166,674,4.723,675,4.166,676,4.723,677,4.723,678,4.166,679,4.706,680,4.166,681,4.723,682,4.723,683,4.723,684,4.723]],["title/modules/ImagesModule.html",[71,0.927,233,3.059]],["body/modules/ImagesModule.html",[0,0.228,3,0.088,4,0.077,5,0.077,19,0.009,44,0.144,50,0.088,60,0.005,61,0.007,62,0.005,65,1.41,69,0.596,71,1.54,73,1.702,74,1.702,75,1.795,76,1.795,77,1.702,78,2.649,79,2.649,83,2.367,84,1.795,85,1.795,193,2.951,194,2.268,199,2.951,233,5.883,652,3.094,672,5.421,679,5.846,680,4.343,685,4.343,686,4.343,687,4.343,688,4.923,689,4.343,690,4.923,691,4.923]],["title/injectables/ImagesService.html",[89,0.927,679,2.89]],["body/injectables/ImagesService.html",[0,0.141,3,0.055,4,0.048,5,0.048,9,0.508,18,1.443,19,0.009,27,1.025,29,1.434,44,0.138,50,0.055,60,0.003,61,0.005,62,0.003,69,0.37,89,0.982,90,1.115,132,1.086,136,1.834,137,2.958,142,2.346,143,2.346,144,2.346,145,1.834,146,2.003,149,1.323,152,3.077,153,1.456,166,3.072,168,2.791,194,1.409,202,3.062,207,2.022,209,4.121,345,2.281,499,4.93,502,4.928,505,4.362,509,2.282,510,2.459,635,3.911,652,4.426,654,3.724,657,2.697,658,2.459,661,2.697,666,2.697,667,2.697,670,2.697,675,4.084,678,2.697,679,3.062,689,2.697,692,2.697,693,5.587,694,3.058,695,3.058,696,3.058,697,3.058,698,3.058,699,4.084,700,2.459,701,2.459,702,2.459,703,2.459,704,2.459,705,2.459,706,3.058,707,3.058,708,2.697,709,3.058,710,6.695,711,6.695,712,3.058,713,3.058,714,3.058,715,3.058,716,3.058,717,3.058,718,3.058,719,3.058,720,3.058,721,3.058,722,3.058,723,3.058,724,3.058,725,3.058,726,3.058,727,3.058,728,3.058,729,3.058,730,3.058,731,3.058,732,3.058,733,3.058,734,3.058,735,3.058,736,3.058,737,3.058,738,3.058,739,3.058,740,3.058,741,3.058]],["title/classes/Notification.html",[0,0.202,742,2.89]],["body/classes/Notification.html",[0,0.137,2,0.705,3,0.053,4,0.046,5,0.046,7,1.372,8,2.467,9,0.491,10,1.339,14,2.366,15,1.689,16,1.48,17,1.689,18,1.454,19,0.009,20,1.986,22,1.36,24,1.838,25,2.819,26,2.077,27,1.454,29,1.961,30,2.917,36,1.643,37,1.106,38,2.106,39,1.137,40,1.106,41,1.137,42,1.106,43,1.137,44,0.124,45,1.736,47,0.877,49,1.137,50,0.053,51,1.892,52,1.892,53,1.892,54,1.892,55,1.838,56,1.95,57,1.95,58,1.95,60,0.003,61,0.005,62,0.003,103,2.635,105,3.155,108,2.914,111,1.892,112,3.155,114,2.374,124,3.137,127,3.762,129,1.137,130,1.507,132,1.6,175,3.137,280,2.635,290,2.832,292,2.896,294,1.563,299,1.405,300,2.387,348,2.066,373,3.616,515,4.398,516,3.827,517,5.185,536,2.603,537,2.603,742,2.981,743,2.603,744,2.952,745,2.952,746,2.952,747,2.952,748,2.952,749,2.952,750,4.507,751,2.952,752,2.952,753,2.952]],["title/classes/NotificationRepository.html",[0,0.202,754,3.059]],["body/classes/NotificationRepository.html",[0,0.194,2,1.002,3,0.075,4,0.066,5,0.066,7,1.773,9,0.697,14,2.52,18,0.77,19,0.009,27,0.77,44,0.136,47,1.246,50,0.075,60,0.004,61,0.006,62,0.004,103,2.998,130,2.141,135,3.84,136,2.308,137,2.81,142,1.761,143,1.761,144,1.761,145,1.662,146,2.52,147,2.514,149,1.815,152,3.207,153,1.997,166,1.761,168,1.662,175,3.342,280,2.998,299,1.997,512,5.333,515,4.685,516,4.077,517,4.347,742,4.782,754,4.077,755,3.7,756,5.382,757,3.374,758,4.194,759,3.374,760,3.374,761,4.194,762,4.194,763,4.194,764,4.194,765,4.194,766,4.194,767,4.194,768,4.194,769,3.7]],["title/controllers/NotificationsController.html",[63,0.927,770,3.261]],["body/controllers/NotificationsController.html",[0,0.176,3,0.068,4,0.06,5,0.06,9,0.633,16,2.084,18,1.271,19,0.009,20,1.363,27,0.998,29,1.63,44,0.136,50,0.068,60,0.004,61,0.006,62,0.004,63,0.807,65,0.827,67,1.466,69,0.461,129,1.466,136,2.155,137,3.199,142,2.284,143,2.284,144,2.284,145,2.155,146,2.354,149,1.647,153,1.812,166,2.284,168,2.155,172,2.841,175,3.642,176,3.598,177,2.517,178,2.517,179,4.737,180,2.517,185,2.392,186,3.598,512,5.188,742,4.198,756,5.105,757,3.062,759,4.375,760,3.062,770,4.06,771,3.357,772,3.806,773,5.599,774,5.439,775,3.806,776,3.357,777,5.854,778,3.806,779,3.806,780,3.357,781,4.798,782,3.357,783,3.062,784,4.198,785,3.357,786,3.806,787,3.806,788,3.806,789,3.806,790,3.357,791,3.806,792,3.806]],["title/modules/NotificationsModule.html",[71,0.927,234,3.059]],["body/modules/NotificationsModule.html",[0,0.216,3,0.084,4,0.073,5,0.073,19,0.009,44,0.148,50,0.084,60,0.005,61,0.006,62,0.005,65,1.362,69,0.565,71,1.501,73,1.615,74,1.615,75,1.703,76,1.703,77,1.615,78,2.58,79,2.58,83,2.286,84,1.703,85,1.703,193,2.8,194,2.152,195,2.474,196,3.089,199,2.8,234,5.807,754,3.269,770,5.28,784,5.799,785,4.12,793,4.12,794,4.12,795,4.12,796,4.671,797,2.572,798,3.089,799,4.12,800,4.671,801,4.671,802,4.12,803,4.671]],["title/injectables/NotificationsService.html",[89,0.927,784,2.89]],["body/injectables/NotificationsService.html",[0,0.153,3,0.059,4,0.052,5,0.052,9,0.55,16,2.129,18,1.075,19,0.009,27,1.075,29,1.505,44,0.134,50,0.059,60,0.003,61,0.005,62,0.003,69,0.401,89,1.042,90,1.208,103,2.365,111,2.461,136,1.947,137,3.047,142,2.461,143,2.461,144,2.461,145,1.947,146,2.806,149,1.433,152,2.707,153,2.34,166,2.909,168,1.947,194,1.526,195,3.98,196,2.191,202,3.251,206,2.664,207,2.191,209,3.877,210,2.664,212,3.954,214,2.921,280,2.526,373,4.289,512,5.104,518,3.954,519,4.335,742,4.582,754,5.08,756,4.714,757,2.664,759,2.664,760,2.664,769,2.921,773,4.335,776,4.335,784,3.251,797,4.137,798,2.191,799,2.921,804,2.921,805,3.312,806,3.312,807,3.312,808,3.312,809,2.921,810,3.312,811,2.921,812,3.954,813,3.312,814,3.312,815,2.921,816,2.921,817,3.312,818,3.312,819,3.312,820,3.312]],["title/classes/Order.html",[0,0.202,821,3.515]],["body/classes/Order.html",[0,0.106,2,0.546,3,0.041,4,0.036,5,0.036,7,1.122,8,2.213,9,0.38,10,1.095,15,1.381,16,1.21,17,1.381,18,1.528,19,0.009,20,2.087,22,1.053,27,1.528,29,2.062,30,3.303,32,3.046,33,4.123,36,2.638,37,0.856,38,1.785,39,0.88,40,0.856,41,0.88,42,0.856,43,0.88,44,0.104,45,1.42,47,0.679,49,0.88,50,0.041,51,1.548,52,1.548,53,1.548,54,1.548,55,1.503,56,1.595,57,1.595,58,1.595,60,0.002,61,0.004,62,0.002,103,2.391,130,1.166,132,2.423,280,2.391,292,2.454,294,1.21,299,1.088,300,1.952,333,2.03,335,2.316,346,4.086,348,3.721,353,2.965,422,3.243,425,4.086,821,2.965,822,2.015,823,4.633,824,4.633,825,4.633,826,4.633,827,4.633,828,4.633,829,4.633,830,4.633,831,4.633,832,4.633,833,4.633,834,4.633,835,5.499,836,4.633,837,6.019,838,2.285,839,2.285,840,2.285,841,2.285,842,5.015,843,2.285,844,2.285,845,2.285,846,2.285,847,2.285,848,2.285,849,2.285,850,2.285,851,2.285,852,2.285,853,2.285,854,2.285,855,2.285,856,2.285,857,2.285,858,2.285,859,2.285]],["title/controllers/OrdersController.html",[63,0.927,860,3.261]],["body/controllers/OrdersController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,860,5.736,861,5.681,862,6.44,863,6.44]],["title/modules/OrdersModule.html",[71,0.927,235,3.059]],["body/modules/OrdersModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,235,5.916,860,5.668,864,4.766,865,4.766,866,5.916,867,5.403,868,5.403,869,5.403]],["title/injectables/OrdersService.html",[89,0.927,866,3.059]],["body/injectables/OrdersService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,866,5.412,870,5.739]],["title/classes/Product.html",[0,0.202,285,3.059]],["body/classes/Product.html",[0,0.125,2,0.646,3,0.048,4,0.042,5,0.042,7,1.281,8,2.38,9,0.449,10,1.25,11,4.55,12,3.1,13,4.16,14,2.238,15,1.577,16,1.382,17,1.577,18,1.496,19,0.009,20,2.023,21,1.787,22,1.245,23,2.318,24,1.716,25,1.939,26,1.939,27,1.481,29,1.989,30,2.939,32,2.606,33,2.784,36,1.535,37,1.012,38,1.992,39,1.041,40,1.012,41,1.041,42,1.012,43,1.041,44,0.113,45,1.621,46,2.645,47,0.802,48,2.016,49,1.041,50,0.048,51,2.171,52,2.171,53,2.171,54,2.171,55,2.109,56,2.238,57,2.238,58,2.238,59,2.016,60,0.003,61,0.004,62,0.003,68,3.86,108,2.004,111,1.767,132,2.073,285,2.946,287,4.9,292,2.739,294,1.431,298,2.383,300,2.23,329,3.421,333,2.318,335,2.645,344,4.562,345,3.449,347,4.562,348,4.693,353,3.386,360,1.787,842,3.386,871,2.383,872,4.16,873,2.701,874,2.701,875,2.701,876,2.701,877,2.701,878,2.701,879,2.701,880,2.701,881,2.701,882,2.701,883,2.701]],["title/controllers/ProductsController.html",[63,0.927,884,3.261]],["body/controllers/ProductsController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,278,5.681,884,5.736,885,5.681,886,6.44]],["title/modules/ProductsModule.html",[71,0.927,236,3.059]],["body/modules/ProductsModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,236,5.916,884,5.668,887,4.766,888,4.766,889,5.916,890,5.403,891,5.403,892,5.403]],["title/injectables/ProductsService.html",[89,0.927,889,3.059]],["body/injectables/ProductsService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,889,5.412,893,5.739]],["title/classes/PushToken.html",[0,0.202,894,3.515]],["body/classes/PushToken.html",[0,0.169,2,0.871,3,0.065,4,0.057,5,0.057,7,1.605,8,2.665,9,0.606,10,1.565,15,1.975,16,1.731,17,1.975,18,1.42,19,0.009,20,1.94,25,3.127,26,2.428,27,1.42,29,1.59,30,2.85,36,1.922,37,1.365,38,2.386,39,1.403,40,1.365,41,1.403,42,1.365,43,1.403,44,0.121,45,2.03,47,1.082,49,1.403,50,0.065,51,2.213,52,2.213,53,2.213,54,2.213,55,2.149,56,2.281,57,2.281,58,2.281,60,0.004,61,0.005,62,0.004,103,2.823,108,2.51,111,2.213,130,1.859,132,1.293,280,2.823,289,3.312,290,3.312,292,3.28,294,1.93,299,1.735,300,2.792,329,4.096,333,2.006,894,5.792,895,3.213,896,3.643,897,3.643,898,3.643,899,3.643]],["title/controllers/PushtokensController.html",[63,0.927,900,3.261]],["body/controllers/PushtokensController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,900,5.736,901,5.681,902,6.44,903,6.44]],["title/modules/PushtokensModule.html",[71,0.927,237,3.059]],["body/modules/PushtokensModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,237,5.916,900,5.668,904,4.766,905,4.766,906,5.916,907,5.403,908,5.403,909,5.403]],["title/injectables/PushtokensService.html",[89,0.927,906,3.059]],["body/injectables/PushtokensService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,906,5.412,910,5.739]],["title/classes/Rating.html",[0,0.202,544,2.406]],["body/classes/Rating.html",[0,0.143,2,0.74,3,0.055,4,0.049,5,0.049,7,1.422,8,2.512,9,0.514,10,1.388,14,2.435,15,1.751,16,1.534,17,1.751,18,1.447,19,0.009,20,1.977,21,3.09,24,2.556,25,2.889,26,2.889,27,1.447,29,1.886,30,2.826,32,2.085,36,1.704,37,1.16,38,2.168,39,1.192,40,1.16,41,1.192,42,1.16,43,1.192,44,0.12,45,1.8,46,1.945,47,0.919,49,1.192,50,0.055,51,1.962,52,1.962,53,1.962,54,1.962,55,1.905,56,2.022,57,2.022,58,2.022,60,0.003,61,0.005,62,0.003,103,2.758,105,3.27,107,2.73,108,2.985,111,1.962,112,2.166,124,3.862,127,3.315,128,2.801,129,1.192,130,1.58,132,1.099,280,2.679,299,1.474,544,3.706,545,3.94,546,3.94,616,4.2,622,2.73,634,2.489,911,2.73,912,3.095,913,3.095,914,3.095,915,3.095,916,3.095,917,3.095,918,3.095,919,3.095,920,3.095,921,4.672]],["title/classes/RatingRepository.html",[0,0.202,922,3.059]],["body/classes/RatingRepository.html",[0,0.196,2,1.012,3,0.076,4,0.067,5,0.067,7,1.786,9,0.704,14,2.538,18,0.777,19,0.009,27,0.777,44,0.136,47,1.258,50,0.076,60,0.004,61,0.006,62,0.004,103,3.005,130,2.162,135,3.86,136,2.324,137,2.825,142,1.779,143,1.779,144,1.779,145,1.678,146,2.538,147,2.539,149,1.833,152,3.23,153,2.017,166,1.779,168,1.678,280,3.005,299,2.017,541,5.347,544,4.198,545,4.105,546,4.105,922,4.105,923,3.737,924,5.411,925,3.407,926,4.236,927,3.407,928,3.407,929,4.236,930,5.173,931,3.737,932,3.737,933,3.737,934,3.737,935,4.236,936,4.236,937,3.737]],["title/controllers/RatingsController.html",[63,0.927,938,3.261]],["body/controllers/RatingsController.html",[0,0.16,3,0.062,4,0.054,5,0.054,9,0.576,16,2.176,18,1.353,19,0.009,20,1.508,27,1.104,29,1.894,44,0.132,50,0.062,60,0.004,61,0.005,62,0.004,63,0.735,65,0.753,67,1.335,69,0.419,129,1.335,136,2.013,137,3.349,142,2.527,143,2.527,144,2.527,145,2.384,146,3.192,149,1.499,153,1.65,166,2.527,168,2.384,175,3.453,176,3.361,177,2.292,178,2.292,180,2.292,185,2.177,186,3.361,541,4.879,544,3.887,780,3.056,781,4.482,782,3.056,783,2.787,790,3.056,924,4.84,925,2.787,927,4.087,928,2.787,938,3.793,939,3.056,940,3.465,941,4.482,942,5.308,943,3.056,944,5.082,945,3.465,946,3.056,947,3.465,948,3.465,949,3.056,950,5.472,951,3.465,952,3.465,953,5.846,954,3.98,955,3.056,956,3.465,957,3.465,958,3.465,959,3.465,960,3.465,961,3.465,962,3.465]],["title/modules/RatingsModule.html",[71,0.927,238,3.059]],["body/modules/RatingsModule.html",[0,0.223,3,0.086,4,0.076,5,0.076,19,0.009,44,0.15,50,0.086,60,0.005,61,0.007,62,0.005,65,1.392,69,0.584,71,1.526,73,1.67,74,1.67,75,1.761,76,1.761,77,1.67,78,2.624,79,1.761,83,2.338,84,1.761,85,1.761,193,2.895,194,2.225,195,3.395,196,3.195,199,2.895,238,5.739,797,3.53,798,3.195,922,4.487,938,5.37,954,5.423,955,4.26,963,4.26,964,4.26,965,4.83,966,4.26,967,4.83,968,4.26]],["title/injectables/RatingsService.html",[89,0.927,954,2.89]],["body/injectables/RatingsService.html",[0,0.129,3,0.05,4,0.044,5,0.044,9,0.465,14,2.287,16,2.112,18,1.091,19,0.009,27,1.091,29,1.746,44,0.131,50,0.05,60,0.003,61,0.004,62,0.003,69,0.338,89,0.917,90,1.02,103,2.169,136,1.713,137,3.156,142,2.497,143,2.497,144,2.497,145,2.094,146,2.942,149,1.21,152,2.911,153,2.517,166,2.855,168,2.094,194,1.288,195,3.755,196,1.849,202,2.86,206,2.249,207,1.849,209,3.496,210,2.249,212,4.252,280,2.345,541,4.497,544,4.033,545,3.7,546,3.7,783,2.249,797,3.904,798,1.849,809,2.466,811,2.466,812,3.478,815,2.466,816,3.814,922,4.76,924,3.478,925,3.478,927,3.478,928,2.249,930,4.662,931,2.466,932,2.466,933,2.466,934,2.466,937,2.466,941,3.814,942,4.662,946,3.814,949,2.466,950,5.127,954,2.86,966,2.466,969,2.466,970,2.796,971,2.796,972,2.796,973,2.796,974,2.796,975,2.796,976,4.323,977,4.323,978,4.323,979,2.796,980,2.796,981,2.796,982,2.796,983,2.796]],["title/classes/Section.html",[0,0.202,287,3.059]],["body/classes/Section.html",[0,0.186,2,0.958,3,0.072,4,0.063,5,0.063,7,1.718,8,2.751,9,0.666,10,1.676,11,5.108,12,3.915,15,2.115,16,1.853,17,2.115,18,1.461,19,0.009,20,1.943,21,2.652,22,1.847,23,3.108,24,2.301,25,2.6,26,2.6,27,1.422,29,1.918,30,3.137,36,2.058,37,1.502,38,2.516,39,1.545,40,1.502,41,1.545,42,1.502,43,1.545,44,0.117,45,2.174,46,3.547,47,1.191,48,2.993,49,1.545,50,0.072,51,1.684,52,1.684,53,1.684,54,1.684,55,1.635,56,1.735,57,1.735,58,1.735,59,2.993,60,0.004,61,0.006,62,0.004,287,3.951,984,3.537,985,6.532,986,4.01,987,4.01,988,4.01]],["title/controllers/SectionsController.html",[63,0.927,989,3.261]],["body/controllers/SectionsController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,279,5.681,989,5.736,990,5.681,991,6.44]],["title/modules/SectionsModule.html",[71,0.927,239,3.059]],["body/modules/SectionsModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,239,5.916,989,5.668,992,4.766,993,4.766,994,5.916,995,5.403,996,5.403,997,5.403]],["title/injectables/SectionsService.html",[89,0.927,994,3.059]],["body/injectables/SectionsService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,994,5.412,998,5.739]],["title/classes/Setting.html",[0,0.202,999,3.261]],["body/classes/Setting.html",[0,0.122,2,0.631,3,0.047,4,0.041,5,0.041,7,1.259,8,2.357,9,0.439,10,1.228,15,1.549,16,1.357,17,1.549,18,1.503,19,0.009,20,2.053,22,1.905,27,1.503,29,1.782,30,3.101,32,3.206,33,3.814,36,1.508,37,0.989,38,1.963,39,1.017,40,0.989,41,1.017,42,0.989,43,1.017,44,0.103,45,1.592,47,0.784,49,1.017,50,0.047,60,0.003,61,0.004,62,0.003,108,3.9,111,3.017,124,4.122,132,2.683,333,3.956,348,4.648,999,3.085,1000,2.328,1001,5.096,1002,5.096,1003,5.096,1004,5.096,1005,5.096,1006,5.857,1007,5.096,1008,5.096,1009,5.096,1010,5.096,1011,5.857,1012,5.096,1013,5.096,1014,2.64,1015,2.64,1016,2.64,1017,2.64,1018,2.64,1019,2.64,1020,2.64,1021,4.134,1022,2.64,1023,2.64,1024,5.766,1025,2.64,1026,2.64,1027,2.64,1028,2.64,1029,2.64,1030,2.64,1031,2.64,1032,2.64]],["title/controllers/SettingsController.html",[63,0.927,1033,3.261]],["body/controllers/SettingsController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,1033,5.736,1034,5.681,1035,5.681,1036,6.44]],["title/modules/SettingsModule.html",[71,0.927,240,3.059]],["body/modules/SettingsModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,240,5.916,1033,5.668,1037,4.766,1038,4.766,1039,5.916,1040,5.403,1041,5.403,1042,5.403]],["title/injectables/SettingsService.html",[89,0.927,1039,3.059]],["body/injectables/SettingsService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,1039,5.412,1043,5.739]],["title/controllers/SpecialtiesController.html",[63,0.927,1044,3.261]],["body/controllers/SpecialtiesController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,1044,5.736,1045,5.681,1046,6.44,1047,6.44]],["title/modules/SpecialtiesModule.html",[71,0.927,241,3.059]],["body/modules/SpecialtiesModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,241,5.916,1044,5.668,1048,4.766,1049,4.766,1050,5.916,1051,5.403,1052,5.403,1053,5.403]],["title/injectables/SpecialtiesService.html",[89,0.927,1050,3.059]],["body/injectables/SpecialtiesService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,1050,5.412,1054,5.739]],["title/classes/Specialty.html",[0,0.202,1055,3.515]],["body/classes/Specialty.html",[0,0.186,2,0.961,3,0.072,4,0.063,5,0.063,7,1.722,8,2.754,9,0.669,10,1.68,12,3.922,14,2.831,15,2.119,16,1.857,17,2.119,18,1.462,19,0.009,20,1.998,27,1.462,29,2.046,30,3.346,36,2.063,37,1.507,38,2.52,39,1.549,40,1.507,41,1.549,42,1.507,43,1.549,44,0.117,45,2.179,47,1.195,49,1.549,50,0.072,51,1.689,52,1.689,53,1.689,54,1.689,55,1.64,56,1.741,57,1.741,58,1.741,60,0.004,61,0.006,62,0.004,280,2.589,299,1.915,1055,4.55,1056,3.548,1057,5.771,1058,5.771,1059,4.022,1060,4.022,1061,4.022,1062,4.022,1063,4.022,1064,5.657,1065,4.022,1066,4.022]],["title/classes/Store.html",[0,0.202,280,1.593]],["body/classes/Store.html",[0,0.083,2,0.427,3,0.032,4,0.028,5,0.028,7,0.917,8,1.965,9,0.297,10,0.894,12,2.338,15,1.128,16,0.989,17,1.128,18,1.481,19,0.009,20,2.01,22,0.824,23,1.658,24,2.914,25,3.226,26,3.226,27,1.471,29,1.835,30,3.225,32,2.47,36,1.098,37,0.67,38,1.502,39,0.689,40,0.67,41,0.689,42,0.67,43,0.689,44,0.105,45,1.16,47,0.531,49,0.689,50,0.032,51,2.324,52,2.324,53,2.324,54,2.324,55,2.257,56,2.395,57,2.395,58,2.395,60,0.002,61,0.003,62,0.002,92,3.529,94,3.118,108,2.179,111,2.792,124,3.815,132,2.427,280,1.098,281,1.438,289,3.209,292,2.932,293,2.422,294,0.947,300,2.705,329,2.58,333,3.543,335,2.876,345,2.9,360,1.183,516,2.73,544,2.148,560,2.911,565,2.911,634,2.422,999,3.415,1035,3.44,1067,1.577,1068,3.901,1069,3.44,1070,3.901,1071,3.901,1072,3.901,1073,3.901,1074,3.901,1075,3.901,1076,3.901,1077,3.901,1078,3.44,1079,3.901,1080,1.788,1081,3.011,1082,1.788,1083,3.011,1084,1.788,1085,1.788,1086,1.788,1087,1.788,1088,1.788,1089,1.788,1090,1.788,1091,1.788,1092,1.788,1093,1.788,1094,1.788,1095,1.788,1096,1.788,1097,3.011,1098,1.788,1099,3.011,1100,1.788,1101,1.788,1102,1.788,1103,3.811,1104,1.788,1105,1.577,1106,1.335,1107,1.788,1108,1.788,1109,1.788]],["title/classes/StoreRepository.html",[0,0.202,797,2.406]],["body/classes/StoreRepository.html",[0,0.286,2,1.479,3,0.111,4,0.097,5,0.097,7,2.285,19,0.009,44,0.134,47,1.838,50,0.111,60,0.006,61,0.008,62,0.006,135,4.634,147,3.711,280,2.257,797,4.133,1110,5.46,1111,6.19,1112,6.19]],["title/classes/StoreType.html",[0,0.202,1103,3.261]],["body/classes/StoreType.html",[0,0.168,2,0.866,3,0.065,4,0.057,5,0.057,7,1.598,8,2.66,9,0.602,10,1.559,14,2.671,15,1.967,16,1.724,17,1.967,18,1.48,19,0.009,20,1.984,21,2.396,22,1.669,23,2.891,24,2.14,25,2.418,26,2.418,27,1.452,29,1.845,30,3.245,32,2.343,36,1.914,37,1.357,38,2.378,39,1.395,40,1.357,41,1.395,42,1.357,43,1.395,44,0.11,45,2.022,46,3.298,47,1.076,49,1.395,50,0.065,51,1.521,52,1.521,53,1.521,54,1.521,55,1.477,56,1.567,57,1.567,58,1.567,60,0.004,61,0.005,62,0.004,108,2.499,111,2.204,132,1.864,280,2.886,299,1.725,329,4.083,333,2.891,335,3.298,1057,5.445,1103,3.918,1113,3.195,1114,6.173,1115,3.622,1116,3.622,1117,3.622,1118,3.622,1119,3.622,1120,3.622]],["title/controllers/StoresController.html",[63,0.927,1121,3.261]],["body/controllers/StoresController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,1058,5.681,1121,5.736,1122,5.681,1123,6.44]],["title/modules/StoresModule.html",[71,0.927,242,3.059]],["body/modules/StoresModule.html",[0,0.238,3,0.092,4,0.081,5,0.081,19,0.009,44,0.146,50,0.092,60,0.005,61,0.007,62,0.005,65,1.451,69,0.622,71,1.573,73,1.778,74,1.778,75,1.875,76,1.875,77,1.778,78,2.705,79,1.875,83,2.435,84,1.875,85,1.875,193,3.082,194,2.369,199,3.082,242,5.839,797,2.831,802,4.535,1121,5.536,1124,4.535,1125,4.535,1126,5.839,1127,5.142,1128,5.142,1129,5.142,1130,5.142]],["title/injectables/StoresService.html",[89,0.927,1126,3.059]],["body/injectables/StoresService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,1126,5.412,1131,5.739]],["title/controllers/StoretypesController.html",[63,0.927,1132,3.261]],["body/controllers/StoretypesController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,1078,5.681,1132,5.736,1133,5.681,1134,6.44]],["title/modules/StoretypesModule.html",[71,0.927,243,3.059]],["body/modules/StoretypesModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,243,5.916,1132,5.668,1135,4.766,1136,4.766,1137,5.916,1138,5.403,1139,5.403,1140,5.403]],["title/injectables/StoretypesService.html",[89,0.927,1137,3.059]],["body/injectables/StoretypesService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,1137,5.412,1141,5.739]],["title/classes/UpdateNotificationDTO.html",[0,0.202,777,3.261]],["body/classes/UpdateNotificationDTO.html",[0,0.333,2,1.379,3,0.103,4,0.091,5,0.091,9,0.959,10,2.135,18,1.059,19,0.009,20,1.446,27,1.059,44,0.129,50,0.103,60,0.006,61,0.007,62,0.006,111,3.018,127,3.541,129,2.223,373,5.178,459,5.089,472,5.364,479,3.177,514,4.641,777,5.364,1142,6.34,1143,5.77]],["title/classes/UpdateRatingDTO.html",[0,0.202,950,3.059]],["body/classes/UpdateRatingDTO.html",[0,0.286,2,1.096,3,0.082,4,0.072,5,0.072,9,0.762,10,1.839,14,3.034,18,1.377,19,0.009,20,1.882,27,1.377,29,2.074,32,2.764,44,0.111,50,0.082,60,0.005,61,0.006,62,0.005,128,4.699,129,1.767,132,1.628,474,4.699,476,4.965,478,4.046,479,2.526,480,4.046,543,3.689,544,3.86,545,4.907,546,4.907,551,4.046,552,4.046,554,4.981,842,3.689,950,4.335,1144,6.914,1145,4.587,1146,4.587,1147,4.587,1148,7.01,1149,4.587]],["title/classes/UsedCoupon.html",[0,0.202,1150,3.515]],["body/classes/UsedCoupon.html",[0,0.185,2,0.955,3,0.072,4,0.063,5,0.063,7,1.715,8,2.749,9,0.664,10,1.673,15,2.11,16,1.849,17,2.11,18,1.369,19,0.009,20,1.871,25,3.262,26,2.595,27,1.369,29,1.026,36,2.054,37,1.498,38,2.512,39,1.54,40,1.498,41,1.54,42,1.498,43,1.54,44,0.127,45,2.169,47,1.187,49,1.54,50,0.072,51,2.365,52,2.365,53,2.365,54,2.365,55,2.296,56,2.437,57,2.437,58,2.437,60,0.004,61,0.006,62,0.004,103,2.901,130,2.04,289,3.539,290,3.539,292,3.454,294,2.117,300,2.983,422,5.569,1150,4.53,1151,3.526,1152,3.997,1153,3.997,1154,3.997]],["title/controllers/UsedcouponsController.html",[63,0.927,1155,3.261]],["body/controllers/UsedcouponsController.html",[0,0.298,3,0.115,4,0.101,5,0.101,19,0.009,44,0.115,50,0.115,60,0.007,61,0.008,62,0.007,63,1.366,65,1.399,67,2.481,69,0.779,1155,5.736,1156,5.681,1157,6.44,1158,6.44]],["title/modules/UsedcouponsModule.html",[71,0.927,244,3.059]],["body/modules/UsedcouponsModule.html",[0,0.25,3,0.097,4,0.085,5,0.085,19,0.009,44,0.136,50,0.097,60,0.005,61,0.007,62,0.005,65,1.498,69,0.654,71,1.611,73,1.868,74,1.868,75,1.97,76,1.97,77,1.868,78,2.77,79,1.97,83,2.515,84,1.97,85,1.97,244,5.916,1155,5.668,1159,4.766,1160,4.766,1161,5.916,1162,5.403,1163,5.403,1164,5.403]],["title/injectables/UsedcouponsService.html",[89,0.927,1161,3.059]],["body/injectables/UsedcouponsService.html",[0,0.301,3,0.116,4,0.102,5,0.102,19,0.009,44,0.116,50,0.116,60,0.007,61,0.008,62,0.007,69,0.787,89,1.64,90,2.372,1161,5.412,1165,5.739]],["title/classes/User.html",[0,0.202,103,1.593]],["body/classes/User.html",[0,0.117,2,0.602,3,0.045,4,0.04,5,0.04,7,1.213,8,2.311,9,0.419,10,1.184,15,1.493,16,1.309,17,1.493,18,1.458,19,0.009,20,1.967,22,1.161,23,2.195,24,2.654,25,3.257,26,2.821,27,1.44,29,1.952,30,2.734,36,2.049,37,0.944,38,1.904,39,0.971,40,0.944,41,0.971,42,0.944,43,0.971,44,0.116,45,1.535,47,0.748,49,0.971,50,0.045,51,2.36,52,2.36,53,2.36,54,2.36,55,2.292,56,2.432,57,2.432,58,2.432,60,0.003,61,0.004,62,0.003,92,3.67,94,2.977,103,1.453,108,3.1,124,2.837,132,1.995,164,2.223,171,4.361,280,2.486,281,2.027,289,3.107,290,3.107,292,2.977,293,3.206,294,1.335,299,1.2,300,2.619,333,3.095,345,3.359,360,1.667,559,3.977,560,3.69,561,3.977,562,3.69,564,3.977,565,3.69,837,3.515,1105,2.223,1106,1.881,1166,2.223,1167,4.361,1168,2.52,1169,2.52,1170,2.52,1171,2.52,1172,3.515,1173,2.52,1174,2.52,1175,2.52,1176,2.52,1177,2.52,1178,2.52,1179,2.52]],["title/classes/UserRepository.html",[0,0.202,195,2.314]],["body/classes/UserRepository.html",[0,0.183,2,0.946,3,0.071,4,0.062,5,0.062,7,1.703,9,0.658,18,0.727,19,0.009,27,0.727,44,0.138,47,1.176,50,0.071,60,0.004,61,0.006,62,0.004,94,3.734,103,2.571,135,3.722,136,2.216,137,2.724,142,1.663,143,1.663,144,1.663,145,1.569,146,2.421,147,2.374,149,1.714,152,3.081,153,1.885,166,1.663,168,1.569,195,2.963,280,2.955,299,1.885,345,3.992,360,2.619,556,5.248,559,4.5,560,4.175,561,4.5,562,4.175,564,4.5,565,4.175,1106,2.955,1167,6.218,1180,3.493,1181,5.218,1182,3.185,1183,3.96,1184,3.185,1185,3.185,1186,3.96,1187,3.96,1188,3.96,1189,3.96,1190,3.96,1191,3.96,1192,3.96,1193,3.96,1194,3.96,1195,3.96,1196,3.96]],["title/controllers/UsersController.html",[63,0.927,1197,3.261]],["body/controllers/UsersController.html",[0,0.218,3,0.084,4,0.074,5,0.074,9,0.782,18,1.156,19,0.009,20,1.179,27,0.863,44,0.141,50,0.084,60,0.005,61,0.006,62,0.005,63,0.998,65,1.022,67,1.812,69,0.569,103,2.297,129,1.812,136,2.496,137,2.982,142,1.976,143,1.976,144,1.976,145,1.864,146,2.726,149,2.036,166,1.976,168,1.864,175,2.7,176,4.167,177,3.112,178,3.112,180,3.112,185,2.957,186,3.112,556,5.382,943,4.15,953,5.556,1181,5.067,1182,3.785,1184,3.785,1185,3.785,1197,4.701,1198,4.15,1199,4.705,1200,4.705,1201,4.705,1202,4.697,1203,4.15,1204,4.705,1205,4.705,1206,4.705,1207,4.705]],["title/modules/UsersModule.html",[71,0.927,245,3.059]],["body/modules/UsersModule.html",[0,0.21,3,0.081,4,0.071,5,0.071,19,0.009,44,0.15,50,0.081,60,0.005,61,0.006,62,0.005,65,1.335,69,0.549,71,1.479,73,1.569,74,1.569,75,1.655,76,1.655,77,1.569,78,2.542,79,2.542,83,2.242,84,1.655,85,1.655,193,2.72,194,2.091,195,3.256,199,2.72,245,5.764,339,4.303,652,3.863,797,3.385,798,3.001,968,4.003,1197,5.203,1202,5.773,1203,4.003,1208,4.003,1209,4.003,1210,4.003,1211,4.538,1212,4.003,1213,4.003,1214,4.003,1215,4.538]],["title/injectables/UsersService.html",[89,0.927,1202,2.89]],["body/injectables/UsersService.html",[0,0.166,3,0.064,4,0.056,5,0.056,9,0.595,18,0.955,19,0.009,27,0.955,44,0.148,50,0.064,60,0.004,61,0.005,62,0.004,69,0.433,89,1.104,90,1.306,94,3.566,103,1.306,136,2.063,137,2.575,142,2.186,143,2.186,144,2.186,145,1.419,146,2.253,149,1.55,166,2.827,168,1.419,194,1.65,195,3.953,202,3.443,207,2.369,209,4.453,280,2.455,299,1.705,339,5.391,345,3.317,360,2.369,556,4.936,652,4.839,708,3.159,797,4.241,798,2.369,812,4.934,1106,2.673,1181,4.188,1182,4.188,1184,2.881,1185,2.881,1202,3.443,1212,3.159,1213,3.159,1214,3.159,1216,3.159,1217,3.582,1218,3.582,1219,3.582,1220,3.582,1221,3.582,1222,3.582,1223,3.582,1224,3.582,1225,3.582,1226,3.582,1227,3.582,1228,3.582,1229,3.582]],["title/coverage.html",[1230,4.819]],["body/coverage.html",[0,0.394,1,1.27,5,0.027,6,1.501,8,0.604,11,1.07,18,0.312,19,0.009,60,0.002,61,0.003,62,0.002,63,1.671,64,1.27,66,1.501,77,0.589,82,1.192,89,1.671,91,1.501,92,1.02,93,1.501,94,0.902,103,0.621,133,1.192,134,1.501,140,1.126,153,0.811,169,1.27,170,1.501,181,1.126,195,0.902,201,1.501,216,1.369,217,1.501,220,1.27,253,1.369,271,1.501,276,1.501,280,0.621,283,1.192,285,1.192,287,1.192,305,1.27,306,1.501,311,1.192,315,1.501,316,1.27,317,1.501,322,1.192,326,1.501,327,1.501,335,5.702,339,1.192,340,1.501,343,1.501,345,0.839,361,1.27,362,1.501,366,1.192,370,1.501,371,1.126,372,1.501,385,1.192,386,1.501,389,1.126,400,1.27,401,1.501,405,1.126,416,1.501,422,1.192,423,1.501,440,1.27,441,1.501,446,1.192,450,1.501,451,1.501,452,1.501,481,1.501,482,1.501,499,1.192,500,1.501,501,1.501,512,1.126,513,1.501,514,2.323,541,1.126,542,1.501,543,2.323,544,0.937,556,1.126,557,1.501,558,1.501,590,1.501,596,1.369,597,1.501,600,1.27,601,1.501,606,1.192,610,1.501,611,1.501,635,1.192,636,1.501,652,1.07,653,1.501,672,1.27,673,1.501,679,1.126,692,1.501,700,1.369,701,1.369,702,1.369,703,1.369,704,1.369,705,1.369,742,1.126,743,1.501,754,1.192,755,1.501,770,1.27,771,1.501,777,1.27,784,1.126,797,0.937,804,1.501,821,1.369,822,1.501,860,1.27,861,1.501,866,1.192,870,1.501,871,1.501,872,1.369,884,1.27,885,1.501,889,1.192,893,1.501,894,1.369,895,1.501,900,1.27,901,1.501,906,1.192,910,1.501,911,1.501,922,1.192,923,1.501,938,1.27,939,1.501,950,1.192,954,1.126,969,1.501,984,1.501,989,1.27,990,1.501,994,1.192,998,1.501,999,1.27,1000,1.501,1033,1.27,1034,1.501,1039,1.192,1043,1.501,1044,1.27,1045,1.501,1050,1.192,1054,1.501,1055,1.369,1056,1.501,1067,1.501,1103,1.27,1110,1.501,1113,1.501,1121,1.27,1122,1.501,1126,1.192,1131,1.501,1132,1.27,1133,1.501,1137,1.192,1141,1.501,1142,1.501,1144,1.501,1150,1.369,1151,1.501,1155,1.27,1156,1.501,1161,1.192,1165,1.501,1166,1.501,1180,1.501,1197,1.27,1198,1.501,1202,1.126,1216,1.501,1230,1.369,1231,1.702,1232,1.702,1233,1.702,1234,4.433,1235,8.567,1236,1.702,1237,7.039,1238,4.964,1239,1.702,1240,4.433,1241,3.762,1242,3.762,1243,4.758,1244,6.051,1245,1.501,1246,1.501,1247,2.888,1248,2.888,1249,4.433,1250,1.501,1251,1.702,1252,1.702,1253,2.888,1254,2.888,1255,1.702,1256,1.702,1257,1.702,1258,1.702,1259,1.702,1260,1.501]],["title/dependencies.html",[74,1.82,1261,3.635]],["body/dependencies.html",[0,0.322,19,0.009,47,1.625,60,0.006,61,0.007,62,0.006,69,0.662,74,1.892,129,2.108,194,2.522,479,3.014,699,4.827,1262,8.039,1263,5.473,1264,5.473,1265,6.952,1266,5.473,1267,5.473,1268,5.473,1269,5.473,1270,5.473,1271,5.473,1272,5.473,1273,5.473,1274,5.473,1275,5.473,1276,5.473,1277,5.473,1278,5.473,1279,5.473,1280,5.473,1281,5.473,1282,5.473,1283,5.473,1284,5.473,1285,5.473,1286,5.473]],["title/miscellaneous/enumerations.html",[1287,2.405,1288,4.642]],["body/miscellaneous/enumerations.html",[9,0.585,19,0.009,60,0.004,61,0.005,62,0.004,280,1.875,283,3.6,285,4.676,345,2.534,375,3.838,505,3.6,516,3.6,517,3.838,544,3.679,562,3.838,835,4.537,1006,4.537,1011,4.537,1069,4.537,1172,3.107,1260,4.537,1287,2.33,1288,3.107,1289,3.522,1290,3.522,1291,3.522,1292,3.522,1293,3.522,1294,3.522,1295,3.522,1296,3.522,1297,5.143,1298,8.043,1299,5.143,1300,3.522,1301,3.522,1302,3.522,1303,3.522,1304,3.522,1305,3.522,1306,5.143,1307,7.419,1308,3.522,1309,3.522,1310,5.143,1311,6.68,1312,6.68,1313,5.143,1314,5.143,1315,5.143,1316,5.143,1317,5.143,1318,6.68,1319,3.522,1320,5.143,1321,5.143,1322,3.522,1323,4.537,1324,5.143,1325,5.143,1326,5.143,1327,5.143]],["title/miscellaneous/functions.html",[1287,2.405,1328,4.642]],["body/miscellaneous/functions.html",[9,1.127,19,0.008,60,0.007,61,0.008,62,0.007,77,2.903,1250,5.983,1287,4.486,1328,5.983,1329,6.783]],["title/index.html",[9,0.604,1330,3.635,1331,3.635]],["body/index.html",[4,0.073,12,2.78,19,0.009,55,1.891,60,0.005,61,0.006,62,0.005,135,2.661,1230,3.73,1323,4.09,1332,4.637,1333,4.637,1334,6.238,1335,4.637,1336,4.637,1337,4.637,1338,4.637,1339,4.637,1340,4.637,1341,4.637,1342,4.637,1343,4.637,1344,7.049,1345,4.637,1346,4.637,1347,8.28,1348,4.637,1349,4.637,1350,4.637,1351,8.103,1352,4.637,1353,4.637,1354,6.238,1355,4.637,1356,4.637,1357,4.637,1358,4.637,1359,6.238,1360,6.238,1361,4.637,1362,4.637,1363,4.637,1364,6.238,1365,6.238,1366,4.637,1367,4.637,1368,4.637,1369,4.637,1370,4.09,1371,4.637,1372,4.637,1373,4.637,1374,4.637,1375,4.637,1376,4.637,1377,4.637,1378,4.637,1379,4.637,1380,4.637,1381,4.637,1382,4.637,1383,4.637,1384,4.637,1385,4.637,1386,4.637,1387,4.637,1388,4.637]],["title/modules.html",[73,2.072]],["body/modules.html",[19,0.006,60,0.004,61,0.006,62,0.004,72,3.067,73,1.515,188,3.067,224,3.27,227,3.067,228,3.067,229,3.067,230,3.067,231,3.067,232,3.067,233,3.067,234,3.067,235,3.067,236,3.067,237,3.067,238,3.067,239,3.067,240,3.067,241,3.067,242,3.067,243,3.067,244,3.067,245,3.067,1370,7.978,1389,9.045,1390,9.045,1391,9.045]],["title/overview.html",[1392,5.285]],["body/overview.html",[2,0.579,19,0.009,60,0.002,61,0.004,62,0.002,65,0.527,71,0.514,72,4.205,73,0.838,74,0.838,75,0.884,76,0.884,77,0.838,78,0.884,79,0.884,80,2.138,81,2.138,82,3.374,83,1.409,84,0.884,85,0.884,90,0.884,181,4.442,188,4.481,189,2.138,190,2.138,191,2.138,224,6.667,225,2.138,226,2.138,227,4.205,228,4.205,229,4.205,230,4.205,231,4.205,232,4.205,233,4.481,234,4.481,235,4.205,236,4.205,237,4.205,238,4.205,239,4.205,240,4.205,241,4.205,242,4.205,243,4.205,244,4.205,245,4.481,309,2.138,310,2.138,311,3.374,320,2.138,321,2.138,322,3.374,364,2.138,365,2.138,366,3.374,405,3.188,410,2.138,411,2.138,444,2.138,445,2.138,446,3.374,604,2.138,605,2.138,606,3.374,679,4.442,685,2.138,686,2.138,687,2.138,784,4.442,793,2.138,794,2.138,795,2.138,864,2.138,865,2.138,866,3.374,887,2.138,888,2.138,889,3.374,904,2.138,905,2.138,906,3.374,954,3.188,963,2.138,964,2.138,992,2.138,993,2.138,994,3.374,1037,2.138,1038,2.138,1039,3.374,1048,2.138,1049,2.138,1050,3.374,1124,2.138,1125,2.138,1126,3.374,1135,2.138,1136,2.138,1137,3.374,1159,2.138,1160,2.138,1161,3.374,1202,4.442,1208,2.138,1209,2.138,1210,2.138,1392,2.138,1393,4.82,1394,2.424]],["title/miscellaneous/variables.html",[1287,2.405,1395,4.642]],["body/miscellaneous/variables.html",[9,0.42,18,1.299,19,0.009,23,3.378,51,2.081,52,2.081,53,2.081,54,2.081,55,2.021,60,0.003,61,0.004,62,0.003,108,1.904,132,2.513,153,1.205,253,3.216,614,5.57,615,5.57,621,5.57,700,3.216,701,3.216,702,3.216,703,3.216,704,3.216,705,3.216,872,5.493,1243,2.231,1245,2.231,1246,2.231,1287,1.673,1298,6.245,1395,2.231,1396,6.521,1397,2.53,1398,2.53,1399,6.521,1400,6.134,1401,5.633,1402,6.134,1403,5.633,1404,3.998,1405,3.998,1406,7.463,1407,5.633,1408,7.08,1409,7.463,1410,7.463,1411,5.633,1412,5.633,1413,6.521,1414,5.633,1415,4.957,1416,2.53,1417,2.53,1418,2.53,1419,2.53,1420,2.53,1421,2.53,1422,2.53,1423,2.53,1424,3.998,1425,3.998,1426,3.998,1427,2.53,1428,2.53,1429,3.998,1430,2.53,1431,2.53,1432,2.53,1433,2.53,1434,2.53,1435,2.53,1436,2.53,1437,2.53,1438,2.53,1439,2.53,1440,2.53,1441,2.53,1442,2.53,1443,2.53,1444,2.53,1445,2.53,1446,2.53,1447,2.53,1448,2.53,1449,2.53]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":335,"title":{},"body":{"classes/City.html":{},"classes/Combo.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1235,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1237,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1097,"title":{},"body":{"classes/Store.html":{}}}],["1",{"_index":842,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/UpdateRatingDTO.html":{}}}],["1.0",{"_index":555,"title":{},"body":{"classes/CreateRatingDTO.html":{}}}],["1.21.0",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1024,"title":{},"body":{"classes/Setting.html":{}}}],["1080",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1021,"title":{},"body":{"classes/Setting.html":{}}}],["1920",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1})@isnumber()@isnotempty",{"_index":547,"title":{},"body":{"classes/CreateRatingDTO.html":{}}}],["1})@isnumber()@isnotempty()@min(1",{"_index":1146,"title":{},"body":{"classes/UpdateRatingDTO.html":{}}}],["22",{"_index":1393,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["320",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":1394,"title":{},"body":{"overview.html":{}}}],["4.1.4",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["4.5.7",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1099,"title":{},"body":{"classes/Store.html":{}}}],["6.5.4",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["720",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.2.1",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["960",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dirname",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceptscoupon",{"_index":1001,"title":{},"body":{"classes/Setting.html":{}}}],["acceptscreditcard",{"_index":1002,"title":{},"body":{"classes/Setting.html":{}}}],["acceptsdebitcard",{"_index":1003,"title":{},"body":{"classes/Setting.html":{}}}],["acceptsmoney",{"_index":1004,"title":{},"body":{"classes/Setting.html":{}}}],["additionalinfo",{"_index":515,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{}}}],["addon",{"_index":1,"title":{"classes/Addon.html":{}},"body":{"classes/Addon.html":{},"classes/Catalog.html":{},"coverage.html":{}}}],["addon.catalog",{"_index":301,"title":{},"body":{"classes/Catalog.html":{}}}],["addons",{"_index":68,"title":{},"body":{"controllers/AddonsController.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Product.html":{}}}],["addons.controller",{"_index":87,"title":{},"body":{"modules/AddonsModule.html":{}}}],["addons.service",{"_index":88,"title":{},"body":{"modules/AddonsModule.html":{}}}],["addons/addon.entity",{"_index":295,"title":{},"body":{"classes/Catalog.html":{}}}],["addons/addons.module",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["addonscontroller",{"_index":64,"title":{"controllers/AddonsController.html":{}},"body":{"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"coverage.html":{}}}],["addonsmodule",{"_index":72,"title":{"modules/AddonsModule.html":{}},"body":{"modules/AddonsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["addonsservice",{"_index":82,"title":{"injectables/AddonsService.html":{}},"body":{"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"coverage.html":{},"overview.html":{}}}],["address",{"_index":92,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/Store.html":{},"classes/User.html":{},"coverage.html":{}}}],["address.city",{"_index":157,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.complement",{"_index":156,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.dto",{"_index":150,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{}}}],["address.dto.ts",{"_index":452,"title":{},"body":{"classes/CreateAddressDTO.html":{},"coverage.html":{}}}],["address.dto.ts:17",{"_index":464,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:22",{"_index":471,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:27",{"_index":456,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:32",{"_index":454,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:37",{"_index":466,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:42",{"_index":458,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:47",{"_index":465,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:53",{"_index":462,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:59",{"_index":463,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:63",{"_index":468,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:67",{"_index":470,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.dto.ts:71",{"_index":460,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["address.entity",{"_index":148,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{}}}],["address.housenumber",{"_index":159,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.isdefault",{"_index":165,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.latitude",{"_index":161,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.longitude",{"_index":162,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.neighbourhood",{"_index":154,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.repository",{"_index":197,"title":{},"body":{"modules/AdressesModule.html":{},"injectables/AdressesService.html":{}}}],["address.save",{"_index":167,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.state",{"_index":160,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.street",{"_index":158,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.title",{"_index":163,"title":{},"body":{"classes/AddressRepository.html":{}}}],["address.user",{"_index":164,"title":{},"body":{"classes/AddressRepository.html":{},"classes/User.html":{}}}],["address.zipcode",{"_index":155,"title":{},"body":{"classes/AddressRepository.html":{}}}],["addressrepository",{"_index":133,"title":{"classes/AddressRepository.html":{}},"body":{"classes/AddressRepository.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"coverage.html":{}}}],["address})@usepipes(validationpipe",{"_index":173,"title":{},"body":{"controllers/AdressesController.html":{}}}],["adresses",{"_index":171,"title":{},"body":{"controllers/AdressesController.html":{},"classes/User.html":{}}}],["adresses.controller",{"_index":198,"title":{},"body":{"modules/AdressesModule.html":{}}}],["adresses.service",{"_index":182,"title":{},"body":{"controllers/AdressesController.html":{},"modules/AdressesModule.html":{}}}],["adresses/address.entity",{"_index":1105,"title":{},"body":{"classes/Store.html":{},"classes/User.html":{}}}],["adresses/adresses.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["adressescontroller",{"_index":169,"title":{"controllers/AdressesController.html":{}},"body":{"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"coverage.html":{}}}],["adressesmodule",{"_index":188,"title":{"modules/AdressesModule.html":{}},"body":{"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adressesservice",{"_index":181,"title":{"injectables/AdressesService.html":{}},"body":{"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"coverage.html":{},"overview.html":{}}}],["always_open",{"_index":1321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amazing",{"_index":1371,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1343,"title":{},"body":{"index.html":{}}}],["api",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_secret",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedresponse",{"_index":179,"title":{},"body":{"controllers/AdressesController.html":{},"controllers/ComplaintsController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{}}}],["apiproperty",{"_index":127,"title":{},"body":{"classes/Address.html":{},"classes/Complaint.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/Notification.html":{},"classes/Rating.html":{},"classes/UpdateNotificationDTO.html":{}}}],["apiproperty()@column",{"_index":105,"title":{},"body":{"classes/Address.html":{},"classes/Complaint.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Rating.html":{}}}],["apiproperty()@column('jsonb",{"_index":744,"title":{},"body":{"classes/Notification.html":{}}}],["apiproperty()@column('numeric",{"_index":622,"title":{},"body":{"classes/Image.html":{},"classes/Rating.html":{}}}],["apiproperty()@column('uuid",{"_index":379,"title":{},"body":{"classes/Complaint.html":{}}}],["apiproperty()@column({default",{"_index":112,"title":{},"body":{"classes/Address.html":{},"classes/Complaint.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Rating.html":{}}}],["apiproperty()@column({nullable",{"_index":114,"title":{},"body":{"classes/Address.html":{},"classes/Image.html":{},"classes/Notification.html":{}}}],["apiproperty()@isbase64()@isnotempty",{"_index":503,"title":{},"body":{"classes/CreateImageDTO.html":{}}}],["apiproperty()@isboolean",{"_index":459,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/UpdateNotificationDTO.html":{}}}],["apiproperty()@isdate()@isoptional",{"_index":567,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":569,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["apiproperty()@isenum(imagetype)@isnotempty",{"_index":648,"title":{},"body":{"classes/ImageDTO.html":{}}}],["apiproperty()@isint()@min(1",{"_index":457,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["apiproperty()@isnotempty",{"_index":493,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":637,"title":{},"body":{"classes/ImageDTO.html":{}}}],["apiproperty()@isphonenumber('br')@isoptional",{"_index":577,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["apiproperty()@isstring",{"_index":579,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":453,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/ImageDTO.html":{}}}],["apiproperty()@isstring()@isoptional",{"_index":574,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["apiproperty()@isurl()@isnotempty",{"_index":645,"title":{},"body":{"classes/ImageDTO.html":{}}}],["apiproperty()@isuuid",{"_index":486,"title":{},"body":{"classes/CreateComplaintDTO.html":{},"classes/CreateRatingDTO.html":{}}}],["apiproperty()@isuuid()@isoptional",{"_index":581,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["apiproperty()@onetoone(undefined",{"_index":750,"title":{},"body":{"classes/Notification.html":{}}}],["apiproperty({default",{"_index":483,"title":{},"body":{"classes/CreateComplaintDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/ImageDTO.html":{}}}],["apiproperty({enum",{"_index":488,"title":{},"body":{"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateUserDTO.html":{}}}],["apipropertyoptional",{"_index":128,"title":{},"body":{"classes/Address.html":{},"classes/Complaint.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/Rating.html":{},"classes/UpdateRatingDTO.html":{}}}],["apipropertyoptional()@column",{"_index":120,"title":{},"body":{"classes/Address.html":{},"classes/Complaint.html":{}}}],["apipropertyoptional()@column({nullable",{"_index":107,"title":{},"body":{"classes/Address.html":{},"classes/Rating.html":{}}}],["apipropertyoptional()@isnotempty()@isoptional",{"_index":491,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["apipropertyoptional()@isoptional()@isjson",{"_index":520,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["apipropertyoptional()@isoptional()@isnotempty",{"_index":455,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["apipropertyoptional()@isoptional()@isstring()@isnotempty",{"_index":461,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/CreateRatingDTO.html":{}}}],["apipropertyoptional()@isoptional()@isurl",{"_index":523,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["apipropertyoptional()@isstring",{"_index":467,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["apipropertyoptional()@isstring()@isnotempty",{"_index":1148,"title":{},"body":{"classes/UpdateRatingDTO.html":{}}}],["apipropertyoptional()@isuuid",{"_index":469,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["apipropertyoptional({default",{"_index":1145,"title":{},"body":{"classes/UpdateRatingDTO.html":{}}}],["apipropertyoptional({type",{"_index":122,"title":{},"body":{"classes/Address.html":{}}}],["apiresponse",{"_index":953,"title":{},"body":{"controllers/RatingsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":180,"title":{},"body":{"controllers/AdressesController.html":{},"controllers/ComplaintsController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{},"controllers/UsersController.html":{}}}],["apitags('adresses",{"_index":183,"title":{},"body":{"controllers/AdressesController.html":{}}}],["apitags('complaints",{"_index":407,"title":{},"body":{"controllers/ComplaintsController.html":{}}}],["apitags('images",{"_index":681,"title":{},"body":{"controllers/ImagesController.html":{}}}],["apitags('notifications",{"_index":786,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["apitags('ratings",{"_index":956,"title":{},"body":{"controllers/RatingsController.html":{}}}],["apitags('users",{"_index":1204,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1349,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":221,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":216,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["applications",{"_index":1340,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":224,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":220,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["async",{"_index":137,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":1381,"title":{},"body":{"index.html":{}}}],["auto",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto:face",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar",{"_index":1306,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["avataroptions",{"_index":701,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["avataroptions.base64prefix}${base64",{"_index":715,"title":{},"body":{"injectables/ImagesService.html":{}}}],["avataroptions.options",{"_index":716,"title":{},"body":{"injectables/ImagesService.html":{}}}],["await",{"_index":166,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":1372,"title":{},"body":{"index.html":{}}}],["backgroundcolor",{"_index":1068,"title":{},"body":{"classes/Store.html":{}}}],["badrequestexception",{"_index":809,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{}}}],["badrequestexception('user",{"_index":815,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{}}}],["banner",{"_index":1069,"title":{},"body":{"classes/Store.html":{},"miscellaneous/enumerations.html":{}}}],["banneroptions",{"_index":702,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["banneroptions.base64prefix}${base64",{"_index":718,"title":{},"body":{"injectables/ImagesService.html":{}}}],["banneroptions.options",{"_index":719,"title":{},"body":{"injectables/ImagesService.html":{}}}],["base64",{"_index":502,"title":{},"body":{"classes/CreateImageDTO.html":{},"injectables/ImagesService.html":{}}}],["base64prefix",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseentity",{"_index":591,"title":{},"body":{"classes/DefaultEntity.html":{}}}],["body",{"_index":175,"title":{},"body":{"controllers/AdressesController.html":{},"controllers/ComplaintsController.html":{},"classes/CreateNotificationDTO.html":{},"controllers/ImagesController.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{},"controllers/UsersController.html":{}}}],["bom",{"_index":275,"title":{},"body":{"injectables/AppService.html":{}}}],["boolean",{"_index":111,"title":{},"body":{"classes/Address.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Setting.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UpdateNotificationDTO.html":{}}}],["bootstrap",{"_index":77,"title":{},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":726,"title":{},"body":{"injectables/ImagesService.html":{}}}],["browse",{"_index":1391,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1389,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":1335,"title":{},"body":{"index.html":{}}}],["cancelationdate",{"_index":823,"title":{},"body":{"classes/Order.html":{}}}],["canceled_by_store",{"_index":1327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["canceled_by_user",{"_index":1326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cascade",{"_index":26,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["cascade'})@joincolumn",{"_index":290,"title":{},"body":{"classes/Catalog.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/PushToken.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["case",{"_index":710,"title":{},"body":{"injectables/ImagesService.html":{}}}],["catalog",{"_index":11,"title":{"classes/Catalog.html":{}},"body":{"classes/Addon.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Product.html":{},"classes/Section.html":{},"coverage.html":{}}}],["catalog.addons",{"_index":59,"title":{},"body":{"classes/Addon.html":{},"classes/Combo.html":{},"classes/Product.html":{},"classes/Section.html":{}}}],["catalogs",{"_index":307,"title":{},"body":{"controllers/CatalogsController.html":{}}}],["catalogs.controller",{"_index":313,"title":{},"body":{"modules/CatalogsModule.html":{}}}],["catalogs.service",{"_index":314,"title":{},"body":{"modules/CatalogsModule.html":{}}}],["catalogs/catalog.entity",{"_index":48,"title":{},"body":{"classes/Addon.html":{},"classes/Combo.html":{},"classes/Product.html":{},"classes/Section.html":{}}}],["catalogs/catalogs.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["catalogscontroller",{"_index":305,"title":{"controllers/CatalogsController.html":{}},"body":{"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"coverage.html":{}}}],["catalogsmodule",{"_index":227,"title":{"modules/CatalogsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules.html":{},"overview.html":{}}}],["catalogsservice",{"_index":311,"title":{"injectables/CatalogsService.html":{}},"body":{"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"coverage.html":{},"overview.html":{}}}],["categoryname",{"_index":985,"title":{},"body":{"classes/Section.html":{}}}],["cities",{"_index":318,"title":{},"body":{"controllers/CitiesController.html":{}}}],["cities.controller",{"_index":324,"title":{},"body":{"modules/CitiesModule.html":{}}}],["cities.service",{"_index":325,"title":{},"body":{"modules/CitiesModule.html":{}}}],["cities/cities.module",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["cities/city.entity",{"_index":1106,"title":{},"body":{"classes/Store.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["cities/city.repository",{"_index":1212,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["citiescontroller",{"_index":316,"title":{"controllers/CitiesController.html":{}},"body":{"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"coverage.html":{}}}],["citiesmodule",{"_index":228,"title":{"modules/CitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["citiesservice",{"_index":322,"title":{"injectables/CitiesService.html":{}},"body":{"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"coverage.html":{},"overview.html":{}}}],["city",{"_index":94,"title":{"classes/City.html":{}},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/CreateAddressDTO.html":{},"classes/Store.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["city.entity",{"_index":341,"title":{},"body":{"classes/CityRepository.html":{}}}],["cityname",{"_index":328,"title":{},"body":{"classes/City.html":{}}}],["cityrepository",{"_index":339,"title":{"classes/CityRepository.html":{}},"body":{"classes/CityRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["class",{"_index":0,"title":{"classes/Addon.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"classes/UserRepository.html":{}},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"overview.html":{}}}],["cloud_name",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary",{"_index":699,"title":{},"body":{"injectables/ImagesService.html":{},"dependencies.html":{}}}],["cloudinary.v2.config(cloudinaryconfig",{"_index":707,"title":{},"body":{"injectables/ImagesService.html":{}}}],["cloudinary.v2.uploader.upload",{"_index":711,"title":{},"body":{"injectables/ImagesService.html":{}}}],["cloudinaryconfig",{"_index":700,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cluster_addonsmodule",{"_index":80,"title":{},"body":{"modules/AddonsModule.html":{},"overview.html":{}}}],["cluster_addonsmodule_providers",{"_index":81,"title":{},"body":{"modules/AddonsModule.html":{},"overview.html":{}}}],["cluster_adressesmodule",{"_index":189,"title":{},"body":{"modules/AdressesModule.html":{},"overview.html":{}}}],["cluster_adressesmodule_exports",{"_index":190,"title":{},"body":{"modules/AdressesModule.html":{},"overview.html":{}}}],["cluster_adressesmodule_providers",{"_index":191,"title":{},"body":{"modules/AdressesModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catalogsmodule",{"_index":309,"title":{},"body":{"modules/CatalogsModule.html":{},"overview.html":{}}}],["cluster_catalogsmodule_providers",{"_index":310,"title":{},"body":{"modules/CatalogsModule.html":{},"overview.html":{}}}],["cluster_citiesmodule",{"_index":320,"title":{},"body":{"modules/CitiesModule.html":{},"overview.html":{}}}],["cluster_citiesmodule_providers",{"_index":321,"title":{},"body":{"modules/CitiesModule.html":{},"overview.html":{}}}],["cluster_combosmodule",{"_index":364,"title":{},"body":{"modules/CombosModule.html":{},"overview.html":{}}}],["cluster_combosmodule_providers",{"_index":365,"title":{},"body":{"modules/CombosModule.html":{},"overview.html":{}}}],["cluster_complaintsmodule",{"_index":410,"title":{},"body":{"modules/ComplaintsModule.html":{},"overview.html":{}}}],["cluster_complaintsmodule_providers",{"_index":411,"title":{},"body":{"modules/ComplaintsModule.html":{},"overview.html":{}}}],["cluster_couponsmodule",{"_index":444,"title":{},"body":{"modules/CouponsModule.html":{},"overview.html":{}}}],["cluster_couponsmodule_providers",{"_index":445,"title":{},"body":{"modules/CouponsModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule",{"_index":604,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule_providers",{"_index":605,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule",{"_index":685,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_exports",{"_index":686,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_providers",{"_index":687,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule",{"_index":793,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_exports",{"_index":794,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_providers",{"_index":795,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":864,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":865,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":887,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":888,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_pushtokensmodule",{"_index":904,"title":{},"body":{"modules/PushtokensModule.html":{},"overview.html":{}}}],["cluster_pushtokensmodule_providers",{"_index":905,"title":{},"body":{"modules/PushtokensModule.html":{},"overview.html":{}}}],["cluster_ratingsmodule",{"_index":963,"title":{},"body":{"modules/RatingsModule.html":{},"overview.html":{}}}],["cluster_ratingsmodule_providers",{"_index":964,"title":{},"body":{"modules/RatingsModule.html":{},"overview.html":{}}}],["cluster_sectionsmodule",{"_index":992,"title":{},"body":{"modules/SectionsModule.html":{},"overview.html":{}}}],["cluster_sectionsmodule_providers",{"_index":993,"title":{},"body":{"modules/SectionsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":1037,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_providers",{"_index":1038,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_specialtiesmodule",{"_index":1048,"title":{},"body":{"modules/SpecialtiesModule.html":{},"overview.html":{}}}],["cluster_specialtiesmodule_providers",{"_index":1049,"title":{},"body":{"modules/SpecialtiesModule.html":{},"overview.html":{}}}],["cluster_storesmodule",{"_index":1124,"title":{},"body":{"modules/StoresModule.html":{},"overview.html":{}}}],["cluster_storesmodule_providers",{"_index":1125,"title":{},"body":{"modules/StoresModule.html":{},"overview.html":{}}}],["cluster_storetypesmodule",{"_index":1135,"title":{},"body":{"modules/StoretypesModule.html":{},"overview.html":{}}}],["cluster_storetypesmodule_providers",{"_index":1136,"title":{},"body":{"modules/StoretypesModule.html":{},"overview.html":{}}}],["cluster_usedcouponsmodule",{"_index":1159,"title":{},"body":{"modules/UsedcouponsModule.html":{},"overview.html":{}}}],["cluster_usedcouponsmodule_providers",{"_index":1160,"title":{},"body":{"modules/UsedcouponsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1208,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1209,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1210,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":30,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/User.html":{}}}],["column('jsonb",{"_index":348,"title":{},"body":{"classes/Combo.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Setting.html":{}}}],["column('money",{"_index":33,"title":{},"body":{"classes/Addon.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Setting.html":{}}}],["column('numeric",{"_index":634,"title":{},"body":{"classes/Image.html":{},"classes/Rating.html":{},"classes/Store.html":{}}}],["column('timestamptz",{"_index":837,"title":{},"body":{"classes/Order.html":{},"classes/User.html":{}}}],["column('uuid",{"_index":384,"title":{},"body":{"classes/Complaint.html":{}}}],["column({default",{"_index":333,"title":{},"body":{"classes/City.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Setting.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/User.html":{}}}],["column({nullable",{"_index":1176,"title":{},"body":{"classes/User.html":{}}}],["combo",{"_index":283,"title":{"classes/Combo.html":{}},"body":{"classes/Catalog.html":{},"classes/Combo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["combo.catalog",{"_index":304,"title":{},"body":{"classes/Catalog.html":{}}}],["combos",{"_index":277,"title":{},"body":{"classes/Catalog.html":{},"controllers/CombosController.html":{}}}],["combos.controller",{"_index":368,"title":{},"body":{"modules/CombosModule.html":{}}}],["combos.service",{"_index":369,"title":{},"body":{"modules/CombosModule.html":{}}}],["combos/combo.entity",{"_index":296,"title":{},"body":{"classes/Catalog.html":{}}}],["combos/combos.module",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["comboscontroller",{"_index":361,"title":{"controllers/CombosController.html":{}},"body":{"controllers/CombosController.html":{},"modules/CombosModule.html":{},"coverage.html":{}}}],["combosmodule",{"_index":229,"title":{"modules/CombosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CombosModule.html":{},"modules.html":{},"overview.html":{}}}],["combosservice",{"_index":366,"title":{"injectables/CombosService.html":{}},"body":{"modules/CombosModule.html":{},"injectables/CombosService.html":{},"coverage.html":{},"overview.html":{}}}],["complaint",{"_index":371,"title":{"classes/Complaint.html":{}},"body":{"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"coverage.html":{}}}],["complaint.dto",{"_index":392,"title":{},"body":{"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{}}}],["complaint.dto.ts",{"_index":482,"title":{},"body":{"classes/CreateComplaintDTO.html":{},"coverage.html":{}}}],["complaint.dto.ts:14",{"_index":487,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["complaint.dto.ts:24",{"_index":490,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["complaint.dto.ts:28",{"_index":494,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["complaint.dto.ts:33",{"_index":492,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["complaint.dto.ts:39",{"_index":485,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["complaint.entity",{"_index":391,"title":{},"body":{"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{}}}],["complaint.isread",{"_index":398,"title":{},"body":{"classes/ComplaintRepository.html":{}}}],["complaint.itemid",{"_index":394,"title":{},"body":{"classes/ComplaintRepository.html":{}}}],["complaint.itemtype",{"_index":395,"title":{},"body":{"classes/ComplaintRepository.html":{}}}],["complaint.message",{"_index":397,"title":{},"body":{"classes/ComplaintRepository.html":{}}}],["complaint.reason",{"_index":396,"title":{},"body":{"classes/ComplaintRepository.html":{}}}],["complaint.repository",{"_index":413,"title":{},"body":{"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{}}}],["complaint.save",{"_index":399,"title":{},"body":{"classes/ComplaintRepository.html":{}}}],["complaintrepository",{"_index":385,"title":{"classes/ComplaintRepository.html":{}},"body":{"classes/ComplaintRepository.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"coverage.html":{}}}],["complaints",{"_index":402,"title":{},"body":{"controllers/ComplaintsController.html":{}}}],["complaints.controller",{"_index":414,"title":{},"body":{"modules/ComplaintsModule.html":{}}}],["complaints.service",{"_index":406,"title":{},"body":{"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{}}}],["complaints/complaints.module",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["complaintscontroller",{"_index":400,"title":{"controllers/ComplaintsController.html":{}},"body":{"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"coverage.html":{}}}],["complaintsmodule",{"_index":230,"title":{"modules/ComplaintsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ComplaintsModule.html":{},"modules.html":{},"overview.html":{}}}],["complaintsservice",{"_index":405,"title":{"injectables/ComplaintsService.html":{}},"body":{"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"coverage.html":{},"overview.html":{}}}],["complaint})@usepipes(validationpipe",{"_index":403,"title":{},"body":{"controllers/ComplaintsController.html":{}}}],["complement",{"_index":95,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/CreateAddressDTO.html":{}}}],["config/cloudinary.config",{"_index":706,"title":{},"body":{"injectables/ImagesService.html":{}}}],["config/typeorm.config",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmationdate",{"_index":824,"title":{},"body":{"classes/Order.html":{}}}],["confirmed",{"_index":1324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["confirmed_order",{"_index":1310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["const",{"_index":152,"title":{},"body":{"classes/AddressRepository.html":{},"injectables/AdressesService.html":{},"classes/ComplaintRepository.html":{},"classes/ImageRepository.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{}}}],["constructor",{"_index":202,"title":{},"body":{"injectables/AdressesService.html":{},"injectables/ComplaintsService.html":{},"injectables/ImagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{},"injectables/UsersService.html":{}}}],["constructor(addressrepository",{"_index":203,"title":{},"body":{"injectables/AdressesService.html":{}}}],["constructor(complaintrepository",{"_index":417,"title":{},"body":{"injectables/ComplaintsService.html":{}}}],["constructor(imagerepository",{"_index":694,"title":{},"body":{"injectables/ImagesService.html":{}}}],["constructor(notificationrepository",{"_index":805,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(private",{"_index":185,"title":{},"body":{"controllers/AdressesController.html":{},"controllers/AppController.html":{},"controllers/ComplaintsController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{},"controllers/UsersController.html":{}}}],["constructor(ratingrepository",{"_index":970,"title":{},"body":{"injectables/RatingsService.html":{}}}],["constructor(userrepository",{"_index":1217,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":63,"title":{"controllers/AddonsController.html":{},"controllers/AdressesController.html":{},"controllers/AppController.html":{},"controllers/CatalogsController.html":{},"controllers/CitiesController.html":{},"controllers/CombosController.html":{},"controllers/ComplaintsController.html":{},"controllers/CouponsController.html":{},"controllers/FavoritesController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/PushtokensController.html":{},"controllers/RatingsController.html":{},"controllers/SectionsController.html":{},"controllers/SettingsController.html":{},"controllers/SpecialtiesController.html":{},"controllers/StoresController.html":{},"controllers/StoretypesController.html":{},"controllers/UsedcouponsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AddonsController.html":{},"controllers/AdressesController.html":{},"controllers/AppController.html":{},"controllers/CatalogsController.html":{},"controllers/CitiesController.html":{},"controllers/CombosController.html":{},"controllers/ComplaintsController.html":{},"controllers/CouponsController.html":{},"controllers/FavoritesController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/PushtokensController.html":{},"controllers/RatingsController.html":{},"controllers/SectionsController.html":{},"controllers/SettingsController.html":{},"controllers/SpecialtiesController.html":{},"controllers/StoresController.html":{},"controllers/StoretypesController.html":{},"controllers/UsedcouponsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('addons",{"_index":70,"title":{},"body":{"controllers/AddonsController.html":{}}}],["controller('adresses",{"_index":184,"title":{},"body":{"controllers/AdressesController.html":{}}}],["controller('catalogs",{"_index":308,"title":{},"body":{"controllers/CatalogsController.html":{}}}],["controller('cities",{"_index":319,"title":{},"body":{"controllers/CitiesController.html":{}}}],["controller('combos",{"_index":363,"title":{},"body":{"controllers/CombosController.html":{}}}],["controller('complaints",{"_index":408,"title":{},"body":{"controllers/ComplaintsController.html":{}}}],["controller('coupons",{"_index":443,"title":{},"body":{"controllers/CouponsController.html":{}}}],["controller('favorites",{"_index":603,"title":{},"body":{"controllers/FavoritesController.html":{}}}],["controller('images",{"_index":682,"title":{},"body":{"controllers/ImagesController.html":{}}}],["controller('notifications",{"_index":787,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["controller('orders",{"_index":863,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('products",{"_index":886,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('pushtokens",{"_index":903,"title":{},"body":{"controllers/PushtokensController.html":{}}}],["controller('ratings",{"_index":957,"title":{},"body":{"controllers/RatingsController.html":{}}}],["controller('sections",{"_index":991,"title":{},"body":{"controllers/SectionsController.html":{}}}],["controller('settings",{"_index":1036,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller('specialties",{"_index":1047,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["controller('stores",{"_index":1123,"title":{},"body":{"controllers/StoresController.html":{}}}],["controller('storetypes",{"_index":1134,"title":{},"body":{"controllers/StoretypesController.html":{}}}],["controller('usedcoupons",{"_index":1158,"title":{},"body":{"controllers/UsedcouponsController.html":{}}}],["controller('users",{"_index":1205,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":65,"title":{},"body":{"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"controllers/AppController.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coupon",{"_index":422,"title":{"classes/Coupon.html":{}},"body":{"classes/Coupon.html":{},"classes/Order.html":{},"classes/UsedCoupon.html":{},"coverage.html":{}}}],["couponcode",{"_index":424,"title":{},"body":{"classes/Coupon.html":{}}}],["coupons",{"_index":442,"title":{},"body":{"controllers/CouponsController.html":{}}}],["coupons.controller",{"_index":448,"title":{},"body":{"modules/CouponsModule.html":{}}}],["coupons.service",{"_index":449,"title":{},"body":{"modules/CouponsModule.html":{}}}],["coupons/coupon.entity",{"_index":1154,"title":{},"body":{"classes/UsedCoupon.html":{}}}],["coupons/coupons.module",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["couponscontroller",{"_index":440,"title":{"controllers/CouponsController.html":{}},"body":{"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"coverage.html":{}}}],["couponsmodule",{"_index":231,"title":{"modules/CouponsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CouponsModule.html":{},"modules.html":{},"overview.html":{}}}],["couponsservice",{"_index":446,"title":{"injectables/CouponsService.html":{}},"body":{"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1230,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createaddress",{"_index":138,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{}}}],["createaddress(createaddressdto",{"_index":139,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{}}}],["createaddressdto",{"_index":140,"title":{"classes/CreateAddressDTO.html":{}},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/CreateAddressDTO.html":{},"coverage.html":{}}}],["createcomplaint",{"_index":387,"title":{},"body":{"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{}}}],["createcomplaint(createcomplaintdto",{"_index":388,"title":{},"body":{"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{}}}],["createcomplaintdto",{"_index":389,"title":{"classes/CreateComplaintDTO.html":{}},"body":{"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/CreateComplaintDTO.html":{},"coverage.html":{}}}],["createdat",{"_index":15,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["createdatecolumn",{"_index":37,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["createimage",{"_index":654,"title":{},"body":{"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["createimage(@body",{"_index":683,"title":{},"body":{"controllers/ImagesController.html":{}}}],["createimage(createimagedto",{"_index":675,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["createimage(imagedto",{"_index":655,"title":{},"body":{"classes/ImageRepository.html":{}}}],["createimagedto",{"_index":499,"title":{"classes/CreateImageDTO.html":{}},"body":{"classes/CreateImageDTO.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["createnotification",{"_index":756,"title":{},"body":{"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{}}}],["createnotification(createnotificationdto",{"_index":757,"title":{},"body":{"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{}}}],["createnotificationdto",{"_index":512,"title":{"classes/CreateNotificationDTO.html":{}},"body":{"classes/CreateNotificationDTO.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["createrating",{"_index":924,"title":{},"body":{"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{}}}],["createrating(createratingdto",{"_index":925,"title":{},"body":{"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{}}}],["createratingdto",{"_index":541,"title":{"classes/CreateRatingDTO.html":{}},"body":{"classes/CreateRatingDTO.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"coverage.html":{}}}],["createratingdto.user",{"_index":978,"title":{},"body":{"injectables/RatingsService.html":{}}}],["createuser",{"_index":1181,"title":{},"body":{"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":1206,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":1182,"title":{},"body":{"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":556,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.imageid",{"_index":1225,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.selectedcityid",{"_index":1227,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.storeid",{"_index":1223,"title":{},"body":{"injectables/UsersService.html":{}}}],["crop",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":1320,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data:image/jpeg;base64",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data:image/png;base64",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":36,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["dateofbirth",{"_index":559,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["declarations",{"_index":76,"title":{},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":20,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"controllers/AdressesController.html":{},"controllers/AppController.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"controllers/ComplaintsController.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"controllers/ImagesController.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"controllers/RatingsController.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":132,"title":{},"body":{"classes/Address.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Setting.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UpdateRatingDTO.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defaultentity",{"_index":8,"title":{"classes/DefaultEntity.html":{}},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"coverage.html":{}}}],["defaultentity:10",{"_index":41,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["defaultentity:13",{"_index":39,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["defaultentity:16",{"_index":43,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["defaultoptions",{"_index":703,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions.base64prefix}${base64",{"_index":712,"title":{},"body":{"injectables/ImagesService.html":{}}}],["defaultoptions.options",{"_index":713,"title":{},"body":{"injectables/ImagesService.html":{}}}],["defined",{"_index":27,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delivered",{"_index":1311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delivereddate",{"_index":825,"title":{},"body":{"classes/Order.html":{}}}],["deliveryfee",{"_index":826,"title":{},"body":{"classes/Order.html":{}}}],["deliveryfeelist",{"_index":1005,"title":{},"body":{"classes/Setting.html":{}}}],["deliveryfeetype",{"_index":1006,"title":{},"body":{"classes/Setting.html":{},"miscellaneous/enumerations.html":{}}}],["deliveryfeetype.enum",{"_index":1029,"title":{},"body":{"classes/Setting.html":{}}}],["deliveryfeetype.free",{"_index":1032,"title":{},"body":{"classes/Setting.html":{}}}],["deliverysinglefee",{"_index":1007,"title":{},"body":{"classes/Setting.html":{}}}],["deliverytime",{"_index":1008,"title":{},"body":{"classes/Setting.html":{}}}],["deliverytype",{"_index":827,"title":{},"body":{"classes/Order.html":{}}}],["dependencies",{"_index":74,"title":{"dependencies.html":{}},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":12,"title":{},"body":{"classes/Addon.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Product.html":{},"classes/Section.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"index.html":{}}}],["development",{"_index":1350,"title":{},"body":{"index.html":{}}}],["disable",{"_index":52,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["discountamount",{"_index":425,"title":{},"body":{"classes/Coupon.html":{},"classes/Order.html":{}}}],["discountpercentage",{"_index":426,"title":{},"body":{"classes/Coupon.html":{}}}],["discounts",{"_index":344,"title":{},"body":{"classes/Combo.html":{},"classes/Product.html":{}}}],["disksize",{"_index":612,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{}}}],["documentation",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dot",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":149,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/image.dto",{"_index":657,"title":{},"body":{"classes/ImageRepository.html":{},"injectables/ImagesService.html":{}}}],["dto/update",{"_index":783,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{}}}],["e/or",{"_index":981,"title":{},"body":{"injectables/RatingsService.html":{}}}],["e2e",{"_index":1361,"title":{},"body":{"index.html":{}}}],["eager",{"_index":23,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Product.html":{},"classes/Section.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["eee",{"_index":1081,"title":{},"body":{"classes/Store.html":{}}}],["efficient",{"_index":1336,"title":{},"body":{"index.html":{}}}],["email",{"_index":560,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/Store.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["entities",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":45,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["entity.{js,ts",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityrepository",{"_index":147,"title":{},"body":{"classes/AddressRepository.html":{},"classes/CityRepository.html":{},"classes/ComplaintRepository.html":{},"classes/ImageRepository.html":{},"classes/NotificationRepository.html":{},"classes/RatingRepository.html":{},"classes/StoreRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(address",{"_index":151,"title":{},"body":{"classes/AddressRepository.html":{}}}],["entityrepository(city",{"_index":342,"title":{},"body":{"classes/CityRepository.html":{}}}],["entityrepository(complaint",{"_index":393,"title":{},"body":{"classes/ComplaintRepository.html":{}}}],["entityrepository(image",{"_index":659,"title":{},"body":{"classes/ImageRepository.html":{}}}],["entityrepository(notification",{"_index":761,"title":{},"body":{"classes/NotificationRepository.html":{}}}],["entityrepository(rating",{"_index":929,"title":{},"body":{"classes/RatingRepository.html":{}}}],["entityrepository(store",{"_index":1112,"title":{},"body":{"classes/StoreRepository.html":{}}}],["entityrepository(user",{"_index":1186,"title":{},"body":{"classes/UserRepository.html":{}}}],["enum",{"_index":497,"title":{},"body":{"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateUserDTO.html":{}}}],["enumerations",{"_index":1288,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":51,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["eslint/camelcase",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":56,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["expired",{"_index":1312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":50,"title":{},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":79,"title":{},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"classes/Coupon.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageRepository.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["externalid",{"_index":613,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{}}}],["f",{"_index":1304,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fala",{"_index":273,"title":{},"body":{"injectables/AppService.html":{}}}],["false",{"_index":24,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/Notification.html":{},"classes/Product.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/User.html":{}}}],["false})@isboolean",{"_index":484,"title":{},"body":{"classes/CreateComplaintDTO.html":{},"classes/ImageDTO.html":{}}}],["false})@isoptional()@isenum({enum",{"_index":526,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["false})@joincolumn",{"_index":1079,"title":{},"body":{"classes/Store.html":{}}}],["favorite",{"_index":596,"title":{"classes/Favorite.html":{}},"body":{"classes/Favorite.html":{},"coverage.html":{}}}],["favorites",{"_index":602,"title":{},"body":{"controllers/FavoritesController.html":{}}}],["favorites.controller",{"_index":608,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites.service",{"_index":609,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["favoritescontroller",{"_index":600,"title":{"controllers/FavoritesController.html":{}},"body":{"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"coverage.html":{}}}],["favoritesmodule",{"_index":232,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FavoritesModule.html":{},"modules.html":{},"overview.html":{}}}],["favoritesservice",{"_index":606,"title":{"injectables/FavoritesService.html":{}},"body":{"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"coverage.html":{},"overview.html":{}}}],["female",{"_index":1303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["fill",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finalprice",{"_index":828,"title":{},"body":{"classes/Order.html":{}}}],["find",{"_index":214,"title":{},"body":{"injectables/AdressesService.html":{},"injectables/NotificationsService.html":{}}}],["firstname",{"_index":561,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["format",{"_index":614,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":816,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{}}}],["framework",{"_index":1334,"title":{},"body":{"index.html":{}}}],["free",{"_index":1297,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["friendlyid",{"_index":829,"title":{},"body":{"classes/Order.html":{}}}],["function",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1328,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":562,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/enumerations.html":{}}}],["gender.enum",{"_index":586,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["gender.other",{"_index":588,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["general",{"_index":1307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get()@apiresponse({type",{"_index":947,"title":{},"body":{"controllers/RatingsController.html":{}}}],["gethello",{"_index":218,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getrating",{"_index":941,"title":{},"body":{"controllers/RatingsController.html":{},"injectables/RatingsService.html":{}}}],["getrating(@param('id",{"_index":958,"title":{},"body":{"controllers/RatingsController.html":{}}}],["getrating(id",{"_index":946,"title":{},"body":{"controllers/RatingsController.html":{},"injectables/RatingsService.html":{}}}],["getting",{"_index":1330,"title":{"index.html":{}},"body":{}}],["gravity",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grow",{"_index":1367,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":1341,"title":{},"body":{"index.html":{}}}],["height",{"_index":615,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":1378,"title":{},"body":{"index.html":{}}}],["host",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["housenumber",{"_index":96,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/CreateAddressDTO.html":{}}}],["https://nestjs.com",{"_index":1385,"title":{},"body":{"index.html":{}}}],["id",{"_index":16,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/CreateNotificationDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["identifier",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":345,"title":{"classes/Image.html":{}},"body":{"classes/Combo.html":{},"classes/Image.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/Product.html":{},"classes/Store.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["image.bytes",{"_index":729,"title":{},"body":{"injectables/ImagesService.html":{}}}],["image.disksize",{"_index":669,"title":{},"body":{"classes/ImageRepository.html":{}}}],["image.dto",{"_index":678,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["image.dto.ts",{"_index":501,"title":{},"body":{"classes/CreateImageDTO.html":{},"coverage.html":{}}}],["image.dto.ts:14",{"_index":507,"title":{},"body":{"classes/CreateImageDTO.html":{}}}],["image.dto.ts:9",{"_index":504,"title":{},"body":{"classes/CreateImageDTO.html":{}}}],["image.eager[0].secure_url",{"_index":737,"title":{},"body":{"injectables/ImagesService.html":{}}}],["image.entity",{"_index":658,"title":{},"body":{"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["image.externalid",{"_index":664,"title":{},"body":{"classes/ImageRepository.html":{}}}],["image.format",{"_index":670,"title":{},"body":{"classes/ImageRepository.html":{},"injectables/ImagesService.html":{}}}],["image.height",{"_index":667,"title":{},"body":{"classes/ImageRepository.html":{},"injectables/ImagesService.html":{}}}],["image.isapproved",{"_index":663,"title":{},"body":{"classes/ImageRepository.html":{}}}],["image.isreviewed",{"_index":662,"title":{},"body":{"classes/ImageRepository.html":{}}}],["image.public_id",{"_index":731,"title":{},"body":{"injectables/ImagesService.html":{}}}],["image.repository",{"_index":689,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["image.save",{"_index":671,"title":{},"body":{"classes/ImageRepository.html":{}}}],["image.secure_url",{"_index":735,"title":{},"body":{"injectables/ImagesService.html":{}}}],["image.secureurl",{"_index":668,"title":{},"body":{"classes/ImageRepository.html":{}}}],["image.thumbnail",{"_index":665,"title":{},"body":{"classes/ImageRepository.html":{}}}],["image.type",{"_index":660,"title":{},"body":{"classes/ImageRepository.html":{}}}],["image.url",{"_index":661,"title":{},"body":{"classes/ImageRepository.html":{},"injectables/ImagesService.html":{}}}],["image.width",{"_index":666,"title":{},"body":{"classes/ImageRepository.html":{},"injectables/ImagesService.html":{}}}],["imagedto",{"_index":635,"title":{"classes/ImageDTO.html":{}},"body":{"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["imagedto.disksize",{"_index":728,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagedto.externalid",{"_index":730,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagedto.format",{"_index":732,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagedto.height",{"_index":733,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagedto.secureurl",{"_index":734,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagedto.thumbnail",{"_index":736,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagedto.type",{"_index":738,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagedto.url",{"_index":739,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagedto.width",{"_index":740,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imageid",{"_index":563,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["imagerepository",{"_index":652,"title":{"classes/ImageRepository.html":{}},"body":{"classes/ImageRepository.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["images",{"_index":674,"title":{},"body":{"controllers/ImagesController.html":{}}}],["images.controller",{"_index":690,"title":{},"body":{"modules/ImagesModule.html":{}}}],["images.service",{"_index":680,"title":{},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{}}}],["images/image.entity",{"_index":360,"title":{},"body":{"classes/Combo.html":{},"classes/Product.html":{},"classes/Store.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["images/image.repository",{"_index":1213,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["images/images.module",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["imagescontroller",{"_index":672,"title":{"controllers/ImagesController.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"coverage.html":{}}}],["imagesmodule",{"_index":233,"title":{"modules/ImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagesservice",{"_index":679,"title":{"injectables/ImagesService.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["imagetype",{"_index":505,"title":{},"body":{"classes/CreateImageDTO.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"injectables/ImagesService.html":{},"miscellaneous/enumerations.html":{}}}],["imagetype.avatar",{"_index":714,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagetype.banner",{"_index":717,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagetype.enum",{"_index":509,"title":{},"body":{"classes/CreateImageDTO.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"injectables/ImagesService.html":{}}}],["imagetype.general",{"_index":510,"title":{},"body":{"classes/CreateImageDTO.html":{},"classes/Image.html":{},"injectables/ImagesService.html":{}}}],["imagetype.logo",{"_index":720,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagetype.product",{"_index":723,"title":{},"body":{"injectables/ImagesService.html":{}}}],["image})@usepipes(validationpipe",{"_index":676,"title":{},"body":{"controllers/ImagesController.html":{}}}],["import",{"_index":44,"title":{},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":199,"title":{},"body":{"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/ComplaintsModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/RatingsModule.html":{},"modules/StoresModule.html":{},"modules/UsersModule.html":{}}}],["in_delivery",{"_index":1313,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":38,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AddonsService.html":{},"injectables/AdressesService.html":{},"injectables/AppService.html":{},"injectables/CatalogsService.html":{},"injectables/CitiesService.html":{},"injectables/CombosService.html":{},"injectables/ComplaintsService.html":{},"injectables/CouponsService.html":{},"injectables/FavoritesService.html":{},"injectables/ImagesService.html":{},"injectables/NotificationsService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/PushtokensService.html":{},"injectables/RatingsService.html":{},"injectables/SectionsService.html":{},"injectables/SettingsService.html":{},"injectables/SpecialtiesService.html":{},"injectables/StoresService.html":{},"injectables/StoretypesService.html":{},"injectables/UsedcouponsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AddonsService.html":{},"injectables/AdressesService.html":{},"injectables/AppService.html":{},"injectables/CatalogsService.html":{},"injectables/CitiesService.html":{},"injectables/CombosService.html":{},"injectables/ComplaintsService.html":{},"injectables/CouponsService.html":{},"injectables/FavoritesService.html":{},"injectables/ImagesService.html":{},"injectables/NotificationsService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/PushtokensService.html":{},"injectables/RatingsService.html":{},"injectables/SectionsService.html":{},"injectables/SettingsService.html":{},"injectables/SpecialtiesService.html":{},"injectables/StoresService.html":{},"injectables/StoretypesService.html":{},"injectables/UsedcouponsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AddonsService.html":{},"injectables/AdressesService.html":{},"injectables/AppService.html":{},"injectables/CatalogsService.html":{},"injectables/CitiesService.html":{},"injectables/CombosService.html":{},"injectables/ComplaintsService.html":{},"injectables/CouponsService.html":{},"injectables/FavoritesService.html":{},"injectables/ImagesService.html":{},"injectables/NotificationsService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/PushtokensService.html":{},"injectables/RatingsService.html":{},"injectables/SectionsService.html":{},"injectables/SettingsService.html":{},"injectables/SpecialtiesService.html":{},"injectables/StoresService.html":{},"injectables/StoretypesService.html":{},"injectables/UsedcouponsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":207,"title":{},"body":{"injectables/AdressesService.html":{},"injectables/ComplaintsService.html":{},"injectables/ImagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(addressrepository",{"_index":208,"title":{},"body":{"injectables/AdressesService.html":{}}}],["injectrepository(city",{"_index":1222,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(complaintrepository",{"_index":420,"title":{},"body":{"injectables/ComplaintsService.html":{}}}],["injectrepository(image",{"_index":708,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(notificationrepository",{"_index":810,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["injectrepository(rating",{"_index":975,"title":{},"body":{"injectables/RatingsService.html":{}}}],["injectrepository(store",{"_index":1221,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(storerepository",{"_index":811,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{}}}],["injectrepository(user",{"_index":1220,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(userrepository",{"_index":210,"title":{},"body":{"injectables/AdressesService.html":{},"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{}}}],["inspired",{"_index":1342,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1346,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1348,"title":{},"body":{"index.html":{}}}],["isacceptingpickup",{"_index":1070,"title":{},"body":{"classes/Store.html":{}}}],["isapproved",{"_index":616,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"classes/Rating.html":{}}}],["isbase64",{"_index":508,"title":{},"body":{"classes/CreateImageDTO.html":{}}}],["isblocked",{"_index":1071,"title":{},"body":{"classes/Store.html":{}}}],["isboolean",{"_index":472,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/ImageDTO.html":{},"classes/UpdateNotificationDTO.html":{}}}],["isdate",{"_index":583,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isdefault",{"_index":97,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/CreateAddressDTO.html":{}}}],["isdelivering",{"_index":1072,"title":{},"body":{"classes/Store.html":{}}}],["isemail",{"_index":584,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isenabled",{"_index":329,"title":{},"body":{"classes/City.html":{},"classes/Combo.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Store.html":{},"classes/StoreType.html":{}}}],["isenum",{"_index":495,"title":{},"body":{"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateUserDTO.html":{},"classes/ImageDTO.html":{}}}],["isenum(gender",{"_index":589,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isenum(imagetype",{"_index":511,"title":{},"body":{"classes/CreateImageDTO.html":{},"classes/ImageDTO.html":{}}}],["isint",{"_index":473,"title":{},"body":{"classes/CreateAddressDTO.html":{}}}],["isjson",{"_index":533,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["isnotempty",{"_index":474,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/ImageDTO.html":{},"classes/UpdateRatingDTO.html":{}}}],["isnumber",{"_index":554,"title":{},"body":{"classes/CreateRatingDTO.html":{},"classes/ImageDTO.html":{},"classes/UpdateRatingDTO.html":{}}}],["isopen",{"_index":1073,"title":{},"body":{"classes/Store.html":{}}}],["isoptional",{"_index":475,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{}}}],["isphonenumber",{"_index":585,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isphonenumber('br",{"_index":587,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["ispublic",{"_index":427,"title":{},"body":{"classes/Coupon.html":{}}}],["isread",{"_index":373,"title":{},"body":{"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"classes/CreateComplaintDTO.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/UpdateNotificationDTO.html":{}}}],["isreviewed",{"_index":617,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{}}}],["isstring",{"_index":476,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/ImageDTO.html":{},"classes/UpdateRatingDTO.html":{}}}],["isurl",{"_index":534,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"classes/ImageDTO.html":{}}}],["isuuid",{"_index":477,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{}}}],["itemid",{"_index":374,"title":{},"body":{"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"classes/CreateComplaintDTO.html":{}}}],["items",{"_index":346,"title":{},"body":{"classes/Combo.html":{},"classes/Order.html":{}}}],["itemsvalue",{"_index":830,"title":{},"body":{"classes/Order.html":{}}}],["itemtype",{"_index":375,"title":{},"body":{"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"classes/CreateComplaintDTO.html":{},"miscellaneous/enumerations.html":{}}}],["itemtype.enum",{"_index":496,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["itemtype.general",{"_index":498,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["join",{"_index":1374,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":292,"title":{},"body":{"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Store.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["jointable",{"_index":1064,"title":{},"body":{"classes/Specialty.html":{}}}],["jpg",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":1382,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":564,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["latitude",{"_index":98,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/CreateAddressDTO.html":{}}}],["legend",{"_index":75,"title":{},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1388,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1365,"title":{},"body":{"index.html":{}}}],["likes",{"_index":1074,"title":{},"body":{"classes/Store.html":{}}}],["limit",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":54,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["listofacceptedcards",{"_index":1009,"title":{},"body":{"classes/Setting.html":{}}}],["listposition",{"_index":1114,"title":{},"body":{"classes/StoreType.html":{}}}],["logo",{"_index":516,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"classes/Store.html":{},"miscellaneous/enumerations.html":{}}}],["logooptions",{"_index":704,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logooptions.base64prefix}${base64",{"_index":721,"title":{},"body":{"injectables/ImagesService.html":{}}}],["logooptions.options",{"_index":722,"title":{},"body":{"injectables/ImagesService.html":{}}}],["longitude",{"_index":99,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/CreateAddressDTO.html":{}}}],["m",{"_index":1302,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["male",{"_index":1301,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":1065,"title":{},"body":{"classes/Specialty.html":{}}}],["manytomany(type",{"_index":1066,"title":{},"body":{"classes/Specialty.html":{}}}],["manytomany(undefined)@jointable",{"_index":1061,"title":{},"body":{"classes/Specialty.html":{}}}],["manytoone",{"_index":46,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Combo.html":{},"classes/Product.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/StoreType.html":{}}}],["manytoone(type",{"_index":921,"title":{},"body":{"classes/Rating.html":{}}}],["manytoone(undefined",{"_index":21,"title":{},"body":{"classes/Addon.html":{},"classes/Combo.html":{},"classes/Product.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/StoreType.html":{}}}],["matching",{"_index":61,"title":{},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":376,"title":{},"body":{"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateNotificationDTO.html":{}}}],["metadata",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":136,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["meu",{"_index":274,"title":{},"body":{"injectables/AppService.html":{}}}],["min",{"_index":478,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/UpdateRatingDTO.html":{}}}],["min(1",{"_index":480,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/UpdateRatingDTO.html":{}}}],["minimumordervalue",{"_index":1010,"title":{},"body":{"classes/Setting.html":{}}}],["miscellaneous",{"_index":1287,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1364,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1354,"title":{},"body":{"index.html":{}}}],["module",{"_index":71,"title":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":73,"title":{"modules.html":{}},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1377,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1383,"title":{},"body":{"index.html":{}}}],["name",{"_index":143,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["neighbourhood",{"_index":100,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/CreateAddressDTO.html":{}}}],["nest",{"_index":1344,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1387,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":69,"title":{},"body":{"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":129,"title":{},"body":{"classes/Address.html":{},"controllers/AdressesController.html":{},"classes/Complaint.html":{},"controllers/ComplaintsController.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"controllers/ImagesController.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"classes/Rating.html":{},"controllers/RatingsController.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":194,"title":{},"body":{"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"modules/AppModule.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"modules/StoresModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":153,"title":{},"body":{"classes/AddressRepository.html":{},"injectables/AdressesService.html":{},"classes/ComplaintRepository.html":{},"classes/ImageRepository.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_order",{"_index":1314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["next",{"_index":53,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":1333,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":206,"title":{},"body":{"injectables/AdressesService.html":{},"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{}}}],["notfoundexception('rating",{"_index":977,"title":{},"body":{"injectables/RatingsService.html":{}}}],["notfoundexception('user",{"_index":213,"title":{},"body":{"injectables/AdressesService.html":{}}}],["notfoundexception(`unable",{"_index":819,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification",{"_index":742,"title":{"classes/Notification.html":{}},"body":{"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["notification.additionalinfo",{"_index":766,"title":{},"body":{"classes/NotificationRepository.html":{}}}],["notification.body",{"_index":764,"title":{},"body":{"classes/NotificationRepository.html":{}}}],["notification.dto",{"_index":759,"title":{},"body":{"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{}}}],["notification.dto.ts",{"_index":514,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"classes/UpdateNotificationDTO.html":{},"coverage.html":{}}}],["notification.dto.ts:18",{"_index":524,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["notification.dto.ts:30",{"_index":527,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["notification.dto.ts:35",{"_index":522,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["notification.dto.ts:40",{"_index":531,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["notification.dto.ts:45",{"_index":521,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["notification.dto.ts:50",{"_index":532,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["notification.dto.ts:55",{"_index":530,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["notification.dto.ts:7",{"_index":1143,"title":{},"body":{"classes/UpdateNotificationDTO.html":{}}}],["notification.entity",{"_index":760,"title":{},"body":{"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{}}}],["notification.isread",{"_index":820,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.logo",{"_index":762,"title":{},"body":{"classes/NotificationRepository.html":{}}}],["notification.notificationtype",{"_index":763,"title":{},"body":{"classes/NotificationRepository.html":{}}}],["notification.repository",{"_index":799,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["notification.save",{"_index":769,"title":{},"body":{"classes/NotificationRepository.html":{},"injectables/NotificationsService.html":{}}}],["notification.store",{"_index":768,"title":{},"body":{"classes/NotificationRepository.html":{}}}],["notification.title",{"_index":765,"title":{},"body":{"classes/NotificationRepository.html":{}}}],["notification.user",{"_index":767,"title":{},"body":{"classes/NotificationRepository.html":{}}}],["notificationrepository",{"_index":754,"title":{"classes/NotificationRepository.html":{}},"body":{"classes/NotificationRepository.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["notifications",{"_index":772,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["notifications.controller",{"_index":800,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["notifications.service",{"_index":785,"title":{},"body":{"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.module",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["notificationscontroller",{"_index":770,"title":{"controllers/NotificationsController.html":{}},"body":{"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"coverage.html":{}}}],["notificationsmodule",{"_index":234,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotificationsModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservice",{"_index":784,"title":{"injectables/NotificationsService.html":{}},"body":{"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["notificationtype",{"_index":517,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtype.enum",{"_index":536,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"classes/Notification.html":{}}}],["notificationtype.general",{"_index":537,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"classes/Notification.html":{}}}],["notification})@usepipes(validationpipe",{"_index":774,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["npm",{"_index":1347,"title":{},"body":{"index.html":{}}}],["null",{"_index":812,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":124,"title":{},"body":{"classes/Address.html":{},"classes/Catalog.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Rating.html":{},"classes/Setting.html":{},"classes/Store.html":{},"classes/User.html":{}}}],["number",{"_index":32,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Rating.html":{},"classes/Setting.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UpdateRatingDTO.html":{}}}],["number(process.env.db_port",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numberofratings",{"_index":1075,"title":{},"body":{"classes/Store.html":{}}}],["numberofsold",{"_index":347,"title":{},"body":{"classes/Combo.html":{},"classes/Product.html":{}}}],["numberofstores",{"_index":330,"title":{},"body":{"classes/City.html":{}}}],["o",{"_index":1172,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["o.storeid",{"_index":539,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["o.userid",{"_index":540,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["object",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_delivery",{"_index":1325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ondelete",{"_index":25,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["onetomany",{"_index":293,"title":{},"body":{"classes/Catalog.html":{},"classes/Store.html":{},"classes/User.html":{}}}],["onetomany(undefined",{"_index":281,"title":{},"body":{"classes/Catalog.html":{},"classes/Store.html":{},"classes/User.html":{}}}],["onetoone",{"_index":294,"title":{},"body":{"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Store.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["onetoone(type",{"_index":300,"title":{},"body":{"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Store.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["onetoone(undefined",{"_index":289,"title":{},"body":{"classes/Catalog.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/PushToken.html":{},"classes/Store.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":353,"title":{},"body":{"classes/Combo.html":{},"classes/Order.html":{},"classes/Product.html":{}}}],["open",{"_index":1323,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["operationhourstype",{"_index":1011,"title":{},"body":{"classes/Setting.html":{},"miscellaneous/enumerations.html":{}}}],["operationhourstype.always_open",{"_index":1031,"title":{},"body":{"classes/Setting.html":{}}}],["operationhourstype.enum",{"_index":1030,"title":{},"body":{"classes/Setting.html":{}}}],["operationtimetable",{"_index":1012,"title":{},"body":{"classes/Setting.html":{}}}],["optional",{"_index":144,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":872,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":821,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"coverage.html":{}}}],["order_canceled_by_store",{"_index":1315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["order_canceled_by_user",{"_index":1316,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orderdonedate",{"_index":831,"title":{},"body":{"classes/Order.html":{}}}],["orders",{"_index":862,"title":{},"body":{"controllers/OrdersController.html":{}}}],["orders.controller",{"_index":868,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":869,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["orderscontroller",{"_index":860,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordershortdescription",{"_index":832,"title":{},"body":{"classes/Order.html":{}}}],["ordersmodule",{"_index":235,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":866,"title":{"injectables/OrdersService.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":85,"title":{},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1392,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1261,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":780,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{}}}],["param('id",{"_index":790,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{}}}],["parameters",{"_index":142,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseuuidpipe",{"_index":781,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{}}}],["password",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":782,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{}}}],["patch(':id",{"_index":961,"title":{},"body":{"controllers/RatingsController.html":{}}}],["patch(':id')@apiresponse({type",{"_index":951,"title":{},"body":{"controllers/RatingsController.html":{}}}],["patch(':id/status",{"_index":789,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["patch(':id/status')@apicreatedresponse({type",{"_index":778,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["paymenttype",{"_index":833,"title":{},"body":{"classes/Order.html":{}}}],["pg",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":565,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/Store.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["platform",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":1375,"title":{},"body":{"index.html":{}}}],["png",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":176,"title":{},"body":{"controllers/AdressesController.html":{},"controllers/ComplaintsController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{},"controllers/UsersController.html":{}}}],["post()@apicreatedresponse({type",{"_index":172,"title":{},"body":{"controllers/AdressesController.html":{},"controllers/ComplaintsController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{}}}],["post()@apiresponse({type",{"_index":943,"title":{},"body":{"controllers/RatingsController.html":{},"controllers/UsersController.html":{}}}],["postgres",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postscriptum",{"_index":834,"title":{},"body":{"classes/Order.html":{}}}],["predominantcolor",{"_index":1076,"title":{},"body":{"classes/Store.html":{}}}],["prefix",{"_index":67,"title":{},"body":{"controllers/AddonsController.html":{},"controllers/AdressesController.html":{},"controllers/CatalogsController.html":{},"controllers/CitiesController.html":{},"controllers/CombosController.html":{},"controllers/ComplaintsController.html":{},"controllers/CouponsController.html":{},"controllers/FavoritesController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/PushtokensController.html":{},"controllers/RatingsController.html":{},"controllers/SectionsController.html":{},"controllers/SettingsController.html":{},"controllers/SpecialtiesController.html":{},"controllers/StoresController.html":{},"controllers/StoretypesController.html":{},"controllers/UsedcouponsController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":13,"title":{},"body":{"classes/Addon.html":{},"classes/Combo.html":{},"classes/Product.html":{}}}],["primarygeneratedcolumn",{"_index":595,"title":{},"body":{"classes/DefaultEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":40,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["private",{"_index":209,"title":{},"body":{"injectables/AdressesService.html":{},"injectables/ComplaintsService.html":{},"injectables/ImagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{},"injectables/UsersService.html":{}}}],["process.env.cloudinary_api_key",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.cloudinary_api_secret",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.cloudinary_cloud_name",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_database",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_pass",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_user",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":285,"title":{"classes/Product.html":{}},"body":{"classes/Catalog.html":{},"classes/Product.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["product.catalog",{"_index":303,"title":{},"body":{"classes/Catalog.html":{}}}],["production",{"_index":1356,"title":{},"body":{"index.html":{}}}],["productoptions",{"_index":705,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productoptions.base64prefix}${base64",{"_index":724,"title":{},"body":{"injectables/ImagesService.html":{}}}],["productoptions.options",{"_index":725,"title":{},"body":{"injectables/ImagesService.html":{}}}],["products",{"_index":278,"title":{},"body":{"classes/Catalog.html":{},"controllers/ProductsController.html":{}}}],["products.controller",{"_index":891,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":892,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products/product.entity",{"_index":297,"title":{},"body":{"classes/Catalog.html":{}}}],["products/products.module",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":884,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":236,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":889,"title":{"injectables/ProductsService.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":1332,"title":{},"body":{"index.html":{}}}],["project",{"_index":1366,"title":{},"body":{"index.html":{}}}],["promise",{"_index":146,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/ImageRepository.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["providers",{"_index":78,"title":{},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pushtoken",{"_index":894,"title":{"classes/PushToken.html":{}},"body":{"classes/PushToken.html":{},"coverage.html":{}}}],["pushtokens",{"_index":902,"title":{},"body":{"controllers/PushtokensController.html":{}}}],["pushtokens.controller",{"_index":908,"title":{},"body":{"modules/PushtokensModule.html":{}}}],["pushtokens.service",{"_index":909,"title":{},"body":{"modules/PushtokensModule.html":{}}}],["pushtokens/pushtokens.module",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["pushtokenscontroller",{"_index":900,"title":{"controllers/PushtokensController.html":{}},"body":{"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"coverage.html":{}}}],["pushtokensmodule",{"_index":237,"title":{"modules/PushtokensModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PushtokensModule.html":{},"modules.html":{},"overview.html":{}}}],["pushtokensservice",{"_index":906,"title":{"injectables/PushtokensService.html":{}},"body":{"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"coverage.html":{},"overview.html":{}}}],["quality",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rating",{"_index":544,"title":{"classes/Rating.html":{}},"body":{"classes/CreateRatingDTO.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/Store.html":{},"classes/UpdateRatingDTO.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rating.dto",{"_index":927,"title":{},"body":{"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{}}}],["rating.dto.ts",{"_index":543,"title":{},"body":{"classes/CreateRatingDTO.html":{},"classes/UpdateRatingDTO.html":{},"coverage.html":{}}}],["rating.dto.ts:14",{"_index":552,"title":{},"body":{"classes/CreateRatingDTO.html":{},"classes/UpdateRatingDTO.html":{}}}],["rating.dto.ts:19",{"_index":551,"title":{},"body":{"classes/CreateRatingDTO.html":{},"classes/UpdateRatingDTO.html":{}}}],["rating.dto.ts:24",{"_index":1149,"title":{},"body":{"classes/UpdateRatingDTO.html":{}}}],["rating.dto.ts:25",{"_index":549,"title":{},"body":{"classes/CreateRatingDTO.html":{}}}],["rating.dto.ts:30",{"_index":548,"title":{},"body":{"classes/CreateRatingDTO.html":{}}}],["rating.dto.ts:34",{"_index":550,"title":{},"body":{"classes/CreateRatingDTO.html":{}}}],["rating.dto.ts:38",{"_index":553,"title":{},"body":{"classes/CreateRatingDTO.html":{}}}],["rating.dto.ts:9",{"_index":1147,"title":{},"body":{"classes/UpdateRatingDTO.html":{}}}],["rating.entity",{"_index":928,"title":{},"body":{"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{}}}],["rating.rating",{"_index":934,"title":{},"body":{"classes/RatingRepository.html":{},"injectables/RatingsService.html":{}}}],["rating.reply",{"_index":933,"title":{},"body":{"classes/RatingRepository.html":{},"injectables/RatingsService.html":{}}}],["rating.repository",{"_index":966,"title":{},"body":{"modules/RatingsModule.html":{},"injectables/RatingsService.html":{}}}],["rating.save",{"_index":937,"title":{},"body":{"classes/RatingRepository.html":{},"injectables/RatingsService.html":{}}}],["rating.store",{"_index":935,"title":{},"body":{"classes/RatingRepository.html":{}}}],["rating.text",{"_index":932,"title":{},"body":{"classes/RatingRepository.html":{},"injectables/RatingsService.html":{}}}],["rating.title",{"_index":931,"title":{},"body":{"classes/RatingRepository.html":{},"injectables/RatingsService.html":{}}}],["rating.user",{"_index":936,"title":{},"body":{"classes/RatingRepository.html":{}}}],["rating_request",{"_index":1317,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ratingfromrequest",{"_index":930,"title":{},"body":{"classes/RatingRepository.html":{},"injectables/RatingsService.html":{}}}],["ratingrepository",{"_index":922,"title":{"classes/RatingRepository.html":{}},"body":{"classes/RatingRepository.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"coverage.html":{}}}],["ratings",{"_index":940,"title":{},"body":{"controllers/RatingsController.html":{}}}],["ratings.controller",{"_index":967,"title":{},"body":{"modules/RatingsModule.html":{}}}],["ratings.service",{"_index":955,"title":{},"body":{"controllers/RatingsController.html":{},"modules/RatingsModule.html":{}}}],["ratings/ratings.module",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["ratingscontroller",{"_index":938,"title":{"controllers/RatingsController.html":{}},"body":{"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"coverage.html":{}}}],["ratingsmodule",{"_index":238,"title":{"modules/RatingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RatingsModule.html":{},"modules.html":{},"overview.html":{}}}],["ratingsservice",{"_index":954,"title":{"injectables/RatingsService.html":{}},"body":{"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"coverage.html":{},"overview.html":{}}}],["rating})@usepipes(validationpipe",{"_index":944,"title":{},"body":{"controllers/RatingsController.html":{}}}],["read",{"_index":1376,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":222,"title":{},"body":{"controllers/AppController.html":{}}}],["ready_for_pickup",{"_index":1318,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reason",{"_index":377,"title":{},"body":{"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"classes/CreateComplaintDTO.html":{}}}],["reflect",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["reply",{"_index":545,"title":{},"body":{"classes/CreateRatingDTO.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"injectables/RatingsService.html":{},"classes/UpdateRatingDTO.html":{}}}],["repository",{"_index":135,"title":{},"body":{"classes/AddressRepository.html":{},"classes/CityRepository.html":{},"classes/ComplaintRepository.html":{},"classes/ImageRepository.html":{},"classes/NotificationRepository.html":{},"classes/RatingRepository.html":{},"classes/StoreRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["required",{"_index":525,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["required'})@apiproperty()@isuuid",{"_index":529,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["reset",{"_index":84,"title":{},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":60,"title":{},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":62,"title":{},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":168,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":145,"title":{},"body":{"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":1351,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1337,"title":{},"body":{"index.html":{}}}],["section",{"_index":287,"title":{"classes/Section.html":{}},"body":{"classes/Catalog.html":{},"classes/Product.html":{},"classes/Section.html":{},"coverage.html":{}}}],["section.catalog",{"_index":302,"title":{},"body":{"classes/Catalog.html":{}}}],["sections",{"_index":279,"title":{},"body":{"classes/Catalog.html":{},"controllers/SectionsController.html":{}}}],["sections.controller",{"_index":996,"title":{},"body":{"modules/SectionsModule.html":{}}}],["sections.service",{"_index":997,"title":{},"body":{"modules/SectionsModule.html":{}}}],["sections/section.entity",{"_index":298,"title":{},"body":{"classes/Catalog.html":{},"classes/Product.html":{}}}],["sections/sections.module",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["sectionscontroller",{"_index":989,"title":{"controllers/SectionsController.html":{}},"body":{"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"coverage.html":{}}}],["sectionsmodule",{"_index":239,"title":{"modules/SectionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SectionsModule.html":{},"modules.html":{},"overview.html":{}}}],["sectionsservice",{"_index":994,"title":{"injectables/SectionsService.html":{}},"body":{"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"coverage.html":{},"overview.html":{}}}],["secure",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secureurl",{"_index":618,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{}}}],["selectedcity",{"_index":1167,"title":{},"body":{"classes/User.html":{},"classes/UserRepository.html":{}}}],["selectedcityid",{"_index":566,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["sendimagetocloudinary",{"_index":693,"title":{},"body":{"injectables/ImagesService.html":{}}}],["sendimagetocloudinary(base64",{"_index":697,"title":{},"body":{"injectables/ImagesService.html":{}}}],["sent",{"_index":982,"title":{},"body":{"injectables/RatingsService.html":{}}}],["server",{"_index":1338,"title":{},"body":{"index.html":{}}}],["setdescription('kwik",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":999,"title":{"classes/Setting.html":{}},"body":{"classes/Setting.html":{},"classes/Store.html":{},"coverage.html":{}}}],["settings",{"_index":1035,"title":{},"body":{"controllers/SettingsController.html":{},"classes/Store.html":{}}}],["settings.controller",{"_index":1041,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.service",{"_index":1042,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/setting.entity",{"_index":1107,"title":{},"body":{"classes/Store.html":{}}}],["settings/settings.module",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["settingscontroller",{"_index":1033,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["settingsmodule",{"_index":240,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsservice",{"_index":1039,"title":{"injectables/SettingsService.html":{}},"body":{"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["settitle('kwik",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/default.entity",{"_index":49,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["side",{"_index":1339,"title":{},"body":{"index.html":{}}}],["single_fee",{"_index":1299,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slug",{"_index":1057,"title":{},"body":{"classes/Specialty.html":{},"classes/StoreType.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Addon.html":{},"controllers/AddonsController.html":{},"modules/AddonsModule.html":{},"injectables/AddonsService.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"controllers/CatalogsController.html":{},"modules/CatalogsModule.html":{},"injectables/CatalogsService.html":{},"controllers/CitiesController.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"controllers/CombosController.html":{},"modules/CombosModule.html":{},"injectables/CombosService.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"modules/ComplaintsModule.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"controllers/CouponsController.html":{},"modules/CouponsModule.html":{},"injectables/CouponsService.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"controllers/FavoritesController.html":{},"modules/FavoritesModule.html":{},"injectables/FavoritesService.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/PushToken.html":{},"controllers/PushtokensController.html":{},"modules/PushtokensModule.html":{},"injectables/PushtokensService.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"controllers/SectionsController.html":{},"modules/SectionsModule.html":{},"injectables/SectionsService.html":{},"classes/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"controllers/StoresController.html":{},"modules/StoresModule.html":{},"injectables/StoresService.html":{},"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["specialties",{"_index":1046,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["specialties.controller",{"_index":1052,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["specialties.service",{"_index":1053,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["specialties/specialties.module",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["specialtiescontroller",{"_index":1044,"title":{"controllers/SpecialtiesController.html":{}},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"coverage.html":{}}}],["specialtiesmodule",{"_index":241,"title":{"modules/SpecialtiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpecialtiesModule.html":{},"modules.html":{},"overview.html":{}}}],["specialtiesservice",{"_index":1050,"title":{"injectables/SpecialtiesService.html":{}},"body":{"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"coverage.html":{},"overview.html":{}}}],["specialty",{"_index":1055,"title":{"classes/Specialty.html":{}},"body":{"classes/Specialty.html":{},"coverage.html":{}}}],["sponsors",{"_index":1369,"title":{},"body":{"index.html":{}}}],["src/.../cloudinary.config.ts",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../deliveryfeetype.enum.ts",{"_index":1289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../gender.enum.ts",{"_index":1290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../imagetype.enum.ts",{"_index":1291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../itemtype.enum.ts",{"_index":1292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notificationtype.enum.ts",{"_index":1293,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../operationhourstype.enum.ts",{"_index":1294,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../status.enum.ts",{"_index":1295,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../swagger.config.ts",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/addons/addon.entity.ts",{"_index":6,"title":{},"body":{"classes/Addon.html":{},"coverage.html":{}}}],["src/addons/addon.entity.ts:11",{"_index":31,"title":{},"body":{"classes/Addon.html":{}}}],["src/addons/addon.entity.ts:14",{"_index":34,"title":{},"body":{"classes/Addon.html":{}}}],["src/addons/addon.entity.ts:22",{"_index":28,"title":{},"body":{"classes/Addon.html":{}}}],["src/addons/addon.entity.ts:8",{"_index":35,"title":{},"body":{"classes/Addon.html":{}}}],["src/addons/addons.controller.ts",{"_index":66,"title":{},"body":{"controllers/AddonsController.html":{},"coverage.html":{}}}],["src/addons/addons.module.ts",{"_index":86,"title":{},"body":{"modules/AddonsModule.html":{}}}],["src/addons/addons.service.ts",{"_index":91,"title":{},"body":{"injectables/AddonsService.html":{},"coverage.html":{}}}],["src/adresses/address.entity.ts",{"_index":93,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["src/adresses/address.entity.ts:10",{"_index":117,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:14",{"_index":126,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:18",{"_index":109,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:22",{"_index":106,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:26",{"_index":119,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:30",{"_index":110,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:34",{"_index":118,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:38",{"_index":115,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:42",{"_index":116,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:46",{"_index":121,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:55",{"_index":125,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.entity.ts:59",{"_index":113,"title":{},"body":{"classes/Address.html":{}}}],["src/adresses/address.repository.ts",{"_index":134,"title":{},"body":{"classes/AddressRepository.html":{},"coverage.html":{}}}],["src/adresses/address.repository.ts:8",{"_index":141,"title":{},"body":{"classes/AddressRepository.html":{}}}],["src/adresses/adresses.controller.ts",{"_index":170,"title":{},"body":{"controllers/AdressesController.html":{},"coverage.html":{}}}],["src/adresses/adresses.controller.ts:21",{"_index":174,"title":{},"body":{"controllers/AdressesController.html":{}}}],["src/adresses/adresses.module.ts",{"_index":192,"title":{},"body":{"modules/AdressesModule.html":{}}}],["src/adresses/adresses.service.ts",{"_index":201,"title":{},"body":{"injectables/AdressesService.html":{},"coverage.html":{}}}],["src/adresses/adresses.service.ts:17",{"_index":205,"title":{},"body":{"injectables/AdressesService.html":{}}}],["src/adresses/adresses.service.ts:9",{"_index":204,"title":{},"body":{"injectables/AdressesService.html":{}}}],["src/adresses/dto/create",{"_index":451,"title":{},"body":{"classes/CreateAddressDTO.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":217,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":219,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":271,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":272,"title":{},"body":{"injectables/AppService.html":{}}}],["src/catalogs/catalog.entity.ts",{"_index":276,"title":{},"body":{"classes/Catalog.html":{},"coverage.html":{}}}],["src/catalogs/catalog.entity.ts:14",{"_index":291,"title":{},"body":{"classes/Catalog.html":{}}}],["src/catalogs/catalog.entity.ts:22",{"_index":282,"title":{},"body":{"classes/Catalog.html":{}}}],["src/catalogs/catalog.entity.ts:30",{"_index":288,"title":{},"body":{"classes/Catalog.html":{}}}],["src/catalogs/catalog.entity.ts:38",{"_index":286,"title":{},"body":{"classes/Catalog.html":{}}}],["src/catalogs/catalog.entity.ts:46",{"_index":284,"title":{},"body":{"classes/Catalog.html":{}}}],["src/catalogs/catalogs.controller.ts",{"_index":306,"title":{},"body":{"controllers/CatalogsController.html":{},"coverage.html":{}}}],["src/catalogs/catalogs.module.ts",{"_index":312,"title":{},"body":{"modules/CatalogsModule.html":{}}}],["src/catalogs/catalogs.service.ts",{"_index":315,"title":{},"body":{"injectables/CatalogsService.html":{},"coverage.html":{}}}],["src/cities/cities.controller.ts",{"_index":317,"title":{},"body":{"controllers/CitiesController.html":{},"coverage.html":{}}}],["src/cities/cities.module.ts",{"_index":323,"title":{},"body":{"modules/CitiesModule.html":{}}}],["src/cities/cities.service.ts",{"_index":326,"title":{},"body":{"injectables/CitiesService.html":{},"coverage.html":{}}}],["src/cities/city.entity.ts",{"_index":327,"title":{},"body":{"classes/City.html":{},"coverage.html":{}}}],["src/cities/city.entity.ts:10",{"_index":332,"title":{},"body":{"classes/City.html":{}}}],["src/cities/city.entity.ts:13",{"_index":337,"title":{},"body":{"classes/City.html":{}}}],["src/cities/city.entity.ts:16",{"_index":338,"title":{},"body":{"classes/City.html":{}}}],["src/cities/city.entity.ts:19",{"_index":336,"title":{},"body":{"classes/City.html":{}}}],["src/cities/city.entity.ts:7",{"_index":334,"title":{},"body":{"classes/City.html":{}}}],["src/cities/city.repository.ts",{"_index":340,"title":{},"body":{"classes/CityRepository.html":{},"coverage.html":{}}}],["src/combos/combo.entity.ts",{"_index":343,"title":{},"body":{"classes/Combo.html":{},"coverage.html":{}}}],["src/combos/combo.entity.ts:12",{"_index":359,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combo.entity.ts:15",{"_index":351,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combo.entity.ts:18",{"_index":358,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combo.entity.ts:21",{"_index":349,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combo.entity.ts:24",{"_index":352,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combo.entity.ts:27",{"_index":356,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combo.entity.ts:30",{"_index":357,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combo.entity.ts:35",{"_index":354,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combo.entity.ts:43",{"_index":350,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combo.entity.ts:9",{"_index":355,"title":{},"body":{"classes/Combo.html":{}}}],["src/combos/combos.controller.ts",{"_index":362,"title":{},"body":{"controllers/CombosController.html":{},"coverage.html":{}}}],["src/combos/combos.module.ts",{"_index":367,"title":{},"body":{"modules/CombosModule.html":{}}}],["src/combos/combos.service.ts",{"_index":370,"title":{},"body":{"injectables/CombosService.html":{},"coverage.html":{}}}],["src/complaints/complaint.entity.ts",{"_index":372,"title":{},"body":{"classes/Complaint.html":{},"coverage.html":{}}}],["src/complaints/complaint.entity.ts:13",{"_index":381,"title":{},"body":{"classes/Complaint.html":{}}}],["src/complaints/complaint.entity.ts:17",{"_index":383,"title":{},"body":{"classes/Complaint.html":{}}}],["src/complaints/complaint.entity.ts:21",{"_index":382,"title":{},"body":{"classes/Complaint.html":{}}}],["src/complaints/complaint.entity.ts:25",{"_index":378,"title":{},"body":{"classes/Complaint.html":{}}}],["src/complaints/complaint.entity.ts:9",{"_index":380,"title":{},"body":{"classes/Complaint.html":{}}}],["src/complaints/complaint.repository.ts",{"_index":386,"title":{},"body":{"classes/ComplaintRepository.html":{},"coverage.html":{}}}],["src/complaints/complaint.repository.ts:7",{"_index":390,"title":{},"body":{"classes/ComplaintRepository.html":{}}}],["src/complaints/complaints.controller.ts",{"_index":401,"title":{},"body":{"controllers/ComplaintsController.html":{},"coverage.html":{}}}],["src/complaints/complaints.controller.ts:21",{"_index":404,"title":{},"body":{"controllers/ComplaintsController.html":{}}}],["src/complaints/complaints.module.ts",{"_index":412,"title":{},"body":{"modules/ComplaintsModule.html":{}}}],["src/complaints/complaints.service.ts",{"_index":416,"title":{},"body":{"injectables/ComplaintsService.html":{},"coverage.html":{}}}],["src/complaints/complaints.service.ts:14",{"_index":419,"title":{},"body":{"injectables/ComplaintsService.html":{}}}],["src/complaints/complaints.service.ts:8",{"_index":418,"title":{},"body":{"injectables/ComplaintsService.html":{}}}],["src/complaints/dto/create",{"_index":481,"title":{},"body":{"classes/CreateComplaintDTO.html":{},"coverage.html":{}}}],["src/complaints/itemtype.enum.ts",{"_index":1308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/config/cloudinary.config.ts",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger.config.ts",{"_index":1245,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/typeorm.config.ts",{"_index":1246,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/coupons/coupon.entity.ts",{"_index":423,"title":{},"body":{"classes/Coupon.html":{},"coverage.html":{}}}],["src/coupons/coupon.entity.ts:12",{"_index":437,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupon.entity.ts:15",{"_index":431,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupon.entity.ts:18",{"_index":434,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupon.entity.ts:21",{"_index":436,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupon.entity.ts:24",{"_index":439,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupon.entity.ts:27",{"_index":432,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupon.entity.ts:30",{"_index":433,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupon.entity.ts:35",{"_index":438,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupon.entity.ts:40",{"_index":435,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupon.entity.ts:9",{"_index":430,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupons/coupons.controller.ts",{"_index":441,"title":{},"body":{"controllers/CouponsController.html":{},"coverage.html":{}}}],["src/coupons/coupons.module.ts",{"_index":447,"title":{},"body":{"modules/CouponsModule.html":{}}}],["src/coupons/coupons.service.ts",{"_index":450,"title":{},"body":{"injectables/CouponsService.html":{},"coverage.html":{}}}],["src/favorites/favorite.entity.ts",{"_index":597,"title":{},"body":{"classes/Favorite.html":{},"coverage.html":{}}}],["src/favorites/favorite.entity.ts:11",{"_index":599,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorites/favorite.entity.ts:16",{"_index":598,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorites/favorites.controller.ts",{"_index":601,"title":{},"body":{"controllers/FavoritesController.html":{},"coverage.html":{}}}],["src/favorites/favorites.module.ts",{"_index":607,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["src/favorites/favorites.service.ts",{"_index":610,"title":{},"body":{"injectables/FavoritesService.html":{},"coverage.html":{}}}],["src/images/dto/create",{"_index":500,"title":{},"body":{"classes/CreateImageDTO.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts",{"_index":636,"title":{},"body":{"classes/ImageDTO.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts:16",{"_index":649,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:21",{"_index":650,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:25",{"_index":644,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:29",{"_index":643,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:34",{"_index":639,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:39",{"_index":647,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:44",{"_index":651,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:49",{"_index":641,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:54",{"_index":646,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:59",{"_index":638,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/dto/image.dto.ts:64",{"_index":640,"title":{},"body":{"classes/ImageDTO.html":{}}}],["src/images/image.entity.ts",{"_index":611,"title":{},"body":{"classes/Image.html":{},"coverage.html":{}}}],["src/images/image.entity.ts:10",{"_index":631,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:14",{"_index":632,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:18",{"_index":628,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:22",{"_index":627,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:26",{"_index":624,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:30",{"_index":630,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:34",{"_index":633,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:38",{"_index":626,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:42",{"_index":629,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:46",{"_index":623,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.entity.ts:50",{"_index":625,"title":{},"body":{"classes/Image.html":{}}}],["src/images/image.repository.ts",{"_index":653,"title":{},"body":{"classes/ImageRepository.html":{},"coverage.html":{}}}],["src/images/image.repository.ts:7",{"_index":656,"title":{},"body":{"classes/ImageRepository.html":{}}}],["src/images/images.controller.ts",{"_index":673,"title":{},"body":{"controllers/ImagesController.html":{},"coverage.html":{}}}],["src/images/images.controller.ts:21",{"_index":677,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/images.module.ts",{"_index":688,"title":{},"body":{"modules/ImagesModule.html":{}}}],["src/images/images.service.ts",{"_index":692,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/images/images.service.ts:19",{"_index":695,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:24",{"_index":698,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:59",{"_index":696,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/imagetype.enum.ts",{"_index":1305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":1250,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/notifications/dto/create",{"_index":513,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"coverage.html":{}}}],["src/notifications/dto/update",{"_index":1142,"title":{},"body":{"classes/UpdateNotificationDTO.html":{},"coverage.html":{}}}],["src/notifications/notification.entity.ts",{"_index":743,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["src/notifications/notification.entity.ts:12",{"_index":747,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/notification.entity.ts:16",{"_index":749,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/notification.entity.ts:20",{"_index":748,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/notification.entity.ts:24",{"_index":746,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/notification.entity.ts:28",{"_index":752,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/notification.entity.ts:32",{"_index":745,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/notification.entity.ts:38",{"_index":753,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/notification.entity.ts:44",{"_index":751,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/notification.repository.ts",{"_index":755,"title":{},"body":{"classes/NotificationRepository.html":{},"coverage.html":{}}}],["src/notifications/notification.repository.ts:9",{"_index":758,"title":{},"body":{"classes/NotificationRepository.html":{}}}],["src/notifications/notifications.controller.ts",{"_index":771,"title":{},"body":{"controllers/NotificationsController.html":{},"coverage.html":{}}}],["src/notifications/notifications.controller.ts:25",{"_index":775,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["src/notifications/notifications.controller.ts:36",{"_index":779,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["src/notifications/notifications.module.ts",{"_index":796,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["src/notifications/notifications.service.ts",{"_index":804,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/notifications/notifications.service.ts:14",{"_index":806,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:26",{"_index":807,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:48",{"_index":808,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notificationtype.enum.ts",{"_index":1309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/orders/order.entity.ts",{"_index":822,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/orders/order.entity.ts:10",{"_index":847,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:13",{"_index":857,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:16",{"_index":854,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:19",{"_index":852,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:22",{"_index":844,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:25",{"_index":848,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:28",{"_index":851,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:31",{"_index":843,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:34",{"_index":849,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:37",{"_index":846,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:40",{"_index":845,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:43",{"_index":840,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:46",{"_index":853,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:49",{"_index":839,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:52",{"_index":850,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:55",{"_index":841,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:58",{"_index":838,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:63",{"_index":856,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/order.entity.ts:68",{"_index":855,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/orders.controller.ts",{"_index":861,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.module.ts",{"_index":867,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service.ts",{"_index":870,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/status.enum.ts",{"_index":1322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/products/product.entity.ts",{"_index":871,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:10",{"_index":878,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:13",{"_index":883,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:16",{"_index":875,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:21",{"_index":877,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:24",{"_index":880,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:27",{"_index":876,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:30",{"_index":873,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:33",{"_index":881,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:36",{"_index":879,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:41",{"_index":882,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.entity.ts:49",{"_index":874,"title":{},"body":{"classes/Product.html":{}}}],["src/products/products.controller.ts",{"_index":885,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.module.ts",{"_index":890,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":893,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/pushtokens/pushtoken.entity.ts",{"_index":895,"title":{},"body":{"classes/PushToken.html":{},"coverage.html":{}}}],["src/pushtokens/pushtoken.entity.ts:12",{"_index":896,"title":{},"body":{"classes/PushToken.html":{}}}],["src/pushtokens/pushtoken.entity.ts:17",{"_index":899,"title":{},"body":{"classes/PushToken.html":{}}}],["src/pushtokens/pushtoken.entity.ts:22",{"_index":898,"title":{},"body":{"classes/PushToken.html":{}}}],["src/pushtokens/pushtoken.entity.ts:9",{"_index":897,"title":{},"body":{"classes/PushToken.html":{}}}],["src/pushtokens/pushtokens.controller.ts",{"_index":901,"title":{},"body":{"controllers/PushtokensController.html":{},"coverage.html":{}}}],["src/pushtokens/pushtokens.module.ts",{"_index":907,"title":{},"body":{"modules/PushtokensModule.html":{}}}],["src/pushtokens/pushtokens.service.ts",{"_index":910,"title":{},"body":{"injectables/PushtokensService.html":{},"coverage.html":{}}}],["src/ratings/dto/create",{"_index":542,"title":{},"body":{"classes/CreateRatingDTO.html":{},"coverage.html":{}}}],["src/ratings/dto/update",{"_index":1144,"title":{},"body":{"classes/UpdateRatingDTO.html":{},"coverage.html":{}}}],["src/ratings/rating.entity.ts",{"_index":911,"title":{},"body":{"classes/Rating.html":{},"coverage.html":{}}}],["src/ratings/rating.entity.ts:12",{"_index":917,"title":{},"body":{"classes/Rating.html":{}}}],["src/ratings/rating.entity.ts:16",{"_index":916,"title":{},"body":{"classes/Rating.html":{}}}],["src/ratings/rating.entity.ts:20",{"_index":914,"title":{},"body":{"classes/Rating.html":{}}}],["src/ratings/rating.entity.ts:24",{"_index":913,"title":{},"body":{"classes/Rating.html":{}}}],["src/ratings/rating.entity.ts:28",{"_index":912,"title":{},"body":{"classes/Rating.html":{}}}],["src/ratings/rating.entity.ts:32",{"_index":915,"title":{},"body":{"classes/Rating.html":{}}}],["src/ratings/rating.entity.ts:36",{"_index":918,"title":{},"body":{"classes/Rating.html":{}}}],["src/ratings/rating.repository.ts",{"_index":923,"title":{},"body":{"classes/RatingRepository.html":{},"coverage.html":{}}}],["src/ratings/rating.repository.ts:9",{"_index":926,"title":{},"body":{"classes/RatingRepository.html":{}}}],["src/ratings/ratings.controller.ts",{"_index":939,"title":{},"body":{"controllers/RatingsController.html":{},"coverage.html":{}}}],["src/ratings/ratings.controller.ts:25",{"_index":948,"title":{},"body":{"controllers/RatingsController.html":{}}}],["src/ratings/ratings.controller.ts:32",{"_index":945,"title":{},"body":{"controllers/RatingsController.html":{}}}],["src/ratings/ratings.controller.ts:41",{"_index":952,"title":{},"body":{"controllers/RatingsController.html":{}}}],["src/ratings/ratings.module.ts",{"_index":965,"title":{},"body":{"modules/RatingsModule.html":{}}}],["src/ratings/ratings.service.ts",{"_index":969,"title":{},"body":{"injectables/RatingsService.html":{},"coverage.html":{}}}],["src/ratings/ratings.service.ts:15",{"_index":971,"title":{},"body":{"injectables/RatingsService.html":{}}}],["src/ratings/ratings.service.ts:27",{"_index":973,"title":{},"body":{"injectables/RatingsService.html":{}}}],["src/ratings/ratings.service.ts:33",{"_index":972,"title":{},"body":{"injectables/RatingsService.html":{}}}],["src/ratings/ratings.service.ts:55",{"_index":974,"title":{},"body":{"injectables/RatingsService.html":{}}}],["src/sections/section.entity.ts",{"_index":984,"title":{},"body":{"classes/Section.html":{},"coverage.html":{}}}],["src/sections/section.entity.ts:11",{"_index":988,"title":{},"body":{"classes/Section.html":{}}}],["src/sections/section.entity.ts:19",{"_index":986,"title":{},"body":{"classes/Section.html":{}}}],["src/sections/section.entity.ts:8",{"_index":987,"title":{},"body":{"classes/Section.html":{}}}],["src/sections/sections.controller.ts",{"_index":990,"title":{},"body":{"controllers/SectionsController.html":{},"coverage.html":{}}}],["src/sections/sections.module.ts",{"_index":995,"title":{},"body":{"modules/SectionsModule.html":{}}}],["src/sections/sections.service.ts",{"_index":998,"title":{},"body":{"injectables/SectionsService.html":{},"coverage.html":{}}}],["src/settings/deliveryfeetype.enum.ts",{"_index":1296,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/settings/operationhourstype.enum.ts",{"_index":1319,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/settings/setting.entity.ts",{"_index":1000,"title":{},"body":{"classes/Setting.html":{},"coverage.html":{}}}],["src/settings/setting.entity.ts:12",{"_index":1028,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:15",{"_index":1025,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:18",{"_index":1026,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:21",{"_index":1027,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:24",{"_index":1014,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:27",{"_index":1017,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:30",{"_index":1016,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:33",{"_index":1015,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:36",{"_index":1023,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:39",{"_index":1019,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:42",{"_index":1018,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:45",{"_index":1020,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/setting.entity.ts:9",{"_index":1022,"title":{},"body":{"classes/Setting.html":{}}}],["src/settings/settings.controller.ts",{"_index":1034,"title":{},"body":{"controllers/SettingsController.html":{},"coverage.html":{}}}],["src/settings/settings.module.ts",{"_index":1040,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/settings/settings.service.ts",{"_index":1043,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/shared/default.entity.ts",{"_index":590,"title":{},"body":{"classes/DefaultEntity.html":{},"coverage.html":{}}}],["src/shared/default.entity.ts:10",{"_index":593,"title":{},"body":{"classes/DefaultEntity.html":{}}}],["src/shared/default.entity.ts:13",{"_index":592,"title":{},"body":{"classes/DefaultEntity.html":{}}}],["src/shared/default.entity.ts:16",{"_index":594,"title":{},"body":{"classes/DefaultEntity.html":{}}}],["src/specialties/specialties.controller.ts",{"_index":1045,"title":{},"body":{"controllers/SpecialtiesController.html":{},"coverage.html":{}}}],["src/specialties/specialties.module.ts",{"_index":1051,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["src/specialties/specialties.service.ts",{"_index":1054,"title":{},"body":{"injectables/SpecialtiesService.html":{},"coverage.html":{}}}],["src/specialties/specialty.entity.ts",{"_index":1056,"title":{},"body":{"classes/Specialty.html":{},"coverage.html":{}}}],["src/specialties/specialty.entity.ts:11",{"_index":1059,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/specialty.entity.ts:14",{"_index":1060,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/specialty.entity.ts:19",{"_index":1062,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/specialty.entity.ts:8",{"_index":1063,"title":{},"body":{"classes/Specialty.html":{}}}],["src/stores/store.entity.ts",{"_index":1067,"title":{},"body":{"classes/Store.html":{},"coverage.html":{}}}],["src/stores/store.entity.ts:12",{"_index":1102,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:15",{"_index":1087,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:18",{"_index":1086,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:21",{"_index":1096,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:26",{"_index":1084,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:31",{"_index":1094,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:34",{"_index":1092,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:37",{"_index":1090,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:40",{"_index":1088,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:43",{"_index":1100,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:46",{"_index":1093,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:51",{"_index":1080,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:54",{"_index":1091,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:57",{"_index":1089,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:62",{"_index":1101,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:65",{"_index":1095,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:68",{"_index":1098,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:71",{"_index":1082,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:76",{"_index":1085,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.entity.ts:84",{"_index":1104,"title":{},"body":{"classes/Store.html":{}}}],["src/stores/store.repository.ts",{"_index":1110,"title":{},"body":{"classes/StoreRepository.html":{},"coverage.html":{}}}],["src/stores/stores.controller.ts",{"_index":1122,"title":{},"body":{"controllers/StoresController.html":{},"coverage.html":{}}}],["src/stores/stores.module.ts",{"_index":1127,"title":{},"body":{"modules/StoresModule.html":{}}}],["src/stores/stores.service.ts",{"_index":1131,"title":{},"body":{"injectables/StoresService.html":{},"coverage.html":{}}}],["src/storetypes/storetype.entity.ts",{"_index":1113,"title":{},"body":{"classes/StoreType.html":{},"coverage.html":{}}}],["src/storetypes/storetype.entity.ts:11",{"_index":1115,"title":{},"body":{"classes/StoreType.html":{}}}],["src/storetypes/storetype.entity.ts:14",{"_index":1116,"title":{},"body":{"classes/StoreType.html":{}}}],["src/storetypes/storetype.entity.ts:17",{"_index":1117,"title":{},"body":{"classes/StoreType.html":{}}}],["src/storetypes/storetype.entity.ts:25",{"_index":1118,"title":{},"body":{"classes/StoreType.html":{}}}],["src/storetypes/storetype.entity.ts:8",{"_index":1119,"title":{},"body":{"classes/StoreType.html":{}}}],["src/storetypes/storetypes.controller.ts",{"_index":1133,"title":{},"body":{"controllers/StoretypesController.html":{},"coverage.html":{}}}],["src/storetypes/storetypes.module.ts",{"_index":1138,"title":{},"body":{"modules/StoretypesModule.html":{}}}],["src/storetypes/storetypes.service.ts",{"_index":1141,"title":{},"body":{"injectables/StoretypesService.html":{},"coverage.html":{}}}],["src/usedcoupons/usedcoupon.entity.ts",{"_index":1151,"title":{},"body":{"classes/UsedCoupon.html":{},"coverage.html":{}}}],["src/usedcoupons/usedcoupon.entity.ts:11",{"_index":1152,"title":{},"body":{"classes/UsedCoupon.html":{}}}],["src/usedcoupons/usedcoupon.entity.ts:16",{"_index":1153,"title":{},"body":{"classes/UsedCoupon.html":{}}}],["src/usedcoupons/usedcoupons.controller.ts",{"_index":1156,"title":{},"body":{"controllers/UsedcouponsController.html":{},"coverage.html":{}}}],["src/usedcoupons/usedcoupons.module.ts",{"_index":1162,"title":{},"body":{"modules/UsedcouponsModule.html":{}}}],["src/usedcoupons/usedcoupons.service.ts",{"_index":1165,"title":{},"body":{"injectables/UsedcouponsService.html":{},"coverage.html":{}}}],["src/users/dto/create",{"_index":557,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["src/users/gender.enum.ts",{"_index":1300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/user.entity.ts",{"_index":1166,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:11",{"_index":1171,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:14",{"_index":1175,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:17",{"_index":1170,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:20",{"_index":1177,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:23",{"_index":1169,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:26",{"_index":1173,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:34",{"_index":1168,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:39",{"_index":1179,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:44",{"_index":1174,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:49",{"_index":1178,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.repository.ts",{"_index":1180,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/users/user.repository.ts:10",{"_index":1183,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/users.controller.ts",{"_index":1198,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:21",{"_index":1201,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1211,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1216,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:14",{"_index":1218,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:22",{"_index":1219,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1352,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1355,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1357,"title":{},"body":{"index.html":{}}}],["started",{"_index":1331,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1345,"title":{},"body":{"index.html":{}}}],["state",{"_index":101,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/City.html":{},"classes/CreateAddressDTO.html":{}}}],["stateinitials",{"_index":331,"title":{},"body":{"classes/City.html":{}}}],["statements",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":835,"title":{},"body":{"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["status.enum",{"_index":858,"title":{},"body":{"classes/Order.html":{}}}],["status.open",{"_index":859,"title":{},"body":{"classes/Order.html":{}}}],["stay",{"_index":1379,"title":{},"body":{"index.html":{}}}],["store",{"_index":280,"title":{"classes/Store.html":{}},"body":{"classes/Catalog.html":{},"classes/Coupon.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"injectables/RatingsService.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["store.entity",{"_index":1111,"title":{},"body":{"classes/StoreRepository.html":{}}}],["store.repository",{"_index":1128,"title":{},"body":{"modules/StoresModule.html":{}}}],["store.storetypes",{"_index":1120,"title":{},"body":{"classes/StoreType.html":{}}}],["storeid",{"_index":518,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/NotificationsService.html":{}}}],["storename",{"_index":1077,"title":{},"body":{"classes/Store.html":{}}}],["storerepository",{"_index":797,"title":{"classes/StoreRepository.html":{}},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/StoreRepository.html":{},"modules/StoresModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["stores",{"_index":1058,"title":{},"body":{"classes/Specialty.html":{},"controllers/StoresController.html":{}}}],["stores.controller",{"_index":1129,"title":{},"body":{"modules/StoresModule.html":{}}}],["stores.service",{"_index":1130,"title":{},"body":{"modules/StoresModule.html":{}}}],["stores/store.entity",{"_index":299,"title":{},"body":{"classes/Catalog.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"classes/Order.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"classes/Specialty.html":{},"classes/StoreType.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["stores/store.repository",{"_index":798,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["stores/stores.module",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["storescontroller",{"_index":1121,"title":{"controllers/StoresController.html":{}},"body":{"controllers/StoresController.html":{},"modules/StoresModule.html":{},"coverage.html":{}}}],["storesmodule",{"_index":242,"title":{"modules/StoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoresModule.html":{},"modules.html":{},"overview.html":{}}}],["storesservice",{"_index":1126,"title":{"injectables/StoresService.html":{}},"body":{"modules/StoresModule.html":{},"injectables/StoresService.html":{},"coverage.html":{},"overview.html":{}}}],["storetype",{"_index":1103,"title":{"classes/StoreType.html":{}},"body":{"classes/Store.html":{},"classes/StoreType.html":{},"coverage.html":{}}}],["storetype.store",{"_index":1109,"title":{},"body":{"classes/Store.html":{}}}],["storetypes",{"_index":1078,"title":{},"body":{"classes/Store.html":{},"controllers/StoretypesController.html":{}}}],["storetypes.controller",{"_index":1139,"title":{},"body":{"modules/StoretypesModule.html":{}}}],["storetypes.service",{"_index":1140,"title":{},"body":{"modules/StoretypesModule.html":{}}}],["storetypes/storetype.entity",{"_index":1108,"title":{},"body":{"classes/Store.html":{}}}],["storetypes/storetypes.module",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["storetypescontroller",{"_index":1132,"title":{"controllers/StoretypesController.html":{}},"body":{"controllers/StoretypesController.html":{},"modules/StoretypesModule.html":{},"coverage.html":{}}}],["storetypesmodule",{"_index":243,"title":{"modules/StoretypesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoretypesModule.html":{},"modules.html":{},"overview.html":{}}}],["storetypesservice",{"_index":1137,"title":{"injectables/StoretypesService.html":{}},"body":{"modules/StoretypesModule.html":{},"injectables/StoretypesService.html":{},"coverage.html":{},"overview.html":{}}}],["street",{"_index":102,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/CreateAddressDTO.html":{}}}],["string",{"_index":29,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["support",{"_index":1370,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1390,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":709,"title":{},"body":{"injectables/ImagesService.html":{}}}],["synchronize",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["termsofuse",{"_index":428,"title":{},"body":{"classes/Coupon.html":{}}}],["test",{"_index":1360,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1363,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1362,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1359,"title":{},"body":{"index.html":{}}}],["text",{"_index":546,"title":{},"body":{"classes/CreateRatingDTO.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"injectables/RatingsService.html":{},"classes/UpdateRatingDTO.html":{}}}],["thanks",{"_index":1368,"title":{},"body":{"index.html":{}}}],["this.addressrepository.createaddress(createaddressdto",{"_index":215,"title":{},"body":{"injectables/AdressesService.html":{}}}],["this.adressesservice.createaddress(createaddressdto",{"_index":187,"title":{},"body":{"controllers/AdressesController.html":{}}}],["this.appservice.gethello",{"_index":223,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cityrepository.findone(createuserdto.selectedcityid",{"_index":1228,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.complaintrepository.createcomplaint(createcomplaintdto",{"_index":421,"title":{},"body":{"injectables/ComplaintsService.html":{}}}],["this.complaintsservice.createcomplaint(createcomplaintdto",{"_index":409,"title":{},"body":{"controllers/ComplaintsController.html":{}}}],["this.imagerepository.createimage(imagedto",{"_index":741,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagerepository.findone(createuserdto.imageid",{"_index":1226,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.imagesservice.createimage(createimagedto",{"_index":684,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.notificationrepository.createnotification",{"_index":817,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notificationrepository.findone(id",{"_index":818,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notificationsservice.createnotification",{"_index":788,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.notificationsservice.updatenotification",{"_index":791,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.ratingrepository.createrating",{"_index":983,"title":{},"body":{"injectables/RatingsService.html":{}}}],["this.ratingrepository.findone(id",{"_index":976,"title":{},"body":{"injectables/RatingsService.html":{}}}],["this.ratingsservice.createrating(createratingdto",{"_index":960,"title":{},"body":{"controllers/RatingsController.html":{}}}],["this.ratingsservice.getrating(id",{"_index":959,"title":{},"body":{"controllers/RatingsController.html":{}}}],["this.ratingsservice.updaterating(id",{"_index":962,"title":{},"body":{"controllers/RatingsController.html":{}}}],["this.sendimagetocloudinary(base64",{"_index":727,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.storerepository.findone(createratingdto.store",{"_index":980,"title":{},"body":{"injectables/RatingsService.html":{}}}],["this.storerepository.findone(createuserdto.storeid",{"_index":1224,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.storerepository.findone(storeid",{"_index":814,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.userrepository.createuser",{"_index":1229,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(createaddressdto.user",{"_index":211,"title":{},"body":{"injectables/AdressesService.html":{}}}],["this.userrepository.findone(createratingdto.user",{"_index":979,"title":{},"body":{"injectables/RatingsService.html":{}}}],["this.userrepository.findone(userid",{"_index":813,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":1207,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":212,"title":{},"body":{"injectables/AdressesService.html":{},"injectables/NotificationsService.html":{},"injectables/RatingsService.html":{}}}],["thumbnail",{"_index":619,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{}}}],["title",{"_index":14,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"classes/Product.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"injectables/RatingsService.html":{},"classes/Specialty.html":{},"classes/StoreType.html":{},"classes/UpdateRatingDTO.html":{}}}],["touch",{"_index":1380,"title":{},"body":{"index.html":{}}}],["transformation",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":108,"title":{},"body":{"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/Notification.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Setting.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isboolean",{"_index":642,"title":{},"body":{"classes/ImageDTO.html":{}}}],["true})@joincolumn",{"_index":1083,"title":{},"body":{"classes/Store.html":{}}}],["twitter",{"_index":1386,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"controllers/AdressesController.html":{},"injectables/AdressesService.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"controllers/ComplaintsController.html":{},"injectables/ComplaintsService.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":47,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/CityRepository.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/ComplaintRepository.html":{},"classes/Coupon.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/ImageRepository.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreRepository.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":193,"title":{},"body":{"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/ComplaintsModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/RatingsModule.html":{},"modules/StoresModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature",{"_index":968,"title":{},"body":{"modules/RatingsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([addressrepository",{"_index":200,"title":{},"body":{"modules/AdressesModule.html":{}}}],["typeormmodule.forfeature([complaintrepository",{"_index":415,"title":{},"body":{"modules/ComplaintsModule.html":{}}}],["typeormmodule.forfeature([imagerepository",{"_index":691,"title":{},"body":{"modules/ImagesModule.html":{}}}],["typeormmodule.forfeature([notificationrepository",{"_index":801,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["typeormmodule.forfeature([storerepository",{"_index":802,"title":{},"body":{"modules/NotificationsModule.html":{},"modules/StoresModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":803,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":55,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":22,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/User.html":{}}}],["undefined})@isenum(gender)@isnotempty",{"_index":572,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["undefined})@isenum(imagetype)@isnotempty",{"_index":506,"title":{},"body":{"classes/CreateImageDTO.html":{}}}],["undefined})@isenum({enum",{"_index":489,"title":{},"body":{"classes/CreateComplaintDTO.html":{}}}],["undefined})@manytoone(undefined",{"_index":123,"title":{},"body":{"classes/Address.html":{}}}],["unique",{"_index":919,"title":{},"body":{"classes/Rating.html":{}}}],["unique(['store",{"_index":920,"title":{},"body":{"classes/Rating.html":{}}}],["unit",{"_index":1358,"title":{},"body":{"index.html":{}}}],["unused",{"_index":57,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["updatedat",{"_index":17,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["updatedatecolumn",{"_index":42,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/City.html":{},"classes/Combo.html":{},"classes/Complaint.html":{},"classes/Coupon.html":{},"classes/DefaultEntity.html":{},"classes/Favorite.html":{},"classes/Image.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Setting.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["updatenotification",{"_index":773,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{}}}],["updatenotification(id",{"_index":776,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{}}}],["updatenotificationdto",{"_index":777,"title":{"classes/UpdateNotificationDTO.html":{}},"body":{"controllers/NotificationsController.html":{},"classes/UpdateNotificationDTO.html":{},"coverage.html":{}}}],["updatenotificationdto.isread",{"_index":792,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["updaterating",{"_index":942,"title":{},"body":{"controllers/RatingsController.html":{},"injectables/RatingsService.html":{}}}],["updaterating(id",{"_index":949,"title":{},"body":{"controllers/RatingsController.html":{},"injectables/RatingsService.html":{}}}],["updateratingdto",{"_index":950,"title":{"classes/UpdateRatingDTO.html":{}},"body":{"controllers/RatingsController.html":{},"injectables/RatingsService.html":{},"classes/UpdateRatingDTO.html":{},"coverage.html":{}}}],["url",{"_index":620,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{}}}],["usedcoupon",{"_index":1150,"title":{"classes/UsedCoupon.html":{}},"body":{"classes/UsedCoupon.html":{},"coverage.html":{}}}],["usedcoupons",{"_index":1157,"title":{},"body":{"controllers/UsedcouponsController.html":{}}}],["usedcoupons.controller",{"_index":1163,"title":{},"body":{"modules/UsedcouponsModule.html":{}}}],["usedcoupons.service",{"_index":1164,"title":{},"body":{"modules/UsedcouponsModule.html":{}}}],["usedcoupons/usedcoupons.module",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["usedcouponscontroller",{"_index":1155,"title":{"controllers/UsedcouponsController.html":{}},"body":{"controllers/UsedcouponsController.html":{},"modules/UsedcouponsModule.html":{},"coverage.html":{}}}],["usedcouponsmodule",{"_index":244,"title":{"modules/UsedcouponsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsedcouponsModule.html":{},"modules.html":{},"overview.html":{}}}],["usedcouponsservice",{"_index":1161,"title":{"injectables/UsedcouponsService.html":{}},"body":{"modules/UsedcouponsModule.html":{},"injectables/UsedcouponsService.html":{},"coverage.html":{},"overview.html":{}}}],["usepipes",{"_index":177,"title":{},"body":{"controllers/AdressesController.html":{},"controllers/ComplaintsController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{},"controllers/UsersController.html":{}}}],["usepipes(validationpipe",{"_index":186,"title":{},"body":{"controllers/AdressesController.html":{},"controllers/ComplaintsController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":103,"title":{"classes/User.html":{}},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"injectables/AdressesService.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"injectables/NotificationsService.html":{},"classes/Order.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"injectables/RatingsService.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.adresses",{"_index":131,"title":{},"body":{"classes/Address.html":{}}}],["user.dateofbirth",{"_index":1191,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.dto",{"_index":1184,"title":{},"body":{"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":558,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:18",{"_index":571,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:23",{"_index":576,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:28",{"_index":570,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:33",{"_index":578,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:38",{"_index":568,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:43",{"_index":573,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:48",{"_index":582,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:53",{"_index":575,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:57",{"_index":580,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.email",{"_index":1189,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.entity",{"_index":1185,"title":{},"body":{"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":1187,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.gender",{"_index":1192,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.image",{"_index":1194,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.lastname",{"_index":1188,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.phonenumber",{"_index":1190,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.repository",{"_index":1214,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.save",{"_index":1196,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.selectedcity",{"_index":1195,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.store",{"_index":1193,"title":{},"body":{"classes/UserRepository.html":{}}}],["userdataonorder",{"_index":836,"title":{},"body":{"classes/Order.html":{}}}],["userid",{"_index":519,"title":{},"body":{"classes/CreateNotificationDTO.html":{},"injectables/NotificationsService.html":{}}}],["username",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":195,"title":{"classes/UserRepository.html":{}},"body":{"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{},"classes/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users",{"_index":1199,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1215,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1203,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.entity",{"_index":130,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/Coupon.html":{},"classes/CreateAddressDTO.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/NotificationRepository.html":{},"classes/Order.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/RatingRepository.html":{},"classes/UsedCoupon.html":{}}}],["users/user.repository",{"_index":196,"title":{},"body":{"modules/AdressesModule.html":{},"injectables/AdressesService.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/RatingsModule.html":{},"injectables/RatingsService.html":{}}}],["users/users.module",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":1197,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":245,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":1202,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["user})@usepipes(validationpipe",{"_index":1200,"title":{},"body":{"controllers/UsersController.html":{}}}],["validateif",{"_index":535,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["validateif(o",{"_index":538,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["validateif(undefined",{"_index":528,"title":{},"body":{"classes/CreateNotificationDTO.html":{}}}],["validationpipe",{"_index":178,"title":{},"body":{"controllers/AdressesController.html":{},"controllers/ComplaintsController.html":{},"controllers/ImagesController.html":{},"controllers/NotificationsController.html":{},"controllers/RatingsController.html":{},"controllers/UsersController.html":{}}}],["validator",{"_index":479,"title":{},"body":{"classes/CreateAddressDTO.html":{},"classes/CreateComplaintDTO.html":{},"classes/CreateImageDTO.html":{},"classes/CreateNotificationDTO.html":{},"classes/CreateRatingDTO.html":{},"classes/CreateUserDTO.html":{},"classes/ImageDTO.html":{},"classes/UpdateNotificationDTO.html":{},"classes/UpdateRatingDTO.html":{},"dependencies.html":{}}}],["validuntil",{"_index":429,"title":{},"body":{"classes/Coupon.html":{}}}],["value",{"_index":1298,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1395,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":58,"title":{},"body":{"classes/Addon.html":{},"classes/Address.html":{},"classes/Catalog.html":{},"classes/Combo.html":{},"classes/Coupon.html":{},"classes/Favorite.html":{},"classes/Notification.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/PushToken.html":{},"classes/Rating.html":{},"classes/Section.html":{},"classes/Specialty.html":{},"classes/Store.html":{},"classes/StoreType.html":{},"classes/UsedCoupon.html":{},"classes/User.html":{}}}],["watch",{"_index":1353,"title":{},"body":{"index.html":{}}}],["website",{"_index":1384,"title":{},"body":{"index.html":{}}}],["width",{"_index":621,"title":{},"body":{"classes/Image.html":{},"classes/ImageDTO.html":{},"classes/ImageRepository.html":{},"miscellaneous/variables.html":{}}}],["withdrawaltime",{"_index":1013,"title":{},"body":{"classes/Setting.html":{}}}],["you'd",{"_index":1373,"title":{},"body":{"index.html":{}}}],["zipcode",{"_index":104,"title":{},"body":{"classes/Address.html":{},"classes/AddressRepository.html":{},"classes/CreateAddressDTO.html":{}}}],["zoom",{"_index":83,"title":{},"body":{"modules/AddonsModule.html":{},"modules/AdressesModule.html":{},"modules/AppModule.html":{},"modules/CatalogsModule.html":{},"modules/CitiesModule.html":{},"modules/CombosModule.html":{},"modules/ComplaintsModule.html":{},"modules/CouponsModule.html":{},"modules/FavoritesModule.html":{},"modules/ImagesModule.html":{},"modules/NotificationsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/PushtokensModule.html":{},"modules/RatingsModule.html":{},"modules/SectionsModule.html":{},"modules/SettingsModule.html":{},"modules/SpecialtiesModule.html":{},"modules/StoresModule.html":{},"modules/StoretypesModule.html":{},"modules/UsedcouponsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Addon.html":{"url":"classes/Addon.html","title":"class - Addon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Addon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/addons/addon.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                catalog\n                            \n                            \n                                description\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            catalog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Catalog\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {eager: false, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/addons/addon.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/addons/addon.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('money')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/addons/addon.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/addons/addon.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, ManyToOne } from 'typeorm';\nimport { Catalog } from '../catalogs/catalog.entity';\nimport { DefaultEntity } from '../shared/default.entity';\n\n@Entity()\nexport class Addon extends DefaultEntity {\n  @Column()\n  title: string;\n\n  @Column()\n  description: string;\n\n  @Column('money')\n  price: number;\n\n  @ManyToOne(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Catalog,\n    catalog => catalog.addons,\n    { eager: false, onDelete: 'CASCADE' },\n  )\n  catalog: Catalog;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddonsController.html":{"url":"controllers/AddonsController.html","title":"controller - AddonsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddonsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/addons/addons.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                addons\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('addons')\nexport class AddonsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddonsModule.html":{"url":"modules/AddonsModule.html","title":"module - AddonsModule","body":"\n                   \n\n\n\n\n    Modules\n    AddonsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddonsModule\n\n\n\ncluster_AddonsModule_providers\n\n\n\n\nAddonsService\n\nAddonsService\n\n\n\nAddonsModule\n\nAddonsModule\n\nAddonsModule -->\n\nAddonsService->AddonsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/addons/addons.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddonsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddonsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AddonsController } from './addons.controller';\nimport { AddonsService } from './addons.service';\n\n@Module({\n  controllers: [AddonsController],\n  providers: [AddonsService]\n})\nexport class AddonsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddonsService.html":{"url":"injectables/AddonsService.html","title":"injectable - AddonsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddonsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/addons/addons.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AddonsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adresses/address.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                complement\n                            \n                            \n                                houseNumber\n                            \n                            \n                                isDefault\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                neighbourhood\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            complement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            houseNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            neighbourhood\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: undefined})@ManyToOne(undefined, undefined, {eager: false, onDelete: 'CASCADE', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/address.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { User } from '../users/user.entity';\n\n@Entity()\nexport class Address extends DefaultEntity {\n  @ApiProperty()\n  @Column()\n  neighbourhood: string;\n\n  @ApiProperty()\n  @Column()\n  zipCode: string;\n\n  @ApiPropertyOptional()\n  @Column({ nullable: true })\n  complement: string;\n\n  @ApiProperty()\n  @Column()\n  city: string;\n\n  @ApiProperty()\n  @Column()\n  street: string;\n\n  @ApiProperty()\n  @Column()\n  houseNumber: number;\n\n  @ApiProperty()\n  @Column()\n  state: string;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  latitude: string;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  longitude: string;\n\n  @ApiPropertyOptional()\n  @Column()\n  title: string;\n\n  @ApiPropertyOptional({ type: () => User })\n  @ManyToOne(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => User,\n    user => user.adresses,\n    { eager: false, onDelete: 'CASCADE', nullable: true },\n  )\n  user: User;\n\n  @ApiProperty()\n  @Column({ default: true })\n  isDefault: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressRepository.html":{"url":"classes/AddressRepository.html","title":"class - AddressRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adresses/address.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(createAddressDTO: CreateAddressDTO, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/adresses/address.repository.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAddressDTO\n                                    \n                                                CreateAddressDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { User } from '../users/user.entity';\nimport { Address } from './address.entity';\nimport { CreateAddressDTO } from './dto/create-address.dto';\n\n@EntityRepository(Address)\nexport class AddressRepository extends Repository {\n  async createAddress(\n    createAddressDTO: CreateAddressDTO,\n    user: User,\n  ): Promise {\n    const {\n      neighbourhood,\n      zipCode,\n      complement,\n      city,\n      street,\n      houseNumber,\n      state,\n      latitude,\n      longitude,\n      title,\n      isDefault,\n    } = createAddressDTO;\n\n    const address = new Address();\n    address.neighbourhood = neighbourhood;\n    address.zipCode = zipCode;\n    address.complement = complement;\n    address.city = city;\n    address.street = street;\n    address.houseNumber = houseNumber;\n    address.state = state;\n    address.latitude = latitude;\n    address.longitude = longitude;\n    address.title = title;\n    address.user = user;\n    address.isDefault = isDefault;\n\n    await address.save();\n    return address;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdressesController.html":{"url":"controllers/AdressesController.html","title":"controller - AdressesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdressesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adresses/adresses.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                adresses\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(createAddressDTO: CreateAddressDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: Address})@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/adresses/adresses.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAddressDTO\n                                    \n                                                CreateAddressDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiCreatedResponse, ApiTags } from '@nestjs/swagger';\nimport { Address } from './address.entity';\nimport { AdressesService } from './adresses.service';\nimport { CreateAddressDTO } from './dto/create-address.dto';\n\n@ApiTags('adresses')\n@Controller('adresses')\nexport class AdressesController {\n  constructor(private adressesService: AdressesService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: Address })\n  @UsePipes(ValidationPipe)\n  async createAddress(\n    @Body() createAddressDTO: CreateAddressDTO,\n  ): Promise {\n    return await this.adressesService.createAddress(createAddressDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdressesModule.html":{"url":"modules/AdressesModule.html","title":"module - AdressesModule","body":"\n                   \n\n\n\n\n    Modules\n    AdressesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdressesModule\n\n\n\ncluster_AdressesModule_exports\n\n\n\ncluster_AdressesModule_providers\n\n\n\n\nAdressesService \n\nAdressesService \n\n\n\nAdressesModule\n\nAdressesModule\n\nAdressesService  -->\n\nAdressesModule->AdressesService \n\n\n\n\n\nAdressesService\n\nAdressesService\n\nAdressesModule -->\n\nAdressesService->AdressesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/adresses/adresses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdressesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdressesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdressesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserRepository } from '../users/user.repository';\nimport { AddressRepository } from './address.repository';\nimport { AdressesController } from './adresses.controller';\nimport { AdressesService } from './adresses.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AddressRepository, UserRepository])],\n  controllers: [AdressesController],\n  providers: [AdressesService],\n  exports: [AdressesService],\n})\nexport class AdressesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdressesService.html":{"url":"injectables/AdressesService.html","title":"injectable - AdressesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdressesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adresses/adresses.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addressRepository: AddressRepository, userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/adresses/adresses.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        AddressRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(createAddressDTO: CreateAddressDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/adresses/adresses.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAddressDTO\n                                    \n                                                CreateAddressDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserRepository } from '../users/user.repository';\nimport { Address } from './address.entity';\nimport { AddressRepository } from './address.repository';\nimport { CreateAddressDTO } from './dto/create-address.dto';\n\n@Injectable()\nexport class AdressesService {\n  constructor(\n    @InjectRepository(AddressRepository)\n    private addressRepository: AddressRepository,\n\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n  ) {}\n  async createAddress(createAddressDTO: CreateAddressDTO): Promise {\n    const user = await this.userRepository.findOne(createAddressDTO.user);\n    if (!user) throw new NotFoundException('User not find');\n\n    return await this.addressRepository.createAddress(createAddressDTO, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAddonsModule\n\nAddonsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddonsModule->AppModule\n\n\n\n\n\nAdressesModule\n\nAdressesModule\n\nAppModule -->\n\nAdressesModule->AppModule\n\n\n\n\n\nCatalogsModule\n\nCatalogsModule\n\nAppModule -->\n\nCatalogsModule->AppModule\n\n\n\n\n\nCitiesModule\n\nCitiesModule\n\nAppModule -->\n\nCitiesModule->AppModule\n\n\n\n\n\nCombosModule\n\nCombosModule\n\nAppModule -->\n\nCombosModule->AppModule\n\n\n\n\n\nComplaintsModule\n\nComplaintsModule\n\nAppModule -->\n\nComplaintsModule->AppModule\n\n\n\n\n\nCouponsModule\n\nCouponsModule\n\nAppModule -->\n\nCouponsModule->AppModule\n\n\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nAppModule -->\n\nFavoritesModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nPushtokensModule\n\nPushtokensModule\n\nAppModule -->\n\nPushtokensModule->AppModule\n\n\n\n\n\nRatingsModule\n\nRatingsModule\n\nAppModule -->\n\nRatingsModule->AppModule\n\n\n\n\n\nSectionsModule\n\nSectionsModule\n\nAppModule -->\n\nSectionsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nAppModule -->\n\nSpecialtiesModule->AppModule\n\n\n\n\n\nStoresModule\n\nStoresModule\n\nAppModule -->\n\nStoresModule->AppModule\n\n\n\n\n\nStoretypesModule\n\nStoretypesModule\n\nAppModule -->\n\nStoretypesModule->AppModule\n\n\n\n\n\nUsedcouponsModule\n\nUsedcouponsModule\n\nAppModule -->\n\nUsedcouponsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AddonsModule\n                        \n                        \n                            AdressesModule\n                        \n                        \n                            CatalogsModule\n                        \n                        \n                            CitiesModule\n                        \n                        \n                            CombosModule\n                        \n                        \n                            ComplaintsModule\n                        \n                        \n                            CouponsModule\n                        \n                        \n                            FavoritesModule\n                        \n                        \n                            ImagesModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            PushtokensModule\n                        \n                        \n                            RatingsModule\n                        \n                        \n                            SectionsModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            SpecialtiesModule\n                        \n                        \n                            StoresModule\n                        \n                        \n                            StoretypesModule\n                        \n                        \n                            UsedcouponsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AddonsModule } from './addons/addons.module';\nimport { AdressesModule } from './adresses/adresses.module';\nimport { CatalogsModule } from './catalogs/catalogs.module';\nimport { CitiesModule } from './cities/cities.module';\nimport { CombosModule } from './combos/combos.module';\nimport { ComplaintsModule } from './complaints/complaints.module';\nimport { typeOrmConfig } from './config/typeorm.config';\nimport { CouponsModule } from './coupons/coupons.module';\nimport { FavoritesModule } from './favorites/favorites.module';\nimport { ImagesModule } from './images/images.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { OrdersModule } from './orders/orders.module';\nimport { ProductsModule } from './products/products.module';\nimport { PushtokensModule } from './pushtokens/pushtokens.module';\nimport { RatingsModule } from './ratings/ratings.module';\nimport { SectionsModule } from './sections/sections.module';\nimport { SettingsModule } from './settings/settings.module';\nimport { SpecialtiesModule } from './specialties/specialties.module';\nimport { StoresModule } from './stores/stores.module';\nimport { StoretypesModule } from './storetypes/storetypes.module';\nimport { UsedcouponsModule } from './usedcoupons/usedcoupons.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(typeOrmConfig),\n    AddonsModule,\n    AdressesModule,\n    CatalogsModule,\n    CitiesModule,\n    CombosModule,\n    ComplaintsModule,\n    CouponsModule,\n    FavoritesModule,\n    ImagesModule,\n    NotificationsModule,\n    OrdersModule,\n    ProductsModule,\n    PushtokensModule,\n    RatingsModule,\n    SectionsModule,\n    SettingsModule,\n    SpecialtiesModule,\n    StoresModule,\n    StoretypesModule,\n    UsedcouponsModule,\n    UsersModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Fala meu bom!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Catalog.html":{"url":"classes/Catalog.html","title":"class - Catalog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Catalog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/catalogs/catalog.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addons\n                            \n                            \n                                combos\n                            \n                            \n                                products\n                            \n                            \n                                sections\n                            \n                            \n                                store\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Addon[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/catalogs/catalog.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Combo[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/catalogs/catalog.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Product[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/catalogs/catalog.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sections\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Section[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/catalogs/catalog.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {nullable: false, onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/catalogs/catalog.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, JoinColumn, OneToMany, OneToOne } from 'typeorm';\nimport { Addon } from '../addons/addon.entity';\nimport { Combo } from '../combos/combo.entity';\nimport { Product } from '../products/product.entity';\nimport { Section } from '../sections/section.entity';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\n\n@Entity()\nexport class Catalog extends DefaultEntity {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Store, { nullable: false, onDelete: 'CASCADE' })\n  @JoinColumn()\n  store: Store;\n\n  @OneToMany(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Addon,\n    addon => addon.catalog,\n    { eager: true, onDelete: 'CASCADE' },\n  )\n  addons: Addon[];\n\n  @OneToMany(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Section,\n    section => section.catalog,\n    { eager: true, onDelete: 'CASCADE' },\n  )\n  sections: Section[];\n\n  @OneToMany(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Product,\n    product => product.catalog,\n    { eager: true, onDelete: 'CASCADE' },\n  )\n  products: Product[];\n\n  @OneToMany(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Combo,\n    combo => combo.catalog,\n    { eager: true, onDelete: 'CASCADE' },\n  )\n  combos: Combo[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatalogsController.html":{"url":"controllers/CatalogsController.html","title":"controller - CatalogsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatalogsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/catalogs/catalogs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                catalogs\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('catalogs')\nexport class CatalogsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatalogsModule.html":{"url":"modules/CatalogsModule.html","title":"module - CatalogsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatalogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatalogsModule\n\n\n\ncluster_CatalogsModule_providers\n\n\n\n\nCatalogsService\n\nCatalogsService\n\n\n\nCatalogsModule\n\nCatalogsModule\n\nCatalogsModule -->\n\nCatalogsService->CatalogsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/catalogs/catalogs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatalogsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatalogsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatalogsController } from './catalogs.controller';\nimport { CatalogsService } from './catalogs.service';\n\n@Module({\n  controllers: [CatalogsController],\n  providers: [CatalogsService]\n})\nexport class CatalogsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatalogsService.html":{"url":"injectables/CatalogsService.html","title":"injectable - CatalogsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatalogsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/catalogs/catalogs.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CatalogsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CitiesController.html":{"url":"controllers/CitiesController.html","title":"controller - CitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/cities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cities\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('cities')\nexport class CitiesController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CitiesModule.html":{"url":"modules/CitiesModule.html","title":"module - CitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    CitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CitiesModule\n\n\n\ncluster_CitiesModule_providers\n\n\n\n\nCitiesService\n\nCitiesService\n\n\n\nCitiesModule\n\nCitiesModule\n\nCitiesModule -->\n\nCitiesService->CitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cities/cities.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CitiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CitiesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CitiesController } from './cities.controller';\nimport { CitiesService } from './cities.service';\n\n@Module({\n  controllers: [CitiesController],\n  providers: [CitiesService]\n})\nexport class CitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CitiesService.html":{"url":"injectables/CitiesService.html","title":"injectable - CitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/cities.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CitiesService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/City.html":{"url":"classes/City.html","title":"class - City","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  City\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/city.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cityName\n                            \n                            \n                                isEnabled\n                            \n                            \n                                numberOfStores\n                            \n                            \n                                state\n                            \n                            \n                                stateInitials\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cityName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cities/city.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cities/city.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfStores\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cities/city.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cities/city.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateInitials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cities/city.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\n\n@Entity()\nexport class City extends DefaultEntity {\n  @Column({ default: false })\n  isEnabled: boolean;\n\n  @Column()\n  cityName: string;\n\n  @Column()\n  state: string;\n\n  @Column()\n  stateInitials: string;\n\n  @Column({ default: 0 })\n  numberOfStores: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CityRepository.html":{"url":"classes/CityRepository.html","title":"class - CityRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CityRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/city.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { City } from './city.entity';\n\n@EntityRepository(City)\nexport class CityRepository extends Repository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Combo.html":{"url":"classes/Combo.html","title":"class - Combo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Combo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/combos/combo.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addons\n                            \n                            \n                                catalog\n                            \n                            \n                                description\n                            \n                            \n                                discounts\n                            \n                            \n                                image\n                            \n                            \n                                isEnabled\n                            \n                            \n                                items\n                            \n                            \n                                numberOfSold\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            catalog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Catalog\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {eager: false, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Image\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfSold\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('money')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/combos/combo.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, OneToOne } from 'typeorm';\nimport { Catalog } from '../catalogs/catalog.entity';\nimport { Image } from '../images/image.entity';\nimport { DefaultEntity } from '../shared/default.entity';\n\n@Entity()\nexport class Combo extends DefaultEntity {\n  @Column({ default: true })\n  isEnabled: boolean;\n\n  @Column()\n  title: string;\n\n  @Column()\n  description: string;\n\n  @Column('money')\n  price: number;\n\n  @Column('jsonb')\n  addons: string;\n\n  @Column('jsonb')\n  discounts: string;\n\n  @Column('jsonb')\n  items: string;\n\n  @Column({ default: 0 })\n  numberOfSold: number;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Image)\n  @JoinColumn()\n  image: Image;\n\n  @ManyToOne(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Catalog,\n    catalog => catalog.addons,\n    { eager: false, onDelete: 'CASCADE' },\n  )\n  catalog: Catalog;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CombosController.html":{"url":"controllers/CombosController.html","title":"controller - CombosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CombosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/combos/combos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                combos\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('combos')\nexport class CombosController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CombosModule.html":{"url":"modules/CombosModule.html","title":"module - CombosModule","body":"\n                   \n\n\n\n\n    Modules\n    CombosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CombosModule\n\n\n\ncluster_CombosModule_providers\n\n\n\n\nCombosService\n\nCombosService\n\n\n\nCombosModule\n\nCombosModule\n\nCombosModule -->\n\nCombosService->CombosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/combos/combos.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CombosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CombosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CombosController } from './combos.controller';\nimport { CombosService } from './combos.service';\n\n@Module({\n  controllers: [CombosController],\n  providers: [CombosService]\n})\nexport class CombosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CombosService.html":{"url":"injectables/CombosService.html","title":"injectable - CombosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CombosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/combos/combos.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CombosService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Complaint.html":{"url":"classes/Complaint.html","title":"class - Complaint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Complaint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/complaints/complaint.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isRead\n                            \n                            \n                                itemId\n                            \n                            \n                                itemType\n                            \n                            \n                                message\n                            \n                            \n                                reason\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRead\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/complaint.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/complaint.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/complaint.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/complaint.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/complaint.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Column, Entity } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\n\n@Entity()\nexport class Complaint extends DefaultEntity {\n  @ApiProperty()\n  @Column('uuid')\n  itemId: string;\n\n  @ApiProperty()\n  @Column()\n  itemType: string;\n\n  @ApiProperty()\n  @Column()\n  reason: string;\n\n  @ApiPropertyOptional()\n  @Column()\n  message: string;\n\n  @ApiProperty()\n  @Column({ default: false })\n  isRead: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComplaintRepository.html":{"url":"classes/ComplaintRepository.html","title":"class - ComplaintRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComplaintRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/complaints/complaint.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createComplaint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createComplaint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createComplaint(createComplaintDTO: CreateComplaintDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/complaints/complaint.repository.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createComplaintDTO\n                                    \n                                                CreateComplaintDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Complaint } from './complaint.entity';\nimport { CreateComplaintDTO } from './dto/create-complaint.dto';\n\n@EntityRepository(Complaint)\nexport class ComplaintRepository extends Repository {\n  async createComplaint(\n    createComplaintDTO: CreateComplaintDTO,\n  ): Promise {\n    const { itemId, itemType, reason, message, isRead } = createComplaintDTO;\n\n    const complaint = new Complaint();\n\n    complaint.itemId = itemId;\n    complaint.itemType = itemType;\n    complaint.reason = reason;\n    complaint.message = message;\n    complaint.isRead = isRead;\n\n    await complaint.save();\n\n    return complaint;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ComplaintsController.html":{"url":"controllers/ComplaintsController.html","title":"controller - ComplaintsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ComplaintsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/complaints/complaints.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                complaints\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createComplaint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createComplaint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createComplaint(createComplaintDTO: CreateComplaintDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: Complaint})@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/complaints/complaints.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createComplaintDTO\n                                    \n                                                CreateComplaintDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiCreatedResponse, ApiTags } from '@nestjs/swagger';\nimport { Complaint } from './complaint.entity';\nimport { ComplaintsService } from './complaints.service';\nimport { CreateComplaintDTO } from './dto/create-complaint.dto';\n\n@ApiTags('complaints')\n@Controller('complaints')\nexport class ComplaintsController {\n  constructor(private complaintsService: ComplaintsService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: Complaint })\n  @UsePipes(ValidationPipe)\n  async createComplaint(\n    @Body() createComplaintDTO: CreateComplaintDTO,\n  ): Promise {\n    return await this.complaintsService.createComplaint(createComplaintDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComplaintsModule.html":{"url":"modules/ComplaintsModule.html","title":"module - ComplaintsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComplaintsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComplaintsModule\n\n\n\ncluster_ComplaintsModule_providers\n\n\n\n\nComplaintsService\n\nComplaintsService\n\n\n\nComplaintsModule\n\nComplaintsModule\n\nComplaintsModule -->\n\nComplaintsService->ComplaintsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/complaints/complaints.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ComplaintsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ComplaintsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ComplaintRepository } from './complaint.repository';\nimport { ComplaintsController } from './complaints.controller';\nimport { ComplaintsService } from './complaints.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ComplaintRepository])],\n  controllers: [ComplaintsController],\n  providers: [ComplaintsService],\n})\nexport class ComplaintsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComplaintsService.html":{"url":"injectables/ComplaintsService.html","title":"injectable - ComplaintsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComplaintsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/complaints/complaints.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createComplaint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(complaintRepository: ComplaintRepository)\n                    \n                \n                        \n                            \n                                Defined in src/complaints/complaints.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        complaintRepository\n                                                  \n                                                        \n                                                                        ComplaintRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createComplaint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createComplaint(createComplaintDTO: CreateComplaintDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/complaints/complaints.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createComplaintDTO\n                                    \n                                                CreateComplaintDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Complaint } from './complaint.entity';\nimport { ComplaintRepository } from './complaint.repository';\nimport { CreateComplaintDTO } from './dto/create-complaint.dto';\n\n@Injectable()\nexport class ComplaintsService {\n  constructor(\n    @InjectRepository(ComplaintRepository)\n    private complaintRepository: ComplaintRepository,\n  ) {}\n\n  async createComplaint(\n    createComplaintDTO: CreateComplaintDTO,\n  ): Promise {\n    return await this.complaintRepository.createComplaint(createComplaintDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coupon.html":{"url":"classes/Coupon.html","title":"class - Coupon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coupon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupons/coupon.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                couponCode\n                            \n                            \n                                description\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                isPublic\n                            \n                            \n                                store\n                            \n                            \n                                termsOfUse\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                            \n                                validUntil\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            couponCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discountAmount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('money')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discountPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPublic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            termsOfUse\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validUntil\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/coupons/coupon.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToOne } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\nimport { User } from '../users/user.entity';\n\n@Entity()\nexport class Coupon extends DefaultEntity {\n  @Column()\n  couponCode: string;\n\n  @Column()\n  title: string;\n\n  @Column()\n  description: string;\n\n  @Column({ default: false })\n  isPublic: boolean;\n\n  @Column()\n  termsOfUse: string;\n\n  @Column()\n  validUntil: Date;\n\n  @Column('money')\n  discountAmount: number;\n\n  @Column()\n  discountPercentage: number;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => User, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  user: User;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Store, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  store: Store;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CouponsController.html":{"url":"controllers/CouponsController.html","title":"controller - CouponsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CouponsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupons/coupons.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                coupons\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('coupons')\nexport class CouponsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CouponsModule.html":{"url":"modules/CouponsModule.html","title":"module - CouponsModule","body":"\n                   \n\n\n\n\n    Modules\n    CouponsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CouponsModule\n\n\n\ncluster_CouponsModule_providers\n\n\n\n\nCouponsService\n\nCouponsService\n\n\n\nCouponsModule\n\nCouponsModule\n\nCouponsModule -->\n\nCouponsService->CouponsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/coupons/coupons.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CouponsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CouponsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CouponsController } from './coupons.controller';\nimport { CouponsService } from './coupons.service';\n\n@Module({\n  controllers: [CouponsController],\n  providers: [CouponsService]\n})\nexport class CouponsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CouponsService.html":{"url":"injectables/CouponsService.html","title":"injectable - CouponsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CouponsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupons/coupons.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CouponsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAddressDTO.html":{"url":"classes/CreateAddressDTO.html","title":"class - CreateAddressDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAddressDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/adresses/dto/create-address.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                complement\n                            \n                            \n                                houseNumber\n                            \n                            \n                                isDefault\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                neighbourhood\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            complement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            houseNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsInt()@Min(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            neighbourhood\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zipCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/adresses/dto/create-address.dto.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUUID,\n  Min,\n} from 'class-validator';\nimport { User } from '../../users/user.entity';\n\nexport class CreateAddressDTO {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  neighbourhood: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  zipCode: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsNotEmpty()\n  complement: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  city: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  street: string;\n\n  @ApiProperty()\n  @IsInt()\n  @Min(1)\n  houseNumber: number;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  state: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  latitude: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  longitude: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  title: string;\n\n  @ApiPropertyOptional()\n  @IsUUID()\n  user: User;\n\n  @ApiProperty()\n  @IsBoolean()\n  isDefault: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateComplaintDTO.html":{"url":"classes/CreateComplaintDTO.html","title":"class - CreateComplaintDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateComplaintDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/complaints/dto/create-complaint.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isRead\n                            \n                            \n                                itemId\n                            \n                            \n                                itemType\n                            \n                            \n                                message\n                            \n                            \n                                reason\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRead\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({default: false})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/dto/create-complaint.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/dto/create-complaint.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: ItemType, default: undefined})@IsEnum({enum: ItemType, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/dto/create-complaint.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsNotEmpty()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/dto/create-complaint.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/complaints/dto/create-complaint.dto.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsUUID,\n} from 'class-validator';\nimport { ItemType } from '../itemtype.enum';\n\nexport class CreateComplaintDTO {\n  @ApiProperty()\n  @IsUUID()\n  itemId: string;\n\n  @ApiProperty({\n    enum: ItemType,\n    default: ItemType.GENERAL,\n  })\n  @IsEnum({\n    enum: ItemType,\n    default: ItemType.GENERAL,\n  })\n  itemType: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  reason: string;\n\n  @ApiPropertyOptional()\n  @IsNotEmpty()\n  @IsOptional()\n  message: string;\n\n  @ApiProperty({\n    default: false,\n  })\n  @IsBoolean()\n  isRead: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateImageDTO.html":{"url":"classes/CreateImageDTO.html","title":"class - CreateImageDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateImageDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/create-image.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base64\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base64\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsBase64()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/create-image.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: ImageType, default: undefined})@IsEnum(ImageType)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/create-image.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBase64, IsEnum, IsNotEmpty } from 'class-validator';\nimport { ImageType } from '../imageType.enum';\n\nexport class CreateImageDTO {\n  @ApiProperty()\n  @IsBase64()\n  @IsNotEmpty()\n  base64: string;\n\n  @ApiProperty({ enum: ImageType, default: ImageType.GENERAL })\n  @IsEnum(ImageType)\n  @IsNotEmpty()\n  type: ImageType;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNotificationDTO.html":{"url":"classes/CreateNotificationDTO.html","title":"class - CreateNotificationDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNotificationDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/dto/create-notification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                additionalInfo\n                            \n                            \n                                body\n                            \n                            \n                                logo\n                            \n                            \n                                notificationType\n                            \n                            \n                                storeId\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            additionalInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/dto/create-notification.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/dto/create-notification.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()@IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/dto/create-notification.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: NotificationType, default: undefined, required: false})@IsOptional()@IsEnum({enum: NotificationType, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/dto/create-notification.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ValidateIf(undefined, {message: 'User ID or Store ID is required'})@ApiProperty()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/dto/create-notification.dto.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/dto/create-notification.dto.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ValidateIf(undefined, {message: 'User ID or Store ID is required'})@ApiProperty()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/dto/create-notification.dto.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsEnum,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  IsUUID,\n  ValidateIf,\n} from 'class-validator';\nimport NotificationType from '../notificationtype.enum';\n\nexport class CreateNotificationDTO {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsUrl()\n  logo: string;\n\n  @ApiProperty({\n    enum: NotificationType,\n    default: NotificationType.GENERAL,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum({\n    enum: NotificationType,\n    default: NotificationType.GENERAL,\n  })\n  notificationType: NotificationType;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  body: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsJSON()\n  additionalInfo: string;\n\n  @ValidateIf(o => !o.storeId, { message: 'User ID or Store ID is required' })\n  @ApiProperty()\n  @IsUUID()\n  userId: string;\n\n  @ValidateIf(o => !o.userId, { message: 'User ID or Store ID is required' })\n  @ApiProperty()\n  @IsUUID()\n  storeId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRatingDTO.html":{"url":"classes/CreateRatingDTO.html","title":"class - CreateRatingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRatingDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ratings/dto/create-rating.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rating\n                            \n                            \n                                reply\n                            \n                            \n                                store\n                            \n                            \n                                text\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({default: 1})@IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/create-rating.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reply\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/create-rating.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/create-rating.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/create-rating.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/create-rating.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/create-rating.dto.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  IsUUID,\n} from 'class-validator';\n\nexport class CreateRatingDTO {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  text: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  reply: string;\n\n  @ApiProperty({ default: 1.0 })\n  @IsNumber()\n  @IsNotEmpty()\n  rating: number;\n\n  @ApiProperty()\n  @IsUUID()\n  store: string;\n\n  @ApiProperty()\n  @IsUUID()\n  user: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                imageId\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                selectedCityId\n                            \n                            \n                                storeId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsDate()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: Gender, default: undefined})@IsEnum(Gender)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsPhoneNumber('BR')@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsUUID()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsDate,\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  IsUUID,\n} from 'class-validator';\nimport { Gender } from '../gender.enum';\n\nexport class CreateUserDTO {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  firstName: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  lastName: string;\n\n  @ApiProperty()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty()\n  @IsPhoneNumber('BR')\n  @IsOptional()\n  phoneNumber: string;\n\n  @ApiProperty()\n  @IsDate()\n  @IsOptional()\n  dateOfBirth: Date;\n\n  @ApiProperty({ enum: Gender, default: Gender.OTHER })\n  @IsEnum(Gender)\n  @IsNotEmpty()\n  gender: Gender;\n\n  @ApiProperty()\n  @IsUUID()\n  @IsOptional()\n  storeId: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  imageId: string;\n\n  @ApiProperty()\n  @IsString()\n  selectedCityId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultEntity.html":{"url":"classes/DefaultEntity.html","title":"class - DefaultEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/default.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/default.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/default.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/default.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport class DefaultEntity extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Favorite.html":{"url":"classes/Favorite.html","title":"class - Favorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Favorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorites/favorite.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                store\n                            \n                            \n                                user\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {nullable: false, onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/favorites/favorite.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {nullable: false, onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/favorites/favorite.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, JoinColumn, OneToOne } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\nimport { User } from '../users/user.entity';\n\n@Entity()\nexport class Favorite extends DefaultEntity {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => User, { nullable: false, onDelete: 'CASCADE' })\n  @JoinColumn()\n  user: User;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Store, { nullable: false, onDelete: 'CASCADE' })\n  @JoinColumn()\n  store: Store;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FavoritesController.html":{"url":"controllers/FavoritesController.html","title":"controller - FavoritesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FavoritesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorites/favorites.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                favorites\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('favorites')\nexport class FavoritesController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_providers\n\n\n\n\nFavoritesService\n\nFavoritesService\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nFavoritesService->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FavoritesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FavoritesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FavoritesController } from './favorites.controller';\nimport { FavoritesService } from './favorites.service';\n\n@Module({\n  controllers: [FavoritesController],\n  providers: [FavoritesService]\n})\nexport class FavoritesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavoritesService.html":{"url":"injectables/FavoritesService.html","title":"injectable - FavoritesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FavoritesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorites/favorites.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class FavoritesService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Image.html":{"url":"classes/Image.html","title":"class - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/image.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                diskSize\n                            \n                            \n                                externalId\n                            \n                            \n                                format\n                            \n                            \n                                height\n                            \n                            \n                                isApproved\n                            \n                            \n                                isReviewed\n                            \n                            \n                                secureUrl\n                            \n                            \n                                thumbnail\n                            \n                            \n                                type\n                            \n                            \n                                url\n                            \n                            \n                                width\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            diskSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column('numeric', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isApproved\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReviewed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secureUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/image.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { ImageType } from './imageType.enum';\n\n@Entity()\nexport class Image extends DefaultEntity {\n  @ApiProperty()\n  @Column({ default: ImageType.GENERAL })\n  type: ImageType;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  url: string;\n\n  @ApiProperty()\n  @Column({ default: false })\n  isReviewed: boolean;\n\n  @ApiProperty()\n  @Column({ default: true })\n  isApproved: boolean;\n\n  @ApiProperty()\n  @Column()\n  externalId: string;\n\n  @ApiProperty()\n  @Column()\n  thumbnail: string;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  width: number;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  height: number;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  secureUrl: string;\n\n  @ApiProperty()\n  @Column('numeric', { nullable: true })\n  diskSize: number;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  format: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageDTO.html":{"url":"classes/ImageDTO.html","title":"class - ImageDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                diskSize\n                            \n                            \n                                externalId\n                            \n                            \n                                format\n                            \n                            \n                                height\n                            \n                            \n                                isApproved\n                            \n                            \n                                isReviewed\n                            \n                            \n                                secureUrl\n                            \n                            \n                                thumbnail\n                            \n                            \n                                type\n                            \n                            \n                                url\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            diskSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isApproved\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({default: true})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReviewed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({default: false})@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secureUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsUrl()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsEnum(ImageType)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsUrl()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  IsUrl,\n} from 'class-validator';\nimport { ImageType } from '../imageType.enum';\n\nexport class ImageDTO {\n  @ApiProperty()\n  @IsEnum(ImageType)\n  @IsNotEmpty()\n  type: ImageType;\n\n  @ApiProperty()\n  @IsUrl()\n  @IsNotEmpty()\n  url: string;\n\n  @ApiProperty({ default: false })\n  @IsBoolean()\n  isReviewed: boolean;\n\n  @ApiProperty({ default: true })\n  @IsBoolean()\n  isApproved: boolean;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  externalId: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  thumbnail: string;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  width: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  height: number;\n\n  @ApiProperty()\n  @IsUrl()\n  @IsNotEmpty()\n  secureUrl: string;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  diskSize: number;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  format: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageRepository.html":{"url":"classes/ImageRepository.html","title":"class - ImageRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/image.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createImage(imageDTO: ImageDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/images/image.repository.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageDTO\n                                    \n                                                ImageDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { ImageDTO } from './dto/image.dto';\nimport { Image } from './image.entity';\n\n@EntityRepository(Image)\nexport class ImageRepository extends Repository {\n  async createImage(imageDTO: ImageDTO): Promise {\n    const {\n      type,\n      url,\n      isReviewed,\n      isApproved,\n      externalId,\n      thumbnail,\n      width,\n      height,\n      secureUrl,\n      diskSize,\n      format,\n    } = imageDTO;\n\n    const image = new Image();\n\n    image.type = type;\n    image.url = url;\n    image.isReviewed = isReviewed;\n    image.isApproved = isApproved;\n    image.externalId = externalId;\n    image.thumbnail = thumbnail;\n    image.width = width;\n    image.height = height;\n    image.secureUrl = secureUrl;\n    image.diskSize = diskSize;\n    image.format = format;\n\n    await image.save();\n    return image;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagesController.html":{"url":"controllers/ImagesController.html","title":"controller - ImagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/images.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                images\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createImage(createImageDTO: CreateImageDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: Image})@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/images/images.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createImageDTO\n                                    \n                                                CreateImageDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiCreatedResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateImageDTO } from './dto/create-image.dto';\nimport { Image } from './image.entity';\nimport { ImagesService } from './images.service';\n\n@ApiTags('images')\n@Controller('images')\nexport class ImagesController {\n  constructor(private imagesService: ImagesService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: Image })\n  @UsePipes(ValidationPipe)\n  async createImage(@Body() createImageDTO: CreateImageDTO) {\n    return await this.imagesService.createImage(createImageDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagesModule.html":{"url":"modules/ImagesModule.html","title":"module - ImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_providers\n\n\n\n\nImagesService \n\nImagesService \n\n\n\nImagesModule\n\nImagesModule\n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/images/images.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImagesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ImageRepository } from './image.repository';\nimport { ImagesController } from './images.controller';\nimport { ImagesService } from './images.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ImageRepository])],\n  controllers: [ImagesController],\n  providers: [ImagesService],\n  exports: [ImagesService],\n})\nexport class ImagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/images.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createImage\n                            \n                            \n                                    Private\n                                    Async\n                                sendImageToCloudinary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imageRepository: ImageRepository)\n                    \n                \n                        \n                            \n                                Defined in src/images/images.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageRepository\n                                                  \n                                                        \n                                                                        ImageRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createImage(createImageDTO: CreateImageDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createImageDTO\n                                    \n                                                CreateImageDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            sendImageToCloudinary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendImageToCloudinary(base64: string, type: ImageType)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    base64\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                ImageType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport * as cloudinary from 'cloudinary';\nimport cloudinaryConfig, {\n  avatarOptions,\n  bannerOptions,\n  defaultOptions,\n  logoOptions,\n  productOptions,\n} from '../config/cloudinary.config';\nimport { CreateImageDTO } from './dto/create-image.dto';\nimport { ImageDTO } from './dto/image.dto';\nimport { Image } from './image.entity';\nimport { ImageRepository } from './image.repository';\nimport { ImageType } from './imageType.enum';\ncloudinary.v2.config(cloudinaryConfig);\n\n@Injectable()\nexport class ImagesService {\n  constructor(\n    @InjectRepository(Image) private imageRepository: ImageRepository,\n  ) {}\n\n  private async sendImageToCloudinary(\n    base64: string,\n    type: ImageType,\n  ): Promise {\n    switch (type) {\n      case ImageType.GENERAL:\n        return await cloudinary.v2.uploader.upload(\n          `${defaultOptions.base64prefix}${base64}`,\n          defaultOptions.options,\n        );\n      case ImageType.AVATAR:\n        return await cloudinary.v2.uploader.upload(\n          `${avatarOptions.base64prefix}${base64}`,\n          avatarOptions.options,\n        );\n      case ImageType.BANNER:\n        return await cloudinary.v2.uploader.upload(\n          `${bannerOptions.base64prefix}${base64}`,\n          bannerOptions.options,\n        );\n      case ImageType.LOGO:\n        return await cloudinary.v2.uploader.upload(\n          `${logoOptions.base64prefix}${base64}`,\n          logoOptions.options,\n        );\n      case ImageType.PRODUCT:\n        return await cloudinary.v2.uploader.upload(\n          `${productOptions.base64prefix}${base64}`,\n          productOptions.options,\n        );\n      default:\n        break;\n    }\n  }\n\n  async createImage(createImageDTO: CreateImageDTO) {\n    const { base64, type } = createImageDTO;\n    const image = await this.sendImageToCloudinary(base64, type);\n\n    const imageDto = new ImageDTO();\n    imageDto.diskSize = image.bytes;\n    imageDto.externalId = image.public_id;\n    imageDto.format = image.format;\n    imageDto.height = image.height;\n    imageDto.secureUrl = image.secure_url;\n    imageDto.thumbnail = image.eager[0].secure_url;\n    imageDto.type = type;\n    imageDto.url = image.url;\n    imageDto.width = image.width;\n\n    return await this.imageRepository.createImage(imageDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/notification.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                additionalInfo\n                            \n                            \n                                body\n                            \n                            \n                                isRead\n                            \n                            \n                                logo\n                            \n                            \n                                notificationType\n                            \n                            \n                                store\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            additionalInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column('jsonb', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/notification.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/notification.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRead\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/notification.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/notification.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/notification.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/notification.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/notification.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/notification.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity, JoinColumn, OneToOne } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\nimport { User } from '../users/user.entity';\nimport NotificationType from './notificationtype.enum';\n\n@Entity()\nexport class Notification extends DefaultEntity {\n  @ApiProperty()\n  @Column({ default: false })\n  isRead: boolean;\n\n  @ApiProperty()\n  @Column({ default: NotificationType.GENERAL })\n  notificationType: NotificationType;\n\n  @ApiProperty()\n  @Column({ nullable: true })\n  logo: string;\n\n  @ApiProperty()\n  @Column()\n  body: string;\n\n  @ApiProperty()\n  @Column()\n  title: string;\n\n  @ApiProperty()\n  @Column('jsonb', { nullable: true })\n  additionalInfo: string;\n\n  @ApiProperty()\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => User, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  user: User;\n\n  @ApiProperty()\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Store, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  store: Store;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationRepository.html":{"url":"classes/NotificationRepository.html","title":"class - NotificationRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/notification.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNotification(createNotificationDTO: CreateNotificationDTO, user: User, store: Store)\n                \n            \n\n\n            \n                \n                    Defined in src/notifications/notification.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNotificationDTO\n                                    \n                                                CreateNotificationDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    store\n                                    \n                                                Store\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Store } from '../stores/store.entity';\nimport { User } from '../users/user.entity';\nimport { CreateNotificationDTO } from './dto/create-notification.dto';\nimport { Notification } from './notification.entity';\n\n@EntityRepository(Notification)\nexport class NotificationRepository extends Repository {\n  async createNotification(\n    createNotificationDTO: CreateNotificationDTO,\n    user: User,\n    store: Store,\n  ): Promise {\n    const {\n      logo,\n      notificationType,\n      body,\n      title,\n      additionalInfo,\n    } = createNotificationDTO;\n\n    const notification = new Notification();\n    notification.logo = logo;\n    notification.notificationType = notificationType;\n    notification.body = body;\n    notification.title = title;\n    notification.additionalInfo = additionalInfo;\n    notification.user = user;\n    notification.store = store;\n\n    await notification.save();\n\n    return notification;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationsController.html":{"url":"controllers/NotificationsController.html","title":"controller - NotificationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/notifications.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                notifications\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNotification\n                            \n                            \n                                    Async\n                                updateNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNotification(createNotificationDTO: CreateNotificationDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: Notification})@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/notifications/notifications.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNotificationDTO\n                                    \n                                                CreateNotificationDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNotification(id: string, updateNotificationDTO: UpdateNotificationDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/status')@ApiCreatedResponse({type: Notification})@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/notifications/notifications.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateNotificationDTO\n                                    \n                                                UpdateNotificationDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Param,\n  ParseUUIDPipe,\n  Patch,\n  Post,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiCreatedResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateNotificationDTO } from './dto/create-notification.dto';\nimport { UpdateNotificationDTO } from './dto/update-notification.dto';\nimport { Notification } from './notification.entity';\nimport { NotificationsService } from './notifications.service';\n\n@ApiTags('notifications')\n@Controller('notifications')\nexport class NotificationsController {\n  constructor(private notificationsService: NotificationsService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: Notification })\n  @UsePipes(ValidationPipe)\n  async createNotification(\n    @Body() createNotificationDTO: CreateNotificationDTO,\n  ): Promise {\n    return await this.notificationsService.createNotification(\n      createNotificationDTO,\n    );\n  }\n\n  @Patch(':id/status')\n  @ApiCreatedResponse({ type: Notification })\n  @UsePipes(ValidationPipe)\n  async updateNotification(\n    @Param('id', new ParseUUIDPipe()) id: string,\n    @Body() updateNotificationDTO: UpdateNotificationDTO,\n  ) {\n    return await this.notificationsService.updateNotification(\n      id,\n      updateNotificationDTO.isRead,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nNotificationsService \n\nNotificationsService \n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsService  -->\n\nNotificationsModule->NotificationsService \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notifications/notifications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { StoreRepository } from '../stores/store.repository';\nimport { UserRepository } from '../users/user.repository';\nimport { NotificationRepository } from './notification.repository';\nimport { NotificationsController } from './notifications.controller';\nimport { NotificationsService } from './notifications.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([NotificationRepository]),\n    TypeOrmModule.forFeature([StoreRepository]),\n    TypeOrmModule.forFeature([UserRepository]),\n  ],\n  controllers: [NotificationsController],\n  providers: [NotificationsService],\n  exports: [NotificationsService],\n})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/notifications.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNotification\n                            \n                            \n                                    Async\n                                updateNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationRepository: NotificationRepository, userRepository: UserRepository, storeRepository: StoreRepository)\n                    \n                \n                        \n                            \n                                Defined in src/notifications/notifications.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationRepository\n                                                  \n                                                        \n                                                                        NotificationRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeRepository\n                                                  \n                                                        \n                                                                        StoreRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNotification(createNotificationDTO: CreateNotificationDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/notifications/notifications.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNotificationDTO\n                                    \n                                                CreateNotificationDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNotification(id: string, isRead: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/notifications/notifications.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isRead\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { StoreRepository } from '../stores/store.repository';\nimport { UserRepository } from '../users/user.repository';\nimport { CreateNotificationDTO } from './dto/create-notification.dto';\nimport { Notification } from './notification.entity';\nimport { NotificationRepository } from './notification.repository';\n\n@Injectable()\nexport class NotificationsService {\n  constructor(\n    @InjectRepository(NotificationRepository)\n    private notificationRepository: NotificationRepository,\n\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n\n    @InjectRepository(StoreRepository)\n    private storeRepository: StoreRepository,\n  ) {}\n\n  async createNotification(\n    createNotificationDTO: CreateNotificationDTO,\n  ): Promise {\n    const { userId, storeId } = createNotificationDTO;\n\n    let user = null;\n    let store = null;\n\n    if (userId) user = await this.userRepository.findOne(userId);\n    if (storeId) store = await this.storeRepository.findOne(storeId);\n\n    if (!user && !store) {\n      throw new BadRequestException('User ID or Store ID was not found');\n    }\n\n    return await this.notificationRepository.createNotification(\n      createNotificationDTO,\n      user,\n      store,\n    );\n  }\n\n  async updateNotification(id: string, isRead: boolean): Promise {\n    const notification = await this.notificationRepository.findOne(id);\n    if (!notification)\n      throw new NotFoundException(`Unable to find notification: ${id}`);\n    notification.isRead = isRead;\n    await notification.save();\n    return notification;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/order.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cancelationDate\n                            \n                            \n                                confirmationDate\n                            \n                            \n                                coupon\n                            \n                            \n                                deliveredDate\n                            \n                            \n                                deliveryFee\n                            \n                            \n                                deliveryType\n                            \n                            \n                                discountAmount\n                            \n                            \n                                finalPrice\n                            \n                            \n                                friendlyId\n                            \n                            \n                                items\n                            \n                            \n                                itemsValue\n                            \n                            \n                                orderDoneDate\n                            \n                            \n                                orderShortDescription\n                            \n                            \n                                paymentType\n                            \n                            \n                                postScriptum\n                            \n                            \n                                status\n                            \n                            \n                                store\n                            \n                            \n                                user\n                            \n                            \n                                userDataOnOrder\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('timestamptz')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('timestamptz')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coupon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deliveredDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('timestamptz')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deliveryFee\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('money', {default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deliveryType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discountAmount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finalPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('money', {default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            friendlyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('money', {default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderDoneDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('timestamptz')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderShortDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paymentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postScriptum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Status\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDataOnOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/orders/order.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToOne } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\nimport { User } from '../users/user.entity';\nimport Status from './status.enum';\n\n@Entity()\nexport class Order extends DefaultEntity {\n  @Column()\n  friendlyId: string;\n\n  @Column('jsonb')\n  userDataOnOrder: string;\n\n  @Column({ default: Status.OPEN })\n  status: Status;\n\n  @Column()\n  paymentType: string;\n\n  @Column()\n  deliveryType: string;\n\n  @Column('jsonb')\n  items: string;\n\n  @Column()\n  orderShortDescription: string;\n\n  @Column('money', { default: 1 })\n  deliveryFee: number;\n\n  @Column('money', { default: 1 })\n  itemsValue: number;\n\n  @Column('money', { default: 1 })\n  finalPrice: number;\n\n  @Column({ default: 0 })\n  discountAmount: number;\n\n  @Column()\n  coupon: string;\n\n  @Column()\n  postScriptum: string;\n\n  @Column('timestamptz')\n  confirmationDate: Date;\n\n  @Column('timestamptz')\n  orderDoneDate: Date;\n\n  @Column('timestamptz')\n  deliveredDate: Date;\n\n  @Column('timestamptz')\n  cancelationDate: Date;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => User)\n  @JoinColumn()\n  user: User;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Store)\n  @JoinColumn()\n  store: Store;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('orders')\nexport class OrdersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './orders.service';\n\n@Module({\n  controllers: [OrdersController],\n  providers: [OrdersService]\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class OrdersService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addons\n                            \n                            \n                                catalog\n                            \n                            \n                                description\n                            \n                            \n                                discounts\n                            \n                            \n                                image\n                            \n                            \n                                isEnabled\n                            \n                            \n                                numberOfSold\n                            \n                            \n                                options\n                            \n                            \n                                price\n                            \n                            \n                                section\n                            \n                            \n                                title\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            catalog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Catalog\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {eager: false, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Image\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfSold\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('money', {default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            section\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Section\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/product.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, OneToOne } from 'typeorm';\nimport { Catalog } from '../catalogs/catalog.entity';\nimport { Image } from '../images/image.entity';\nimport { Section } from '../sections/section.entity';\nimport { DefaultEntity } from '../shared/default.entity';\n\n@Entity()\nexport class Product extends DefaultEntity {\n  @Column({ default: true })\n  isEnabled: boolean;\n\n  @Column()\n  title: string;\n\n  @Column()\n  description: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Image)\n  @JoinColumn()\n  image: Image;\n\n  @Column('jsonb')\n  options: string;\n\n  @Column('jsonb')\n  discounts: string;\n\n  @Column('jsonb')\n  addons: string;\n\n  @Column('money', { default: 1 })\n  price: number;\n\n  @Column({ default: 0 })\n  numberOfSold: number;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Section)\n  @JoinColumn()\n  section: Section;\n\n  @ManyToOne(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Catalog,\n    catalog => catalog.addons,\n    { eager: false, onDelete: 'CASCADE' },\n  )\n  catalog: Catalog;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('products')\nexport class ProductsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService\n\nProductsService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\n\n@Module({\n  controllers: [ProductsController],\n  providers: [ProductsService]\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ProductsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PushToken.html":{"url":"classes/PushToken.html","title":"class - PushToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PushToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pushtokens/pushtoken.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEnabled\n                            \n                            \n                                pushToken\n                            \n                            \n                                store\n                            \n                            \n                                user\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pushtokens/pushtoken.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pushToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pushtokens/pushtoken.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pushtokens/pushtoken.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pushtokens/pushtoken.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToOne } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\nimport { User } from '../users/user.entity';\n\n@Entity()\nexport class PushToken extends DefaultEntity {\n  @Column()\n  pushToken: string;\n\n  @Column({ default: true })\n  isEnabled: boolean;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => User, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  user: User;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Store, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  store: Store;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PushtokensController.html":{"url":"controllers/PushtokensController.html","title":"controller - PushtokensController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PushtokensController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pushtokens/pushtokens.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pushtokens\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('pushtokens')\nexport class PushtokensController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PushtokensModule.html":{"url":"modules/PushtokensModule.html","title":"module - PushtokensModule","body":"\n                   \n\n\n\n\n    Modules\n    PushtokensModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PushtokensModule\n\n\n\ncluster_PushtokensModule_providers\n\n\n\n\nPushtokensService\n\nPushtokensService\n\n\n\nPushtokensModule\n\nPushtokensModule\n\nPushtokensModule -->\n\nPushtokensService->PushtokensModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pushtokens/pushtokens.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PushtokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PushtokensController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PushtokensController } from './pushtokens.controller';\nimport { PushtokensService } from './pushtokens.service';\n\n@Module({\n  controllers: [PushtokensController],\n  providers: [PushtokensService]\n})\nexport class PushtokensModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PushtokensService.html":{"url":"injectables/PushtokensService.html","title":"injectable - PushtokensService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PushtokensService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pushtokens/pushtokens.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PushtokensService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rating.html":{"url":"classes/Rating.html","title":"class - Rating","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rating\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ratings/rating.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isApproved\n                            \n                            \n                                rating\n                            \n                            \n                                reply\n                            \n                            \n                                store\n                            \n                            \n                                text\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isApproved\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/rating.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column('numeric')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/rating.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reply\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/rating.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, {onDelete: 'CASCADE', nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/rating.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/rating.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/rating.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, {onDelete: 'CASCADE', nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/rating.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Column, Entity, ManyToOne, Unique } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\nimport { User } from '../users/user.entity';\n\n@Entity()\n@Unique(['store', 'user'])\nexport class Rating extends DefaultEntity {\n  @ApiProperty()\n  @Column()\n  title: string;\n\n  @ApiProperty()\n  @Column()\n  text: string;\n\n  @ApiPropertyOptional()\n  @Column({ nullable: true })\n  reply: string;\n\n  @ApiProperty()\n  @Column('numeric')\n  rating: number;\n\n  @ApiProperty()\n  @Column({ default: true })\n  isApproved: boolean;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ManyToOne(type => Store, { onDelete: 'CASCADE', nullable: false })\n  store: Store;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ManyToOne(type => User, { onDelete: 'CASCADE', nullable: false })\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RatingRepository.html":{"url":"classes/RatingRepository.html","title":"class - RatingRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RatingRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ratings/rating.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRating\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRating\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRating(createRatingDTO: CreateRatingDTO, user: User, store: Store)\n                \n            \n\n\n            \n                \n                    Defined in src/ratings/rating.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRatingDTO\n                                    \n                                                CreateRatingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    store\n                                    \n                                                Store\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Store } from '../stores/store.entity';\nimport { User } from '../users/user.entity';\nimport { CreateRatingDTO } from './dto/create-rating.dto';\nimport { Rating } from './rating.entity';\n\n@EntityRepository(Rating)\nexport class RatingRepository extends Repository {\n  async createRating(\n    createRatingDTO: CreateRatingDTO,\n    user: User,\n    store: Store,\n  ): Promise {\n    const { title, text, reply, rating: ratingFromRequest } = createRatingDTO;\n\n    const rating = new Rating();\n    rating.title = title;\n    rating.text = text;\n    rating.reply = reply;\n    rating.rating = ratingFromRequest;\n    rating.store = store;\n    rating.user = user;\n\n    await rating.save();\n\n    return rating;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RatingsController.html":{"url":"controllers/RatingsController.html","title":"controller - RatingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RatingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ratings/ratings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ratings\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRating\n                            \n                            \n                                    Async\n                                getRating\n                            \n                            \n                                    Async\n                                updateRating\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRating\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRating(createRatingDTO: CreateRatingDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: Rating})@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/ratings/ratings.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRatingDTO\n                                    \n                                                CreateRatingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getRating\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRating(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({type: Rating})\n                \n            \n\n            \n                \n                    Defined in src/ratings/ratings.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateRating\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRating(id: string, updateRatingDTO: UpdateRatingDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiResponse({type: Rating})@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/ratings/ratings.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRatingDTO\n                                    \n                                                UpdateRatingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseUUIDPipe,\n  Patch,\n  Post,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateRatingDTO } from './dto/create-rating.dto';\nimport { UpdateRatingDTO } from './dto/update-rating.dto';\nimport { Rating } from './rating.entity';\nimport { RatingsService } from './ratings.service';\n\n@ApiTags('ratings')\n@Controller('ratings')\nexport class RatingsController {\n  constructor(private ratingsService: RatingsService) {}\n\n  @Get()\n  @ApiResponse({ type: Rating })\n  async getRating(@Param('id') id: string): Promise {\n    return await this.ratingsService.getRating(id);\n  }\n\n  @Post()\n  @ApiResponse({ type: Rating })\n  @UsePipes(ValidationPipe)\n  async createRating(\n    @Body() createRatingDTO: CreateRatingDTO,\n  ): Promise {\n    return await this.ratingsService.createRating(createRatingDTO);\n  }\n\n  @Patch(':id')\n  @ApiResponse({ type: Rating })\n  @UsePipes(ValidationPipe)\n  async updateRating(\n    @Param('id', new ParseUUIDPipe()) id: string,\n    @Body() updateRatingDTO: UpdateRatingDTO,\n  ): Promise {\n    return await this.ratingsService.updateRating(id, updateRatingDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RatingsModule.html":{"url":"modules/RatingsModule.html","title":"module - RatingsModule","body":"\n                   \n\n\n\n\n    Modules\n    RatingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RatingsModule\n\n\n\ncluster_RatingsModule_providers\n\n\n\n\nRatingsService\n\nRatingsService\n\n\n\nRatingsModule\n\nRatingsModule\n\nRatingsModule -->\n\nRatingsService->RatingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ratings/ratings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RatingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RatingsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { StoreRepository } from '../stores/store.repository';\nimport { UserRepository } from '../users/user.repository';\nimport { RatingRepository } from './rating.repository';\nimport { RatingsController } from './ratings.controller';\nimport { RatingsService } from './ratings.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      RatingRepository,\n      UserRepository,\n      StoreRepository,\n    ]),\n  ],\n  controllers: [RatingsController],\n  providers: [RatingsService],\n})\nexport class RatingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RatingsService.html":{"url":"injectables/RatingsService.html","title":"injectable - RatingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RatingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ratings/ratings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRating\n                            \n                            \n                                    Async\n                                getRating\n                            \n                            \n                                    Async\n                                updateRating\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ratingRepository: RatingRepository, userRepository: UserRepository, storeRepository: StoreRepository)\n                    \n                \n                        \n                            \n                                Defined in src/ratings/ratings.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ratingRepository\n                                                  \n                                                        \n                                                                        RatingRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeRepository\n                                                  \n                                                        \n                                                                        StoreRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRating\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRating(createRatingDTO: CreateRatingDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/ratings/ratings.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRatingDTO\n                                    \n                                                CreateRatingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getRating\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRating(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/ratings/ratings.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateRating\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRating(id: string, updateRatingDTO: UpdateRatingDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/ratings/ratings.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRatingDTO\n                                    \n                                                UpdateRatingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { StoreRepository } from '../stores/store.repository';\nimport { UserRepository } from '../users/user.repository';\nimport { CreateRatingDTO } from './dto/create-rating.dto';\nimport { UpdateRatingDTO } from './dto/update-rating.dto';\nimport { Rating } from './rating.entity';\nimport { RatingRepository } from './rating.repository';\n\n@Injectable()\nexport class RatingsService {\n  constructor(\n    @InjectRepository(Rating)\n    private ratingRepository: RatingRepository,\n\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n\n    @InjectRepository(StoreRepository)\n    private storeRepository: StoreRepository,\n  ) {}\n\n  async getRating(id: string): Promise {\n    const rating = await this.ratingRepository.findOne(id);\n    if (!rating) throw new NotFoundException('Rating not found');\n    return rating;\n  }\n\n  async createRating(createRatingDTO: CreateRatingDTO): Promise {\n    let user = null;\n    let store = null;\n\n    if (createRatingDTO.user) {\n      user = await this.userRepository.findOne(createRatingDTO.user);\n    }\n    if (createRatingDTO.user) {\n      store = await this.storeRepository.findOne(createRatingDTO.store);\n    }\n\n    if (!user || !store) {\n      throw new BadRequestException('User ID e/or Store ID not sent');\n    }\n\n    return await this.ratingRepository.createRating(\n      createRatingDTO,\n      user,\n      store,\n    );\n  }\n\n  async updateRating(\n    id: string,\n    updateRatingDTO: UpdateRatingDTO,\n  ): Promise {\n    const rating = await this.ratingRepository.findOne(id);\n    if (!rating) {\n      throw new NotFoundException('Rating not found');\n    }\n\n    const { rating: ratingFromRequest, title, text, reply } = updateRatingDTO;\n\n    if (ratingFromRequest) {\n      rating.rating = ratingFromRequest;\n    }\n    if (title) {\n      rating.title = title;\n    }\n    if (text) {\n      rating.text = reply;\n    }\n    if (reply) {\n      rating.reply = text;\n    }\n    await rating.save();\n    return rating;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Section.html":{"url":"classes/Section.html","title":"class - Section","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Section\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sections/section.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                catalog\n                            \n                            \n                                categoryName\n                            \n                            \n                                description\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            catalog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Catalog\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {eager: false, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/sections/section.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/sections/section.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/sections/section.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, ManyToOne } from 'typeorm';\nimport { Catalog } from '../catalogs/catalog.entity';\nimport { DefaultEntity } from '../shared/default.entity';\n\n@Entity()\nexport class Section extends DefaultEntity {\n  @Column()\n  categoryName: string;\n\n  @Column()\n  description: string;\n\n  @ManyToOne(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Catalog,\n    catalog => catalog.addons,\n    { eager: false, onDelete: 'CASCADE' },\n  )\n  catalog: Catalog;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SectionsController.html":{"url":"controllers/SectionsController.html","title":"controller - SectionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SectionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sections/sections.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sections\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('sections')\nexport class SectionsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SectionsModule.html":{"url":"modules/SectionsModule.html","title":"module - SectionsModule","body":"\n                   \n\n\n\n\n    Modules\n    SectionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SectionsModule\n\n\n\ncluster_SectionsModule_providers\n\n\n\n\nSectionsService\n\nSectionsService\n\n\n\nSectionsModule\n\nSectionsModule\n\nSectionsModule -->\n\nSectionsService->SectionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sections/sections.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SectionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SectionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SectionsController } from './sections.controller';\nimport { SectionsService } from './sections.service';\n\n@Module({\n  controllers: [SectionsController],\n  providers: [SectionsService]\n})\nexport class SectionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionsService.html":{"url":"injectables/SectionsService.html","title":"injectable - SectionsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SectionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sections/sections.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SectionsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Setting.html":{"url":"classes/Setting.html","title":"class - Setting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Setting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/setting.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acceptsCoupon\n                            \n                            \n                                acceptsCreditCard\n                            \n                            \n                                acceptsDebitCard\n                            \n                            \n                                acceptsMoney\n                            \n                            \n                                deliveryFeeList\n                            \n                            \n                                deliveryFeeType\n                            \n                            \n                                deliverySingleFee\n                            \n                            \n                                deliveryTime\n                            \n                            \n                                listOfAcceptedCards\n                            \n                            \n                                minimumOrderValue\n                            \n                            \n                                operationHoursType\n                            \n                            \n                                operationTimetable\n                            \n                            \n                                withdrawalTime\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acceptsCoupon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acceptsCreditCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acceptsDebitCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acceptsMoney\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deliveryFeeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deliveryFeeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DeliveryFeeType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deliverySingleFee\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('money', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deliveryTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 15})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listOfAcceptedCards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minimumOrderValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('money', {default: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            operationHoursType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OperationHoursType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            operationTimetable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('jsonb', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            withdrawalTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/settings/setting.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport DeliveryFeeType from './deliveryfeetype.enum';\nimport OperationHoursType from './operationhourstype.enum';\n\n@Entity()\nexport class Setting extends DefaultEntity {\n  @Column({ default: 15 })\n  deliveryTime: number;\n\n  @Column({ default: 10 })\n  withdrawalTime: number;\n\n  @Column('money', { default: 10 })\n  minimumOrderValue: number;\n\n  @Column({ default: OperationHoursType.ALWAYS_OPEN })\n  operationHoursType: OperationHoursType;\n\n  @Column('jsonb', { nullable: true })\n  operationTimetable: string;\n\n  @Column({ default: true })\n  acceptsCoupon: boolean;\n\n  @Column({ default: true })\n  acceptsMoney: boolean;\n\n  @Column({ default: true })\n  acceptsDebitCard: boolean;\n\n  @Column({ default: true })\n  acceptsCreditCard: boolean;\n\n  @Column('jsonb', { nullable: true })\n  listOfAcceptedCards: string;\n\n  @Column({ default: DeliveryFeeType.FREE })\n  deliveryFeeType: DeliveryFeeType;\n\n  @Column('jsonb', { nullable: true })\n  deliveryFeeList: string;\n\n  @Column('money', { nullable: true })\n  deliverySingleFee: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('settings')\nexport class SettingsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nSettingsService\n\nSettingsService\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SettingsController } from './settings.controller';\nimport { SettingsService } from './settings.service';\n\n@Module({\n  controllers: [SettingsController],\n  providers: [SettingsService]\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SettingsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SpecialtiesController.html":{"url":"controllers/SpecialtiesController.html","title":"controller - SpecialtiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SpecialtiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/specialties.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                specialties\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('specialties')\nexport class SpecialtiesController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpecialtiesModule.html":{"url":"modules/SpecialtiesModule.html","title":"module - SpecialtiesModule","body":"\n                   \n\n\n\n\n    Modules\n    SpecialtiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpecialtiesModule\n\n\n\ncluster_SpecialtiesModule_providers\n\n\n\n\nSpecialtiesService\n\nSpecialtiesService\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nSpecialtiesModule -->\n\nSpecialtiesService->SpecialtiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specialties/specialties.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SpecialtiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SpecialtiesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SpecialtiesController } from './specialties.controller';\nimport { SpecialtiesService } from './specialties.service';\n\n@Module({\n  controllers: [SpecialtiesController],\n  providers: [SpecialtiesService]\n})\nexport class SpecialtiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpecialtiesService.html":{"url":"injectables/SpecialtiesService.html","title":"injectable - SpecialtiesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpecialtiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/specialties.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SpecialtiesService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Specialty.html":{"url":"classes/Specialty.html","title":"class - Specialty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Specialty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/specialty.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                slug\n                            \n                            \n                                stores\n                            \n                            \n                                title\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/specialties/specialty.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/specialties/specialty.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stores\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/specialties/specialty.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/specialties/specialty.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinTable, ManyToMany } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\n\n@Entity()\nexport class Specialty extends DefaultEntity {\n  @Column()\n  title: string;\n\n  @Column()\n  description: string;\n\n  @Column()\n  slug: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ManyToMany(type => Store)\n  @JoinTable()\n  stores: Store[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Store.html":{"url":"classes/Store.html","title":"class - Store","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Store\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stores/store.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                backgroundColor\n                            \n                            \n                                banner\n                            \n                            \n                                city\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                isAcceptingPickUp\n                            \n                            \n                                isBlocked\n                            \n                            \n                                isDelivering\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isOpen\n                            \n                            \n                                likes\n                            \n                            \n                                logo\n                            \n                            \n                                numberOfRatings\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                predominantColor\n                            \n                            \n                                rating\n                            \n                            \n                                settings\n                            \n                            \n                                storeName\n                            \n                            \n                                storeTypes\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE', nullable: false})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backgroundColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: '#EEE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            banner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Image\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE', nullable: true})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         City\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE', nullable: false})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAcceptingPickUp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBlocked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDelivering\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Image\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE', nullable: true})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfRatings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            predominantColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: '#000'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('numeric', {default: 5})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Setting\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE', nullable: false})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StoreType[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stores/store.entity.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToMany, OneToOne } from 'typeorm';\nimport { Address } from '../adresses/address.entity';\nimport { City } from '../cities/city.entity';\nimport { Image } from '../images/image.entity';\nimport { Setting } from '../settings/setting.entity';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { StoreType } from '../storetypes/storetype.entity';\n\n@Entity()\nexport class Store extends DefaultEntity {\n  @Column()\n  storeName: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  description: string;\n\n  @Column()\n  phoneNumber: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Image, { onDelete: 'CASCADE', nullable: true })\n  @JoinColumn()\n  banner: Image;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Image, { onDelete: 'CASCADE', nullable: true })\n  @JoinColumn()\n  logo: Image;\n\n  @Column({ default: false })\n  isOpen: boolean;\n\n  @Column({ default: false })\n  isDelivering: boolean;\n\n  @Column({ default: false })\n  isAcceptingPickUp: boolean;\n\n  @Column('numeric', { default: 5 })\n  rating: number;\n\n  @Column({ default: 0 })\n  likes: number;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Address, { onDelete: 'CASCADE', nullable: false })\n  @JoinColumn()\n  address: Address;\n\n  @Column({ default: false })\n  isEnabled: boolean;\n\n  @Column({ default: false })\n  isBlocked: boolean;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Setting, { onDelete: 'CASCADE', nullable: false })\n  @JoinColumn()\n  settings: Setting;\n\n  @Column({ default: 0 })\n  numberOfRatings: number;\n\n  @Column({ default: '#000' })\n  predominantColor: string;\n\n  @Column({ default: '#EEE' })\n  backgroundColor: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => City, { onDelete: 'CASCADE', nullable: false })\n  @JoinColumn()\n  city: City;\n\n  @OneToMany(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => StoreType,\n    storeType => storeType.store,\n    { eager: true, onDelete: 'CASCADE' },\n  )\n  storeTypes: StoreType[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoreRepository.html":{"url":"classes/StoreRepository.html","title":"class - StoreRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoreRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stores/store.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Store } from './store.entity';\n\n@EntityRepository(Store)\nexport class StoreRepository extends Repository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoreType.html":{"url":"classes/StoreType.html","title":"class - StoreType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoreType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/storetypes/storetype.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEnabled\n                            \n                            \n                                listPosition\n                            \n                            \n                                slug\n                            \n                            \n                                store\n                            \n                            \n                                title\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/storetypes/storetype.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/storetypes/storetype.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/storetypes/storetype.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {eager: false, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/storetypes/storetype.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/storetypes/storetype.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, ManyToOne } from 'typeorm';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\n\n@Entity()\nexport class StoreType extends DefaultEntity {\n  @Column()\n  title: string;\n\n  @Column({ default: true })\n  isEnabled: boolean;\n\n  @Column({ default: 0 })\n  listPosition: number;\n\n  @Column()\n  slug: string;\n\n  @ManyToOne(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Store,\n    store => store.storeTypes,\n    { eager: false, onDelete: 'CASCADE' },\n  )\n  store: Store;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StoresController.html":{"url":"controllers/StoresController.html","title":"controller - StoresController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StoresController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stores/stores.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stores\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('stores')\nexport class StoresController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoresModule.html":{"url":"modules/StoresModule.html","title":"module - StoresModule","body":"\n                   \n\n\n\n\n    Modules\n    StoresModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StoresModule\n\n\n\ncluster_StoresModule_providers\n\n\n\n\nStoresService\n\nStoresService\n\n\n\nStoresModule\n\nStoresModule\n\nStoresModule -->\n\nStoresService->StoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stores/stores.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StoresService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StoresController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { StoreRepository } from './store.repository';\nimport { StoresController } from './stores.controller';\nimport { StoresService } from './stores.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([StoreRepository])],\n  controllers: [StoresController],\n  providers: [StoresService],\n})\nexport class StoresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoresService.html":{"url":"injectables/StoresService.html","title":"injectable - StoresService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StoresService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stores/stores.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class StoresService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StoretypesController.html":{"url":"controllers/StoretypesController.html","title":"controller - StoretypesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StoretypesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/storetypes/storetypes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                storetypes\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('storetypes')\nexport class StoretypesController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoretypesModule.html":{"url":"modules/StoretypesModule.html","title":"module - StoretypesModule","body":"\n                   \n\n\n\n\n    Modules\n    StoretypesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StoretypesModule\n\n\n\ncluster_StoretypesModule_providers\n\n\n\n\nStoretypesService\n\nStoretypesService\n\n\n\nStoretypesModule\n\nStoretypesModule\n\nStoretypesModule -->\n\nStoretypesService->StoretypesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/storetypes/storetypes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StoretypesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StoretypesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StoretypesController } from './storetypes.controller';\nimport { StoretypesService } from './storetypes.service';\n\n@Module({\n  controllers: [StoretypesController],\n  providers: [StoretypesService]\n})\nexport class StoretypesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoretypesService.html":{"url":"injectables/StoretypesService.html","title":"injectable - StoretypesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StoretypesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/storetypes/storetypes.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class StoretypesService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNotificationDTO.html":{"url":"classes/UpdateNotificationDTO.html","title":"class - UpdateNotificationDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNotificationDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/dto/update-notification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isRead\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRead\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/notifications/dto/update-notification.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean } from 'class-validator';\n\nexport class UpdateNotificationDTO {\n  @ApiProperty()\n  @IsBoolean()\n  isRead: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRatingDTO.html":{"url":"classes/UpdateRatingDTO.html","title":"class - UpdateRatingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRatingDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ratings/dto/update-rating.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rating\n                            \n                            \n                                reply\n                            \n                            \n                                text\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({default: 1})@IsNumber()@IsNotEmpty()@Min(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/update-rating.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reply\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/update-rating.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/update-rating.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ratings/dto/update-rating.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString, Min } from 'class-validator';\n\nexport class UpdateRatingDTO {\n  @ApiPropertyOptional({ default: 1 })\n  @IsNumber()\n  @IsNotEmpty()\n  @Min(1)\n  rating: number;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsNotEmpty()\n  text: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsNotEmpty()\n  reply: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsedCoupon.html":{"url":"classes/UsedCoupon.html","title":"class - UsedCoupon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsedCoupon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usedcoupons/usedcoupon.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coupon\n                            \n                            \n                                user\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coupon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Coupon\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/usedcoupons/usedcoupon.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/usedcoupons/usedcoupon.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, JoinColumn, OneToOne } from 'typeorm';\nimport { Coupon } from '../coupons/coupon.entity';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { User } from '../users/user.entity';\n\n@Entity()\nexport class UsedCoupon extends DefaultEntity {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Coupon, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  coupon: Coupon;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => User, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsedcouponsController.html":{"url":"controllers/UsedcouponsController.html","title":"controller - UsedcouponsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsedcouponsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usedcoupons/usedcoupons.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                usedcoupons\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('usedcoupons')\nexport class UsedcouponsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsedcouponsModule.html":{"url":"modules/UsedcouponsModule.html","title":"module - UsedcouponsModule","body":"\n                   \n\n\n\n\n    Modules\n    UsedcouponsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsedcouponsModule\n\n\n\ncluster_UsedcouponsModule_providers\n\n\n\n\nUsedcouponsService\n\nUsedcouponsService\n\n\n\nUsedcouponsModule\n\nUsedcouponsModule\n\nUsedcouponsModule -->\n\nUsedcouponsService->UsedcouponsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/usedcoupons/usedcoupons.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsedcouponsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsedcouponsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsedcouponsController } from './usedcoupons.controller';\nimport { UsedcouponsService } from './usedcoupons.service';\n\n@Module({\n  controllers: [UsedcouponsController],\n  providers: [UsedcouponsService]\n})\nexport class UsedcouponsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsedcouponsService.html":{"url":"injectables/UsedcouponsService.html","title":"injectable - UsedcouponsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsedcouponsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usedcoupons/usedcoupons.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UsedcouponsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DefaultEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adresses\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                image\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                selectedCity\n                            \n                            \n                                store\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adresses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('timestamptz', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 'O'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Image\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         City\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         DefaultEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         DefaultEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToMany, OneToOne } from 'typeorm';\nimport { Address } from '../adresses/address.entity';\nimport { City } from '../cities/city.entity';\nimport { Image } from '../images/image.entity';\nimport { DefaultEntity } from '../shared/default.entity';\nimport { Store } from '../stores/store.entity';\n\n@Entity()\nexport class User extends DefaultEntity {\n  @Column({ default: false })\n  firstName: string;\n\n  @Column({ default: false })\n  lastName: string;\n\n  @Column({ default: false })\n  email: string;\n\n  @Column({ nullable: true })\n  phoneNumber: string;\n\n  @Column('timestamptz', { nullable: true })\n  dateOfBirth: Date;\n\n  @Column({ default: 'O' })\n  gender: string;\n\n  @OneToMany(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type => Address,\n    address => address.user,\n    { eager: true, onDelete: 'CASCADE' },\n  )\n  adresses: Address[];\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Store, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  store: Store;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => Image, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  image: Image;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @OneToOne(type => City, { onDelete: 'CASCADE' })\n  @JoinColumn()\n  selectedCity: City;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDTO: CreateUserDTO, store: Store, image: Image, selectedCity: City)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    store\n                                    \n                                                Store\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    image\n                                    \n                                                Image\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedCity\n                                    \n                                                City\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { City } from '../cities/city.entity';\nimport { Image } from '../images/image.entity';\nimport { Store } from '../stores/store.entity';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { User } from './user.entity';\n\n@EntityRepository(User)\nexport class UserRepository extends Repository {\n  async createUser(\n    createUserDTO: CreateUserDTO,\n    store: Store,\n    image: Image,\n    selectedCity: City,\n  ): Promise {\n    const {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      dateOfBirth,\n      gender,\n    } = createUserDTO;\n    const user = new User();\n\n    user.firstName = firstName;\n    user.lastName = lastName;\n    user.email = email;\n    user.phoneNumber = phoneNumber;\n    user.dateOfBirth = dateOfBirth;\n    user.gender = gender;\n    user.store = store;\n    user.image = image;\n    user.selectedCity = selectedCity;\n\n    await user.save();\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDTO: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: User})@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { User } from './user.entity';\nimport { UsersService } from './users.service';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @Post()\n  @ApiResponse({ type: User })\n  @UsePipes(ValidationPipe)\n  async createUser(@Body() createUserDTO: CreateUserDTO): Promise {\n    return await this.usersService.createUser(createUserDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CityRepository } from '../cities/city.repository';\nimport { ImageRepository } from '../images/image.repository';\nimport { StoreRepository } from '../stores/store.repository';\nimport { UserRepository } from './user.repository';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      UserRepository,\n      ImageRepository,\n      StoreRepository,\n      CityRepository,\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, storeRepository: StoreRepository, imageRepository: ImageRepository, cityRepository: CityRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeRepository\n                                                  \n                                                        \n                                                                        StoreRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageRepository\n                                                  \n                                                        \n                                                                        ImageRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cityRepository\n                                                  \n                                                        \n                                                                        CityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDTO: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { City } from '../cities/city.entity';\nimport { CityRepository } from '../cities/city.repository';\nimport { Image } from '../images/image.entity';\nimport { ImageRepository } from '../images/image.repository';\nimport { Store } from '../stores/store.entity';\nimport { StoreRepository } from '../stores/store.repository';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { User } from './user.entity';\nimport { UserRepository } from './user.repository';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User) private userRepository: UserRepository,\n    @InjectRepository(Store) private storeRepository: StoreRepository,\n    @InjectRepository(Image) private imageRepository: ImageRepository,\n    @InjectRepository(City) private cityRepository: CityRepository,\n  ) {}\n\n  async createUser(createUserDTO: CreateUserDTO): Promise {\n    let store = null;\n    let image = null;\n    let city = null;\n\n    if (createUserDTO.storeId) {\n      store = await this.storeRepository.findOne(createUserDTO.storeId);\n    }\n\n    if (createUserDTO.imageId) {\n      image = await this.imageRepository.findOne(createUserDTO.imageId);\n    }\n\n    if (createUserDTO.selectedCityId) {\n      city = await this.cityRepository.findOne(createUserDTO.selectedCityId);\n    }\n\n    return await this.userRepository.createUser(\n      createUserDTO,\n      store,\n      image,\n      city,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/addons/addon.entity.ts\n            \n            class\n            Addon\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/addons/addons.controller.ts\n            \n            controller\n            AddonsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/addons/addons.service.ts\n            \n            injectable\n            AddonsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/adresses/address.entity.ts\n            \n            class\n            Address\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/adresses/address.repository.ts\n            \n            class\n            AddressRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/adresses/adresses.controller.ts\n            \n            controller\n            AdressesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/adresses/adresses.service.ts\n            \n            injectable\n            AdressesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/adresses/dto/create-address.dto.ts\n            \n            class\n            CreateAddressDTO\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/catalogs/catalog.entity.ts\n            \n            class\n            Catalog\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/catalogs/catalogs.controller.ts\n            \n            controller\n            CatalogsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/catalogs/catalogs.service.ts\n            \n            injectable\n            CatalogsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cities/cities.controller.ts\n            \n            controller\n            CitiesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cities/cities.service.ts\n            \n            injectable\n            CitiesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cities/city.entity.ts\n            \n            class\n            City\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/cities/city.repository.ts\n            \n            class\n            CityRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/combos/combo.entity.ts\n            \n            class\n            Combo\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/combos/combos.controller.ts\n            \n            controller\n            CombosController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/combos/combos.service.ts\n            \n            injectable\n            CombosService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/complaints/complaint.entity.ts\n            \n            class\n            Complaint\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/complaints/complaint.repository.ts\n            \n            class\n            ComplaintRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/complaints/complaints.controller.ts\n            \n            controller\n            ComplaintsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/complaints/complaints.service.ts\n            \n            injectable\n            ComplaintsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/complaints/dto/create-complaint.dto.ts\n            \n            class\n            CreateComplaintDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/cloudinary.config.ts\n            \n            variable\n            avatarOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cloudinary.config.ts\n            \n            variable\n            bannerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cloudinary.config.ts\n            \n            variable\n            cloudinaryConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cloudinary.config.ts\n            \n            variable\n            defaultOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cloudinary.config.ts\n            \n            variable\n            logoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cloudinary.config.ts\n            \n            variable\n            productOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/swagger.config.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/coupons/coupon.entity.ts\n            \n            class\n            Coupon\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/coupons/coupons.controller.ts\n            \n            controller\n            CouponsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/coupons/coupons.service.ts\n            \n            injectable\n            CouponsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/favorites/favorite.entity.ts\n            \n            class\n            Favorite\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/favorites/favorites.controller.ts\n            \n            controller\n            FavoritesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/favorites/favorites.service.ts\n            \n            injectable\n            FavoritesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/dto/create-image.dto.ts\n            \n            class\n            CreateImageDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/dto/image.dto.ts\n            \n            class\n            ImageDTO\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/images/image.entity.ts\n            \n            class\n            Image\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/images/image.repository.ts\n            \n            class\n            ImageRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/images/images.controller.ts\n            \n            controller\n            ImagesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/images/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notifications/dto/create-notification.dto.ts\n            \n            class\n            CreateNotificationDTO\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/notifications/dto/update-notification.dto.ts\n            \n            class\n            UpdateNotificationDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/notifications/notification.entity.ts\n            \n            class\n            Notification\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/notifications/notification.repository.ts\n            \n            class\n            NotificationRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/notifications/notifications.controller.ts\n            \n            controller\n            NotificationsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/notifications/notifications.service.ts\n            \n            injectable\n            NotificationsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orders/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pushtokens/pushtoken.entity.ts\n            \n            class\n            PushToken\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/pushtokens/pushtokens.controller.ts\n            \n            controller\n            PushtokensController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pushtokens/pushtokens.service.ts\n            \n            injectable\n            PushtokensService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ratings/dto/create-rating.dto.ts\n            \n            class\n            CreateRatingDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/ratings/dto/update-rating.dto.ts\n            \n            class\n            UpdateRatingDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/ratings/rating.entity.ts\n            \n            class\n            Rating\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/ratings/rating.repository.ts\n            \n            class\n            RatingRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/ratings/ratings.controller.ts\n            \n            controller\n            RatingsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ratings/ratings.service.ts\n            \n            injectable\n            RatingsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/sections/section.entity.ts\n            \n            class\n            Section\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/sections/sections.controller.ts\n            \n            controller\n            SectionsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sections/sections.service.ts\n            \n            injectable\n            SectionsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/settings/setting.entity.ts\n            \n            class\n            Setting\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/settings/settings.controller.ts\n            \n            controller\n            SettingsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/default.entity.ts\n            \n            class\n            DefaultEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/specialties/specialties.controller.ts\n            \n            controller\n            SpecialtiesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specialties/specialties.service.ts\n            \n            injectable\n            SpecialtiesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specialties/specialty.entity.ts\n            \n            class\n            Specialty\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/stores/store.entity.ts\n            \n            class\n            Store\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/stores/store.repository.ts\n            \n            class\n            StoreRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stores/stores.controller.ts\n            \n            controller\n            StoresController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stores/stores.service.ts\n            \n            injectable\n            StoresService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/storetypes/storetype.entity.ts\n            \n            class\n            StoreType\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/storetypes/storetypes.controller.ts\n            \n            controller\n            StoretypesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/storetypes/storetypes.service.ts\n            \n            injectable\n            StoretypesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usedcoupons/usedcoupon.entity.ts\n            \n            class\n            UsedCoupon\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/usedcoupons/usedcoupons.controller.ts\n            \n            controller\n            UsedcouponsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usedcoupons/usedcoupons.service.ts\n            \n            injectable\n            UsedcouponsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/users/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.7\n        \n            @nestjs/typeorm : ^7.0.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            cloudinary : ^1.21.0\n        \n            dot-env : ^0.0.1\n        \n            pg : ^8.2.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.25\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DeliveryFeeType   (src/.../deliveryfeetype.enum.ts)\n                        \n                        \n                            Gender   (src/.../gender.enum.ts)\n                        \n                        \n                            ImageType   (src/.../imageType.enum.ts)\n                        \n                        \n                            ItemType   (src/.../itemtype.enum.ts)\n                        \n                        \n                            NotificationType   (src/.../notificationtype.enum.ts)\n                        \n                        \n                            OperationHoursType   (src/.../operationhourstype.enum.ts)\n                        \n                        \n                            Status   (src/.../status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/settings/deliveryfeetype.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DeliveryFeeType\n                    \n                \n                        \n                            \n                                 FREE\n                            \n                        \n                        \n                            \n                                Value : FREE\n                            \n                        \n                        \n                            \n                                 TABLE\n                            \n                        \n                        \n                            \n                                Value : TABLE\n                            \n                        \n                        \n                            \n                                 SINGLE_FEE\n                            \n                        \n                        \n                            \n                                Value : SINGLE_FEE\n                            \n                        \n            \n        \n\n    src/users/gender.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : M\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : O\n                            \n                        \n            \n        \n\n    src/images/imageType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ImageType\n                    \n                \n                        \n                            \n                                 AVATAR\n                            \n                        \n                        \n                            \n                                Value : AVATAR\n                            \n                        \n                        \n                            \n                                 BANNER\n                            \n                        \n                        \n                            \n                                Value : BANNER\n                            \n                        \n                        \n                            \n                                 GENERAL\n                            \n                        \n                        \n                            \n                                Value : GENERAL\n                            \n                        \n                        \n                            \n                                 LOGO\n                            \n                        \n                        \n                            \n                                Value : LOGO\n                            \n                        \n                        \n                            \n                                 PRODUCT\n                            \n                        \n                        \n                            \n                                Value : PRODUCT\n                            \n                        \n            \n        \n\n    src/complaints/itemtype.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ItemType\n                    \n                \n                        \n                            \n                                 GENERAL\n                            \n                        \n                        \n                            \n                                Value : general\n                            \n                        \n                        \n                            \n                                 RATING\n                            \n                        \n                        \n                            \n                                Value : rating\n                            \n                        \n                        \n                            \n                                 IMAGE\n                            \n                        \n                        \n                            \n                                Value : image\n                            \n                        \n                        \n                            \n                                 PRODUCT\n                            \n                        \n                        \n                            \n                                Value : product\n                            \n                        \n                        \n                            \n                                 COMBO\n                            \n                        \n                        \n                            \n                                Value : combo\n                            \n                        \n                        \n                            \n                                 STORE\n                            \n                        \n                        \n                            \n                                Value : store\n                            \n                        \n            \n        \n\n    src/notifications/notificationtype.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationType\n                    \n                \n                        \n                            \n                                 CONFIRMED_ORDER\n                            \n                        \n                        \n                            \n                                Value : CONFIRMED_ORDER\n                            \n                        \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : DELIVERED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 GENERAL\n                            \n                        \n                        \n                            \n                                Value : GENERAL\n                            \n                        \n                        \n                            \n                                 IN_DELIVERY\n                            \n                        \n                        \n                            \n                                Value : IN_DELIVERY\n                            \n                        \n                        \n                            \n                                 NEW_ORDER\n                            \n                        \n                        \n                            \n                                Value : NEW_ORDER\n                            \n                        \n                        \n                            \n                                 ORDER_CANCELED_BY_STORE\n                            \n                        \n                        \n                            \n                                Value : ORDER_CANCELED_BY_STORE\n                            \n                        \n                        \n                            \n                                 ORDER_CANCELED_BY_USER\n                            \n                        \n                        \n                            \n                                Value : ORDER_CANCELED_BY_USER\n                            \n                        \n                        \n                            \n                                 RATING\n                            \n                        \n                        \n                            \n                                Value : RATING\n                            \n                        \n                        \n                            \n                                 RATING_REQUEST\n                            \n                        \n                        \n                            \n                                Value : RATING_REQUEST\n                            \n                        \n                        \n                            \n                                 READY_FOR_PICKUP\n                            \n                        \n                        \n                            \n                                Value : READY_FOR_PICKUP\n                            \n                        \n            \n        \n\n    src/settings/operationhourstype.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationHoursType\n                    \n                \n                        \n                            \n                                 CUSTOM\n                            \n                        \n                        \n                            \n                                Value : CUSTOM\n                            \n                        \n                        \n                            \n                                 ALWAYS_OPEN\n                            \n                        \n                        \n                            \n                                Value : ALWAYS_OPEN\n                            \n                        \n            \n        \n\n    src/orders/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : OPEN\n                            \n                        \n                        \n                            \n                                 CONFIRMED\n                            \n                        \n                        \n                            \n                                Value : CONFIRMED\n                            \n                        \n                        \n                            \n                                 ON_DELIVERY\n                            \n                        \n                        \n                            \n                                Value : ON_DELIVERY\n                            \n                        \n                        \n                            \n                                 READY_FOR_PICKUP\n                            \n                        \n                        \n                            \n                                Value : READY_FOR_PICKUP\n                            \n                        \n                        \n                            \n                                 CANCELED_BY_USER\n                            \n                        \n                        \n                            \n                                Value : CANCELED_BY_USER\n                            \n                        \n                        \n                            \n                                 CANCELED_BY_STORE\n                            \n                        \n                        \n                            \n                                Value : CANCELED_BY_STORE\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : DELIVERED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddonsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdressesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatalogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CombosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComplaintsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CouponsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PushtokensModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RatingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SectionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpecialtiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoresModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoretypesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsedcouponsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddonsModule\n\n\n\ncluster_AddonsModule_providers\n\n\n\ncluster_AdressesModule\n\n\n\ncluster_AdressesModule_exports\n\n\n\ncluster_AdressesModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CatalogsModule\n\n\n\ncluster_CatalogsModule_providers\n\n\n\ncluster_CitiesModule\n\n\n\ncluster_CitiesModule_providers\n\n\n\ncluster_CombosModule\n\n\n\ncluster_CombosModule_providers\n\n\n\ncluster_ComplaintsModule\n\n\n\ncluster_ComplaintsModule_providers\n\n\n\ncluster_CouponsModule\n\n\n\ncluster_CouponsModule_providers\n\n\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_providers\n\n\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_PushtokensModule\n\n\n\ncluster_PushtokensModule_providers\n\n\n\ncluster_RatingsModule\n\n\n\ncluster_RatingsModule_providers\n\n\n\ncluster_SectionsModule\n\n\n\ncluster_SectionsModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_SpecialtiesModule\n\n\n\ncluster_SpecialtiesModule_providers\n\n\n\ncluster_StoresModule\n\n\n\ncluster_StoresModule_providers\n\n\n\ncluster_StoretypesModule\n\n\n\ncluster_StoretypesModule_providers\n\n\n\ncluster_UsedcouponsModule\n\n\n\ncluster_UsedcouponsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAddonsService\n\nAddonsService\n\n\n\nAddonsModule\n\nAddonsModule\n\nAddonsModule -->\n\nAddonsService->AddonsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddonsModule->AppModule\n\n\n\n\n\nAdressesService \n\nAdressesService \n\n\n\nAdressesModule\n\nAdressesModule\n\nAdressesService  -->\n\nAdressesModule->AdressesService \n\n\n\nAppModule -->\n\nAdressesModule->AppModule\n\n\n\n\n\nAdressesService\n\nAdressesService\n\nAdressesModule -->\n\nAdressesService->AdressesModule\n\n\n\n\n\nCatalogsModule\n\nCatalogsModule\n\nAppModule -->\n\nCatalogsModule->AppModule\n\n\n\n\n\nCitiesModule\n\nCitiesModule\n\nAppModule -->\n\nCitiesModule->AppModule\n\n\n\n\n\nCombosModule\n\nCombosModule\n\nAppModule -->\n\nCombosModule->AppModule\n\n\n\n\n\nComplaintsModule\n\nComplaintsModule\n\nAppModule -->\n\nComplaintsModule->AppModule\n\n\n\n\n\nCouponsModule\n\nCouponsModule\n\nAppModule -->\n\nCouponsModule->AppModule\n\n\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nAppModule -->\n\nFavoritesModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\n\n\nNotificationsService \n\nNotificationsService \n\nNotificationsService  -->\n\nNotificationsModule->NotificationsService \n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nPushtokensModule\n\nPushtokensModule\n\nAppModule -->\n\nPushtokensModule->AppModule\n\n\n\n\n\nRatingsModule\n\nRatingsModule\n\nAppModule -->\n\nRatingsModule->AppModule\n\n\n\n\n\nSectionsModule\n\nSectionsModule\n\nAppModule -->\n\nSectionsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nAppModule -->\n\nSpecialtiesModule->AppModule\n\n\n\n\n\nStoresModule\n\nStoresModule\n\nAppModule -->\n\nStoresModule->AppModule\n\n\n\n\n\nStoretypesModule\n\nStoretypesModule\n\nAppModule -->\n\nStoretypesModule->AppModule\n\n\n\n\n\nUsedcouponsModule\n\nUsedcouponsModule\n\nAppModule -->\n\nUsedcouponsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nCatalogsService\n\nCatalogsService\n\nCatalogsModule -->\n\nCatalogsService->CatalogsModule\n\n\n\n\n\nCitiesService\n\nCitiesService\n\nCitiesModule -->\n\nCitiesService->CitiesModule\n\n\n\n\n\nCombosService\n\nCombosService\n\nCombosModule -->\n\nCombosService->CombosModule\n\n\n\n\n\nComplaintsService\n\nComplaintsService\n\nComplaintsModule -->\n\nComplaintsService->ComplaintsModule\n\n\n\n\n\nCouponsService\n\nCouponsService\n\nCouponsModule -->\n\nCouponsService->CouponsModule\n\n\n\n\n\nFavoritesService\n\nFavoritesService\n\nFavoritesModule -->\n\nFavoritesService->FavoritesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nPushtokensService\n\nPushtokensService\n\nPushtokensModule -->\n\nPushtokensService->PushtokensModule\n\n\n\n\n\nRatingsService\n\nRatingsService\n\nRatingsModule -->\n\nRatingsService->RatingsModule\n\n\n\n\n\nSectionsService\n\nSectionsService\n\nSectionsModule -->\n\nSectionsService->SectionsModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nSpecialtiesService\n\nSpecialtiesService\n\nSpecialtiesModule -->\n\nSpecialtiesService->SpecialtiesModule\n\n\n\n\n\nStoresService\n\nStoresService\n\nStoresModule -->\n\nStoresService->StoresModule\n\n\n\n\n\nStoretypesService\n\nStoretypesService\n\nStoretypesModule -->\n\nStoretypesService->StoretypesModule\n\n\n\n\n\nUsedcouponsService\n\nUsedcouponsService\n\nUsedcouponsModule -->\n\nUsedcouponsService->UsedcouponsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            avatarOptions   (src/.../cloudinary.config.ts)\n                        \n                        \n                            bannerOptions   (src/.../cloudinary.config.ts)\n                        \n                        \n                            cloudinaryConfig   (src/.../cloudinary.config.ts)\n                        \n                        \n                            defaultOptions   (src/.../cloudinary.config.ts)\n                        \n                        \n                            logoOptions   (src/.../cloudinary.config.ts)\n                        \n                        \n                            options   (src/.../swagger.config.ts)\n                        \n                        \n                            productOptions   (src/.../cloudinary.config.ts)\n                        \n                        \n                            typeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/cloudinary.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            avatarOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  base64prefix: 'data:image/jpeg;base64,',\n  options: {\n    transformation: [\n      {\n        width: 720,\n        height: 720,\n        gravity: 'auto:face',\n        crop: 'fill',\n        format: 'jpg',\n        quality: 'auto',\n      },\n    ],\n    eager: [\n      {\n        width: 320,\n        height: 320,\n        gravity: 'auto:face',\n        crop: 'fill',\n        format: 'jpg',\n        quality: 'auto',\n      },\n    ],\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bannerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  base64prefix: 'data:image/jpeg;base64,',\n  options: {\n    transformation: [\n      {\n        width: 1920,\n        height: 1920,\n        crop: 'limit',\n        format: 'jpg',\n        quality: 'auto',\n      },\n    ],\n    eager: [\n      {\n        width: 960,\n        height: 960,\n        crop: 'limit',\n        format: 'jpg',\n        quality: 'auto',\n      },\n    ],\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cloudinaryConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  api_key: process.env.CLOUDINARY_API_KEY,\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  api_secret: process.env.CLOUDINARY_API_SECRET,\n  secure: true,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  base64prefix: 'data:image/jpeg;base64,',\n  options: {\n    transformation: [\n      {\n        width: 1920,\n        height: 1920,\n        crop: 'limit',\n        format: 'jpg',\n        quality: 'auto',\n      },\n    ],\n    eager: [\n      {\n        width: 960,\n        height: 960,\n        crop: 'limit',\n        format: 'jpg',\n        quality: 'auto',\n      },\n    ],\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  base64prefix: 'data:image/png;base64,',\n  options: {\n    transformation: [\n      {\n        width: 720,\n        height: 720,\n        crop: 'fill',\n        format: 'png',\n        quality: 'auto',\n      },\n    ],\n    eager: [\n      {\n        width: 320,\n        height: 320,\n        crop: 'fill',\n        format: 'png',\n        quality: 'auto',\n      },\n    ],\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  base64prefix: 'data:image/jpeg;base64,',\n  options: {\n    transformation: [\n      {\n        width: 1080,\n        height: 1080,\n        format: 'jpg',\n        quality: 'auto',\n        crop: 'limit',\n      },\n    ],\n    eager: [\n      {\n        width: 600,\n        height: 600,\n        format: 'jpg',\n        quality: 'auto',\n        crop: 'limit',\n      },\n    ],\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/config/swagger.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DocumentBuilder()\n  .setTitle('Kwik API')\n  .setDescription('Kwik Platform API')\n  .setVersion('1.0')\n  .build()\n                        \n                    \n\n\n            \n        \n\n    src/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            typeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'postgres',\n  host: process.env.DB_HOST,\n  port: Number(process.env.DB_PORT),\n  username: process.env.DB_USER,\n  password: process.env.DB_PASS,\n  database: process.env.DB_DATABASE,\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n  synchronize: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
